{"version":3,"sources":["../../node_modules/@stkao05/layout-grid/src/index.js","../js/splide.js","../js/section-question.js","../js/section-reason.js","../../node_modules/micromodal/dist/micromodal.es.js","../../node_modules/selector-set/selector-set.next.js","../../node_modules/delegated-events/dist/index.js","../js/section-knowledge.js","../js/main.js"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","states_namespaceObject","r","d","CREATED","DESTROYED","IDLE","MOUNTED","MOVING","core_event","data","unsubscribe","item","elm","removeEventListener","event","handler","options","Event","on","events","split","forEach","addEventListener","push","off","filter","emit","_len","arguments","length","args","Array","_key","apply","destroy","state","initialState","curr","set","is","_extends","assign","target","i","source","keys","each","callback","some","index","values","map","isObject","subject","merge","_ref","from","to","toArray","isArray","between","m1","m2","Math","min","max","sprintf","format","replacements","replace","unit","type","parseFloat","pad","number","toPixel","root","div","create","applyStyle","position","width","append","clientWidth","dom_remove","find","selector","querySelector","child","parent","tagOrClassName","children","hasClass","tagName","tag","attrs","document","createElement","setAttribute","domify","html","innerHTML","firstChild","elms","parentElement","removeChild","appendChild","before","ref","insertBefore","styles","style","addOrRemoveClasses","classes","remove","name","classList","addClass","removeClass","className","contains","getAttribute","removeAttribute","names","getRect","getBoundingClientRect","SLIDE","LOOP","FADE","slide","Splide","Components","list","endCallback","mount","Elements","e","start","destIndex","newIndex","prevIndex","coord","done","edgeIndex","Controller","speed","rewindSpeed","transition","easing","transform","x","y","fade","slides","Fade","track","height","clientHeight","setTimeout","MESSAGE_PREFIX","error","message","console","exist","Error","ROOT","STATUS_CLASSES","active","visible","loading","DEFAULTS","rewind","waitForTransition","fixedWidth","fixedHeight","heightRatio","autoWidth","autoHeight","perPage","perMove","clones","focus","gap","padding","arrows","arrowPath","pagination","autoplay","interval","pauseOnHover","pauseOnFocus","resetProgress","lazyLoad","preloadPages","keyboard","drag","dragAngleThreshold","swipeDistanceThreshold","flickVelocityThreshold","flickPower","flickMaxPages","direction","cover","accessibility","slideFocus","isNavigation","trimSpace","updateOnMove","throttle","breakpoints","slider","container","arrow","prev","next","page","clone","progress","bar","play","pause","spinner","sr","i18n","first","last","slideX","pageX","_defineProperties","props","descriptor","configurable","writable","Element","State","STATES","_o","_i","_c","_e","_t","_proto","Constructor","protoProps","staticProps","Extensions","Transition","_this","compose","components","Component","toLowerCase","component","required","undefined","mounted","visibility","sync","splide","sibling","_this$Event","concat","go","control","wait","add","refresh","bind","completely","_this2","reverse","parseInt","created","JSON","parse","TTB","components_elements","Slides","id","window","uid","init","getClasses","Slide","collect","findParts","register","realIndex","SlideObject","STATUS_UPDATE_EVENTS","isClone","update","restoreStyles","_update","display","isActive","isVisible","ceil","trackRect","slideRect","top","bottom","left","right","isWithin","within","diff","abs","forVisibility","elements_slide","getSlide","getSlides","includeClones","getSlidesByPage","idx","toIndex","splice","loaded","images","querySelectorAll","count","img","onload","onerror","total","rootClass","floor","controller","isLoop","newOptions","silently","trim","Track","matches","String","match","indicator","parsePage","sign","toPage","hasFocus","pageLength","edge","isRtl","nextIndex","Layout","isVertical","isFade","isRTL","isLoopPending","jump","newPosition","getTrimmedPosition","toCoord","onTransitionEnd","translate","cancel","shift","toPosition","innerSize","totalSize","size","minDistance","Infinity","slideIndex","distance","slideSize","offset","cloneCount","Clones","getCloneCount","generateClones","slice","cloneDeeply","baseCount","dimension","fixedSize","cloneNode","func","timeout","layout","resize","totalHeight","totalWidth","slideHeight","slideWidth","margin","paddingTop","paddingBottom","offsetHeight","vertical","paddingLeft","paddingRight","listRect","offsetWidth","horizontal","getOwnPropertyDescriptor","maxWidth","drag_abs","MIN_VELOCITY","FRICTION_REDUCER","startCoord","startInfo","currentInfo","isDragging","axis","Drag","disabled","move","passive","end","preventDefault","analyze","cancelable","resist","_start","_end","log","shouldMove","angle","atan","PI","info","velocity","absV","destination","timeStamp","touches","_ref2","clientX","clientY","_ref3","_ref3$x","fromX","_ref3$y","duration","time","click","onClick","stopPropagation","stopImmediatePropagation","Click","capture","PAUSE_FLAGS","HOVER","FOCUS","MANUAL","XML_NAME_SPACE","PATH","SIZE","updateDisabled","_Components$Controlle","isEnough","createArrow","Arrows","appendArrows","wrapper","class","firstElementChild","Pagination","items","li","button","updateAttributes","getItem","SRC_DATA_NAME","SRCSET_DATA_NAME","ARIA_CURRENRT","ARIA_CONTROLS","ARIA_LABEL","ARIA_HIDDEN","TAB_INDEX","KEY_MAP","ltr","ArrowLeft","ArrowRight","Left","Right","rtl","ttb","ArrowUp","ArrowDown","Up","Down","a11y","allAttributes","updateSlide","initArrows","controls","updateArrows","prevLabel","nextLabel","initPagination","activeItem","label","join","updatePagination","initNavigation","main","isButton","mainSlide","updateNavigation","A11y","SYNC_EVENT","CLICK_EVENTS","TRIGGER_KEYS","COMPLETE","Options","Breakpoints","initialOptions","prevPoint","throttledCheck","check","point","mql","matchMedia","sort","n","m","Autoplay","flags","createInterval","_window","elapse","rate","requestAnimationFrame","_pause","step","timestamp","reset","switchOn","flag","f","indexOf","Cover","uncover","src","background","LazyLoad","isSequential","isNaN","image","load","loadNext","Lazyload","srcset","Keyboard","activeElement","Sync","syncMain","syncSibling","moveSibling","complete_Splide","_Core","_inheritsLoose","subClass","superClass","constructor","__proto__","mountSlider","sliderElm","focusableItems","activeSlide","forwardSlider","nodelist","res","node","mountQuestionBox","answer","box","handleAnswerSelect","mountAnswerBox","mountSmoothAnchorScroll","anchor","scrollIntoView","behavior","mountSectionQuestion","mountSectionReason","heroContainer","MicroModal","_classCallCheck","instance","TypeError","_createClass","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","_arrayLikeToArray","iter","iterator","minLen","toString","test","len","arr2","FOCUSABLE_ELEMENTS","Modal","targetModal","_ref$triggers","triggers","_ref$onShow","onShow","_ref$onClose","onClose","_ref$openTrigger","openTrigger","_ref$closeTrigger","closeTrigger","_ref$openClass","openClass","_ref$disableScroll","disableScroll","_ref$disableFocus","disableFocus","_ref$awaitCloseAnimat","awaitCloseAnimation","_ref$awaitOpenAnimati","awaitOpenAnimation","_ref$debugMode","debugMode","modal","getElementById","config","registerTriggers","onKeydown","Boolean","trigger","showModal","scrollBehaviour","addEventListeners","setFocusToFirstNode","removeEventListeners","closeModal","toggle","body","overflow","hasAttribute","keyCode","retainFocus","nodes","_this3","focusableNodes","getFocusableNodes","nodesWhichAreNotCloseTargets","offsetParent","focusedItemIndex","shiftKey","activeModal","validateModalPresence","warn","validateArgs","triggerMap","validateTriggerPresence","triggerAttr","attributes","generateTriggerMap","show","close","closeModalById","SelectorSet","selectors","selectorObjects","indexes","activeIndexes","docElem","documentElement","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","msMatchesSelector","matchesSelector","el","context","idRe","sel","element","classRe","baseVal","Map","tagRe","toUpperCase","nodeName","chunker","parseSelectorIndexes","allIndexes","allIndexesLen","j","dup","rest","exec","findByPrototype","ary","proto","isPrototypeOf","sortById","a","b","logDefaultIndexUsed","indexProto","objs","selectorIndexes","selectorIndex","k","selIndex","removedIds","removeAll","queryAll","len2","results","els","elements","len3","matchedIds","bubbleEvents","captureEvents","propagationStopped","WeakMap","immediatePropagationStopped","currentTargets","currentTargetDesc","verb","fn","queue","nodeType","_matches","matched","observers","unshift","trackPropagation","trackImmediate","getCurrentTarget","defineCurrentTarget","getter","canDispatch","eventPhase","_","dispatch","len1","fire","detail","dispatchEvent","CustomEvent","bubbles","mountSectionKnowledge","ModalManager","modalOption","modalId","skipAnimation","delta","scrollTo","num"],"mappings":"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","file":"main.db944a4c.js","sourceRoot":"../src/tmpl","sourcesContent":["const attributeDef = {\n  type: {\n    require: true,\n    value: [\"columns\", \"rows\"],\n  },\n  count: {\n    require: true,\n    value: \"number\",\n  },\n  position: {\n    require: true,\n    value: [\"top\", \"bottom\", \"left\", \"right\", \"center\", \"stretch\"],\n  },\n  margin: {\n    require: false,\n    value: (v) => CSS.supports(\"padding\", v),\n  },\n  offset: {\n    require: false,\n    value: (v) => CSS.supports(\"padding\", v),\n  },\n  gutter: {\n    require: true,\n    value: (v) => CSS.supports(\"column-gap\", v),\n  },\n  width: {\n    require: false,\n    value: (v) => CSS.supports(\"width\", v),\n  },\n  height: {\n    require: false,\n    value: (v) => CSS.supports(\"height\", v),\n  },\n};\n\nclass LayoutGrid extends HTMLElement {\n  constructor() {\n    super();\n    this.attachShadow({ mode: \"open\" });\n    this.handleShortcut = this.handleShortcut.bind(this);\n  }\n\n  connectedCallback() {\n    this.render();\n  }\n\n  disconnectedCallback() {\n    document.removeEventListener(\"keydown\", this.handleShortcut);\n  }\n\n  static get observedAttributes() {\n    return Object.keys(attributeDef);\n  }\n\n  attributeChangedCallback() {\n    this.render();\n\n    if (this.getAttribute(\"shortcut\") !== null) {\n      document.addEventListener(\"keydown\", this.handleShortcut);\n    } else {\n      document.removeEventListener(\"keydown\", this.handleShortcut);\n    }\n  }\n\n  handleShortcut(event) {\n    if (event.key === \"g\" && event.ctrlKey) {\n      if (this.style.display == \"none\") {\n        this.style.display = \"\";\n      } else {\n        this.style.display = \"none\";\n      }\n    }\n  }\n\n  render() {\n    if (!this.validateAttr()) {\n      return;\n    }\n\n    const attr = {\n      type: this.getAttribute(\"type\"),\n      count: parseInt(this.getAttribute(\"count\")),\n      position: this.getAttribute(\"position\"),\n      gutter: this.getAttribute(\"gutter\"),\n      color: this.getAttribute(\"color\"),\n      width: this.getAttribute(\"width\"),\n      height: this.getAttribute(\"height\"),\n      offset: this.getAttribute(\"offset\"),\n      margin: this.getAttribute(\"margin\"),\n    };\n\n    if (attr.color === \"\" || attr.color === null) {\n      attr.color = \"rgba(256, 0, 0, 0.1)\";\n    }\n\n    const style = {\n      display: \"grid\",\n      width: \"100%\",\n      height: \"100%\",\n      boxSizing: \"border-box\",\n    };\n\n    const length =\n      attr.position === \"stretch\"\n        ? \"auto\"\n        : `${attr.type === \"columns\" ? attr.width : attr.height}`;\n\n    const tmpl =\n      attr.type === \"columns\" ? \"gridTemplateColumns\" : \"gridTemplateRows\";\n\n    const tmplValue = range(attr.count)\n      .map(() => length)\n      .join(\" \");\n\n    style[tmpl] = tmplValue;\n\n    if (attr.gutter) {\n      const gap = attr.type === \"columns\" ? \"columnGap\" : \"rowGap\";\n      style[gap] = attr.gutter;\n    }\n\n    switch (attr.position) {\n      case \"top\": {\n        if (attr.type == \"rows\") {\n          style.alignContent = \"start\";\n        }\n        break;\n      }\n      case \"right\": {\n        if (attr.type == \"columns\") {\n          style.justifyContent = \"end\";\n        }\n        break;\n      }\n      case \"bottom\": {\n        if (attr.type == \"rows\") {\n          style.alignContent = \"end\";\n        }\n        break;\n      }\n      case \"left\": {\n        if (attr.type == \"columns\") {\n          style.justifyContent = \"start\";\n        }\n        break;\n      }\n      case \"center\": {\n        if (attr.type == \"columns\") {\n          style.justifyContent = \"center\";\n        } else {\n          style.alignContent = \"center\";\n        }\n      }\n    }\n\n    if (attr.margin || attr.offset) {\n      const val = attr.position === \"stretch\" ? attr.margin : attr.offset;\n      style.padding = attr.type === \"columns\" ? `${0} ${val}` : `${val} ${0}`;\n    }\n\n    if (this.container) {\n      this.container.remove();\n    }\n\n    this.container = document.createElement(\"div\");\n    for (let i = 0; i < attr.count; i++) {\n      const item = document.createElement(\"div\");\n      item.style.backgroundColor = attr.color;\n\n      this.container.append(item);\n    }\n\n    for (let s in style) {\n      this.container.style[s] = style[s];\n    }\n\n    this.shadowRoot.append(this.container);\n  }\n\n  validateAttr() {\n    const invalid = [];\n\n    for (const attr in attributeDef) {\n      const def = attributeDef[attr];\n      const attrValue = this.getAttribute(attr);\n\n      if (!validateAttr(def, attrValue)) {\n        invalid.push(attr);\n      }\n    }\n\n    if (invalid.length > 0) {\n      console.warn(\n        `<layout-grid> error: missing or invalid attribute value (${invalid.join(\n          \", \"\n        )})`\n      );\n      return false;\n    }\n\n    return true;\n  }\n}\n\ncustomElements.define(\"layout-grid\", LayoutGrid);\n\nfunction range(size, startAt) {\n  return [...Array(size).keys()].map((i) => i + startAt);\n}\n\nfunction validateAttr(def, attrValue) {\n  if (attrValue === null || attrValue === \"\") {\n    return !def.require;\n  }\n\n  if (Array.isArray(def.value)) {\n    return def.value.indexOf(attrValue) !== -1;\n  }\n\n  if (def.value === \"number\") {\n    return !isNaN(parseInt(attrValue));\n  }\n\n  if (typeof def.value === \"function\") {\n    return def.value(attrValue);\n  }\n\n  return true;\n}\n","/*!\n * Splide.js\n * Version  : 2.4.20\n * License  : MIT\n * Copyright: 2020 Naotoshi Fujita\n */\n/******/ (function () {\n  // webpackBootstrap\n  /******/ \"use strict\"; // The require scope\n  /******/ /******/ var __webpack_require__ = {}; /* webpack/runtime/define property getters */\n  /******/\n  /************************************************************************/\n  /******/ /******/ !(function () {\n    /******/ // define getter functions for harmony exports\n    /******/ __webpack_require__.d = function (exports, definition) {\n      /******/ for (var key in definition) {\n        /******/ if (\n          __webpack_require__.o(definition, key) &&\n          !__webpack_require__.o(exports, key)\n        ) {\n          /******/ Object.defineProperty(exports, key, {\n            enumerable: true,\n            get: definition[key],\n          });\n          /******/\n        }\n        /******/\n      }\n      /******/\n    };\n    /******/\n  })(); /* webpack/runtime/hasOwnProperty shorthand */\n  /******/\n  /******/ /******/ !(function () {\n    /******/ __webpack_require__.o = function (obj, prop) {\n      return Object.prototype.hasOwnProperty.call(obj, prop);\n    };\n    /******/\n  })(); /* webpack/runtime/make namespace object */\n  /******/\n  /******/ /******/ !(function () {\n    /******/ // define __esModule on exports\n    /******/ __webpack_require__.r = function (exports) {\n      /******/ if (typeof Symbol !== \"undefined\" && Symbol.toStringTag) {\n        /******/ Object.defineProperty(exports, Symbol.toStringTag, {\n          value: \"Module\",\n        });\n        /******/\n      }\n      /******/ Object.defineProperty(exports, \"__esModule\", { value: true });\n      /******/\n    };\n    /******/\n  })();\n  /******/\n  /************************************************************************/\n\n  // UNUSED EXPORTS: Splide\n\n  // NAMESPACE OBJECT: ./src/js/constants/states.js\n  var states_namespaceObject = {};\n  __webpack_require__.r(states_namespaceObject);\n  __webpack_require__.d(states_namespaceObject, {\n    CREATED: function () {\n      return CREATED;\n    },\n    DESTROYED: function () {\n      return DESTROYED;\n    },\n    IDLE: function () {\n      return IDLE;\n    },\n    MOUNTED: function () {\n      return MOUNTED;\n    },\n    MOVING: function () {\n      return MOVING;\n    },\n  }); // CONCATENATED MODULE: ./src/js/core/event.js\n\n  /**\n   * The function for providing an Event object simply managing events.\n   *\n   * @author    Naotoshi Fujita\n   * @copyright Naotoshi Fujita. All rights reserved.\n   */\n\n  /**\n   * The function for providing an Event object simply managing events.\n   */\n  /* harmony default export */ var core_event = function () {\n    /**\n     * Store all event data.\n     *\n     * @type {Array}\n     */\n    var data = [];\n    var Event = {\n      /**\n       * Subscribe the given event(s).\n       *\n       * @param {string}   events  - An event name. Use space to separate multiple events.\n       *                             Also, namespace is accepted by dot, such as 'resize.{namespace}'.\n       * @param {function} handler - A callback function.\n       * @param {Element}  elm     - Optional. Native event will be listened to when this arg is provided.\n       * @param {Object}   options - Optional. Options for addEventListener.\n       */\n      on: function on(events, handler, elm, options) {\n        if (elm === void 0) {\n          elm = null;\n        }\n\n        if (options === void 0) {\n          options = {};\n        }\n\n        events.split(\" \").forEach(function (event) {\n          if (elm) {\n            elm.addEventListener(event, handler, options);\n          }\n\n          data.push({\n            event: event,\n            handler: handler,\n            elm: elm,\n            options: options,\n          });\n        });\n      },\n\n      /**\n       * Unsubscribe the given event(s).\n       *\n       * @param {string}  events - A event name or names split by space.\n       * @param {Element} elm    - Optional. removeEventListener() will be called when this arg is provided.\n       */\n      off: function off(events, elm) {\n        if (elm === void 0) {\n          elm = null;\n        }\n\n        events.split(\" \").forEach(function (event) {\n          data = data.filter(function (item) {\n            if (item && item.event === event && item.elm === elm) {\n              unsubscribe(item);\n              return false;\n            }\n\n            return true;\n          });\n        });\n      },\n\n      /**\n       * Emit an event.\n       * This method is only for custom events.\n       *\n       * @param {string}  event - An event name.\n       * @param {*}       args  - Any number of arguments passed to handlers.\n       */\n      emit: function emit(event) {\n        for (\n          var _len = arguments.length,\n            args = new Array(_len > 1 ? _len - 1 : 0),\n            _key = 1;\n          _key < _len;\n          _key++\n        ) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        data.forEach(function (item) {\n          if (!item.elm && item.event.split(\".\")[0] === event) {\n            item.handler.apply(item, args);\n          }\n        });\n      },\n\n      /**\n       * Clear event data.\n       */\n      destroy: function destroy() {\n        data.forEach(unsubscribe);\n        data = [];\n      },\n    };\n    /**\n     * Remove the registered event listener.\n     *\n     * @param {Object} item - An object containing event data.\n     */\n\n    function unsubscribe(item) {\n      if (item.elm) {\n        item.elm.removeEventListener(item.event, item.handler, item.options);\n      }\n    }\n\n    return Event;\n  }; // CONCATENATED MODULE: ./src/js/core/state.js\n  /**\n   * The function providing a super simple state system.\n   *\n   * @author    Naotoshi Fujita\n   * @copyright Naotoshi Fujita. All rights reserved.\n   */\n\n  /**\n   * The function providing a super simple state system.\n   *\n   * @param {string|number} initialState - Provide the initial state value.\n   */\n  /* harmony default export */ var state = function (initialState) {\n    /**\n     * Store the current state.\n     *\n     * @type {string|number}\n     */\n    var curr = initialState;\n    return {\n      /**\n       * Change state.\n       *\n       * @param {string|number} state - A new state.\n       */\n      set: function set(state) {\n        curr = state;\n      },\n\n      /**\n       * Verify if the current state is given one or not.\n       *\n       * @param {string|number} state - A state name to be verified.\n       *\n       * @return {boolean} - True if the current state is the given one.\n       */\n      is: function is(state) {\n        return state === curr;\n      },\n    };\n  }; // CONCATENATED MODULE: ./src/js/utils/object.js\n  function _extends() {\n    _extends =\n      Object.assign ||\n      function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n          var source = arguments[i];\n          for (var key in source) {\n            if (Object.prototype.hasOwnProperty.call(source, key)) {\n              target[key] = source[key];\n            }\n          }\n        }\n        return target;\n      };\n    return _extends.apply(this, arguments);\n  }\n\n  /**\n   * Some utility functions related with Object, supporting IE.\n   *\n   * @author    Naotoshi Fujita\n   * @copyright Naotoshi Fujita. All rights reserved.\n   */\n  var keys = Object.keys;\n  /**\n   * Iterate an object like Array.forEach.\n   * IE doesn't support forEach of HTMLCollection.\n   *\n   * @param {Object}    obj       - An object.\n   * @param {function}  callback  - A function handling each value. Arguments are value, property and index.\n   */\n\n  function each(obj, callback) {\n    keys(obj).some(function (key, index) {\n      return callback(obj[key], key, index);\n    });\n  }\n  /**\n   * Return values of the given object as an array.\n   * IE doesn't support Object.values.\n   *\n   * @param {Object} obj - An object.\n   *\n   * @return {Array} - An array containing all values of the given object.\n   */\n\n  function values(obj) {\n    return keys(obj).map(function (key) {\n      return obj[key];\n    });\n  }\n  /**\n   * Check if the given subject is object or not.\n   *\n   * @param {*} subject - A subject to be verified.\n   *\n   * @return {boolean} - True if object, false otherwise.\n   */\n\n  function isObject(subject) {\n    return typeof subject === \"object\";\n  }\n  /**\n   * Merge two objects deeply.\n   *\n   * @param {Object} to   - An object where \"from\" is merged.\n   * @param {Object} from - An object merged to \"to\".\n   *\n   * @return {Object} - A merged object.\n   */\n\n  function merge(_ref, from) {\n    var to = _extends({}, _ref);\n\n    each(from, function (value, key) {\n      if (isObject(value)) {\n        if (!isObject(to[key])) {\n          to[key] = {};\n        }\n\n        to[key] = merge(to[key], value);\n      } else {\n        to[key] = value;\n      }\n    });\n    return to;\n  }\n  /**\n   * Assign all properties \"from\" to \"to\" object.\n   *\n   * @param {Object} to   - An object where properties are assigned.\n   * @param {Object} from - An object whose properties are assigned to \"to\".\n   *\n   * @return {Object} - An assigned object.\n   */\n\n  function object_assign(to, from) {\n    keys(from).forEach(function (key) {\n      if (!to[key]) {\n        Object.defineProperty(\n          to,\n          key,\n          Object.getOwnPropertyDescriptor(from, key)\n        );\n      }\n    });\n    return to;\n  } // CONCATENATED MODULE: ./src/js/utils/utils.js\n  /**\n   * A package of some miscellaneous utility functions.\n   *\n   * @author    Naotoshi Fujita\n   * @copyright Naotoshi Fujita. All rights reserved.\n   */\n\n  /**\n   * Convert the given value to array.\n   *\n   * @param {*} value - Any value.\n   *\n   * @return {*[]} - Array containing the given value.\n   */\n\n  function toArray(value) {\n    return Array.isArray(value) ? value : [value];\n  }\n  /**\n   * Check if the given value is between min and max.\n   * Min will be returned when the value is less than min or max will do when greater than max.\n   *\n   * @param {number} value - A number to be checked.\n   * @param {number} m1    - Minimum or maximum number.\n   * @param {number} m2    - Maximum or minimum number.\n   *\n   * @return {number} - A value itself, min or max.\n   */\n\n  function between(value, m1, m2) {\n    return Math.min(Math.max(value, m1 > m2 ? m2 : m1), m1 > m2 ? m1 : m2);\n  }\n  /**\n   * The sprintf method with minimum functionality.\n   *\n   * @param {string}       format       - The string format.\n   * @param {string|Array} replacements - Replacements accepting multiple arguments.\n   *\n   * @returns {string} - Converted string.\n   */\n\n  function sprintf(format, replacements) {\n    var i = 0;\n    return format.replace(/%s/g, function () {\n      return toArray(replacements)[i++];\n    });\n  }\n  /**\n   * Append px unit to the given subject if necessary.\n   *\n   * @param {number|string} value - A value that may not include an unit.\n   *\n   * @return {string} - If the value is string, return itself.\n   *                    If number, do value + \"px\". An empty string, otherwise.\n   */\n\n  function unit(value) {\n    var type = typeof value;\n\n    if (type === \"number\" && value > 0) {\n      return parseFloat(value) + \"px\";\n    }\n\n    return type === \"string\" ? value : \"\";\n  }\n  /**\n   * Pad start with 0.\n   *\n   * @param {number} number - A number to be filled with 0.\n   *\n   * @return {string|number} - Padded number.\n   */\n\n  function pad(number) {\n    return number < 10 ? \"0\" + number : number;\n  }\n  /**\n   * Convert the given value to pixel.\n   *\n   * @param {Element}       root  - Root element where a dummy div is appended.\n   * @param {string|number} value - CSS value to be converted, such as 10rem.\n   *\n   * @return {number} - Pixel.\n   */\n\n  function toPixel(root, value) {\n    if (typeof value === \"string\") {\n      var div = create(\"div\", {});\n      applyStyle(div, {\n        position: \"absolute\",\n        width: value,\n      });\n      append(root, div);\n      value = div.clientWidth;\n      dom_remove(div);\n    }\n\n    return +value || 0;\n  } // CONCATENATED MODULE: ./src/js/utils/dom.js\n  /**\n   * Some utility functions related with DOM.\n   *\n   * @author    Naotoshi Fujita\n   * @copyright Naotoshi Fujita. All rights reserved.\n   */\n\n  /**\n   * Find the first element matching the given selector.\n   * Be aware that all selectors after a space are ignored.\n   *\n   * @param {Element|Node}  elm       - An ancestor element.\n   * @param {string}        selector  - DOMString.\n   *\n   * @return {Element|null} - A found element or null.\n   */\n\n  function find(elm, selector) {\n    return elm ? elm.querySelector(selector.split(\" \")[0]) : null;\n  }\n  /**\n   * Find a first child having the given tag or class name.\n   *\n   * @param {Element} parent         - A parent element.\n   * @param {string}  tagOrClassName - A tag or class name.\n   *\n   * @return {Element|undefined} - A found element on success or undefined on failure.\n   */\n\n  function child(parent, tagOrClassName) {\n    return children(parent, tagOrClassName)[0];\n  }\n  /**\n   * Return chile elements that matches the provided tag or class name.\n   *\n   * @param {Element} parent         - A parent element.\n   * @param {string}  tagOrClassName - A tag or class name.\n   *\n   * @return {Element[]} - Found elements.\n   */\n\n  function children(parent, tagOrClassName) {\n    if (parent) {\n      return values(parent.children).filter(function (child) {\n        return (\n          hasClass(child, tagOrClassName.split(\" \")[0]) ||\n          child.tagName === tagOrClassName\n        );\n      });\n    }\n\n    return [];\n  }\n  /**\n   * Create an element with some optional attributes.\n   *\n   * @param {string} tag   - A tag name.\n   * @param {Object} attrs - An object any attribute pairs of name and value.\n   *\n   * @return {Element} - A created element.\n   */\n\n  function create(tag, attrs) {\n    var elm = document.createElement(tag);\n    each(attrs, function (value, key) {\n      return setAttribute(elm, key, value);\n    });\n    return elm;\n  }\n  /**\n   * Convert HTML string to DOM node.\n   *\n   * @param {string} html - HTML string.\n   *\n   * @return {Node} - A created node.\n   */\n\n  function domify(html) {\n    var div = create(\"div\", {});\n    div.innerHTML = html;\n    return div.firstChild;\n  }\n  /**\n   * Remove a given element from a DOM tree.\n   *\n   * @param {Element|Element[]} elms - Element(s) to be removed.\n   */\n\n  function dom_remove(elms) {\n    toArray(elms).forEach(function (elm) {\n      if (elm) {\n        var parent = elm.parentElement;\n        parent && parent.removeChild(elm);\n      }\n    });\n  }\n  /**\n   * Append a child to a given element.\n   *\n   * @param {Element} parent - A parent element.\n   * @param {Element} child  - An element to be appended.\n   */\n\n  function append(parent, child) {\n    if (parent) {\n      parent.appendChild(child);\n    }\n  }\n  /**\n   * Insert an element before the reference element.\n   *\n   * @param {Element|Node} ref - A reference element.\n   * @param {Element}      elm - An element to be inserted.\n   */\n\n  function before(elm, ref) {\n    if (elm && ref) {\n      var parent = ref.parentElement;\n      parent && parent.insertBefore(elm, ref);\n    }\n  }\n  /**\n   * Apply styles to the given element.\n   *\n   * @param {Element} elm     - An element where styles are applied.\n   * @param {Object}  styles  - Object containing styles.\n   */\n\n  function applyStyle(elm, styles) {\n    if (elm) {\n      each(styles, function (value, prop) {\n        if (value !== null) {\n          elm.style[prop] = value;\n        }\n      });\n    }\n  }\n  /**\n   * Add or remove classes to/from the element.\n   * This function is for internal usage.\n   *\n   * @param {Element}         elm     - An element where classes are added.\n   * @param {string|string[]} classes - Class names being added.\n   * @param {boolean}         remove  - Whether to remove or add classes.\n   */\n\n  function addOrRemoveClasses(elm, classes, remove) {\n    if (elm) {\n      toArray(classes).forEach(function (name) {\n        if (name) {\n          elm.classList[remove ? \"remove\" : \"add\"](name);\n        }\n      });\n    }\n  }\n  /**\n   * Add classes to the element.\n   *\n   * @param {Element}          elm     - An element where classes are added.\n   * @param {string|string[]}  classes - Class names being added.\n   */\n\n  function addClass(elm, classes) {\n    addOrRemoveClasses(elm, classes, false);\n  }\n  /**\n   * Remove a class from the element.\n   *\n   * @param {Element}         elm     - An element where classes are removed.\n   * @param {string|string[]} classes - A class name being removed.\n   */\n\n  function removeClass(elm, classes) {\n    addOrRemoveClasses(elm, classes, true);\n  }\n  /**\n   * Verify if the provided element has the class or not.\n   *\n   * @param {Element} elm       - An element.\n   * @param {string}  className - A class name.\n   *\n   * @return {boolean} - True if the element has the class or false if not.\n   */\n\n  function hasClass(elm, className) {\n    return !!elm && elm.classList.contains(className);\n  }\n  /**\n   * Set attribute to the given element.\n   *\n   * @param {Element}                 elm   - An element where an attribute is assigned.\n   * @param {string}                  name  - Attribute name.\n   * @param {string|number|boolean}   value - Attribute value.\n   */\n\n  function setAttribute(elm, name, value) {\n    if (elm) {\n      elm.setAttribute(name, value);\n    }\n  }\n  /**\n   * Get attribute from the given element.\n   *\n   * @param {Element} elm  - An element where an attribute is assigned.\n   * @param {string}  name - Attribute name.\n   *\n   * @return {string} - The value of the given attribute if available. An empty string if not.\n   */\n\n  function getAttribute(elm, name) {\n    return elm ? elm.getAttribute(name) : \"\";\n  }\n  /**\n   * Remove attribute from the given element.\n   *\n   * @param {Element|Element[]} elms  - An element where an attribute is removed.\n   * @param {string|string[]}      names - Attribute name.\n   */\n\n  function removeAttribute(elms, names) {\n    toArray(names).forEach(function (name) {\n      toArray(elms).forEach(function (elm) {\n        return elm && elm.removeAttribute(name);\n      });\n    });\n  }\n  /**\n   * Return the Rect object of the provided object.\n   *\n   * @param {Element} elm - An element.\n   *\n   * @return {ClientRect|DOMRect} - A rect object.\n   */\n\n  function getRect(elm) {\n    return elm.getBoundingClientRect();\n  }\n  /**\n   * Trigger the given callback after all images contained by the element are loaded.\n   *\n   * @param {Element}  elm      - Element that may contain images.\n   * @param {Function} callback - Callback function fired right after all images are loaded.\n   */\n\n  function loaded(elm, callback) {\n    var images = elm.querySelectorAll(\"img\");\n    var length = images.length;\n\n    if (length) {\n      var count = 0;\n      each(images, function (img) {\n        img.onload = img.onerror = function () {\n          if (++count === length) {\n            callback();\n          }\n        };\n      });\n    } else {\n      // Trigger the callback immediately if there is no image.\n      callback();\n    }\n  } // CONCATENATED MODULE: ./src/js/constants/types.js\n  /**\n   * Export slider types.\n   *\n   * @author    Naotoshi Fujita\n   * @copyright Naotoshi Fujita. All rights reserved.\n   */\n\n  /**\n   * Normal slider.\n   *\n   * @type {string}\n   */\n  var SLIDE = \"slide\";\n  /**\n   * Loop after the last slide and before the first one.\n   *\n   * @type {string}\n   */\n\n  var LOOP = \"loop\";\n  /**\n   * The track doesn't move.\n   *\n   * @type {string}\n   */\n\n  var FADE = \"fade\"; // CONCATENATED MODULE: ./src/js/transitions/slide/index.js\n  /**\n   * The component for general slide effect transition.\n   *\n   * @author    Naotoshi Fujita\n   * @copyright Naotoshi Fujita. All rights reserved.\n   */\n\n  /**\n   * The component for general slide effect transition.\n   *\n   * @param {Splide} Splide     - A Splide instance.\n   * @param {Object} Components - An object containing components.\n   *\n   * @return {Object} - The component object.\n   */\n\n  /* harmony default export */ var slide = function (Splide, Components) {\n    /**\n     * Hold the list element.\n     *\n     * @type {Element}\n     */\n    var list;\n    /**\n     * Hold the onEnd callback function.\n     *\n     * @type {function}\n     */\n\n    var endCallback;\n    return {\n      /**\n       * Called when the component is mounted.\n       */\n      mount: function mount() {\n        list = Components.Elements.list;\n        Splide.on(\n          \"transitionend\",\n          function (e) {\n            if (e.target === list && endCallback) {\n              endCallback();\n            }\n          },\n          list\n        );\n      },\n\n      /**\n       * Start transition.\n       *\n       * @param {number}   destIndex - Destination slide index that might be clone's.\n       * @param {number}   newIndex  - New index.\n       * @param {number}   prevIndex - Previous index.\n       * @param {Object}   coord     - Destination coordinates.\n       * @param {function} done      - Callback function must be invoked when transition is completed.\n       */\n      start: function start(destIndex, newIndex, prevIndex, coord, done) {\n        var options = Splide.options;\n        var edgeIndex = Components.Controller.edgeIndex;\n        var speed = options.speed;\n        endCallback = done;\n\n        if (Splide.is(SLIDE)) {\n          if (\n            (prevIndex === 0 && newIndex >= edgeIndex) ||\n            (prevIndex >= edgeIndex && newIndex === 0)\n          ) {\n            speed = options.rewindSpeed || speed;\n          }\n        }\n\n        applyStyle(list, {\n          transition: \"transform \" + speed + \"ms \" + options.easing,\n          transform: \"translate(\" + coord.x + \"px,\" + coord.y + \"px)\",\n        });\n      },\n    };\n  }; // CONCATENATED MODULE: ./src/js/transitions/fade/index.js\n  /**\n   * The component for fade transition.\n   *\n   * @author    Naotoshi Fujita\n   * @copyright Naotoshi Fujita. All rights reserved.\n   */\n\n  /**\n   * The component for fade transition.\n   *\n   * @param {Splide} Splide     - A Splide instance.\n   * @param {Object} Components - An object containing components.\n   *\n   * @return {Object} - The component object.\n   */\n\n  /* harmony default export */ var fade = function (Splide, Components) {\n    var Fade = {\n      /**\n       * Called when the component is mounted.\n       * Apply transition style to the first slide.\n       */\n      mount: function mount() {\n        apply(Splide.index);\n      },\n\n      /**\n       * Start transition.\n       *\n       * @param {number}    destIndex - Destination slide index that might be clone's.\n       * @param {number}    newIndex  - New index.\n       * @param {number}    prevIndex - Previous index.\n       * @param {Object}    coord     - Destination coordinates.\n       * @param {function}  done      - Callback function must be invoked when transition is completed.\n       */\n      start: function start(destIndex, newIndex, prevIndex, coord, done) {\n        var track = Components.Elements.track;\n        applyStyle(track, {\n          height: unit(track.clientHeight),\n        });\n        apply(newIndex);\n        setTimeout(function () {\n          done();\n          applyStyle(track, {\n            height: \"\",\n          });\n        });\n      },\n    };\n    /**\n     * Apply transition style to the slide specified by the given index.\n     *\n     * @param {number} index - A slide index.\n     */\n\n    function apply(index) {\n      var options = Splide.options;\n      applyStyle(Components.Elements.slides[index], {\n        transition: \"opacity \" + options.speed + \"ms \" + options.easing,\n      });\n    }\n\n    return Fade;\n  }; // CONCATENATED MODULE: ./src/js/transitions/index.js // CONCATENATED MODULE: ./src/js/core/composer.js\n  /**\n   * Export transition components.\n   *\n   * @author    Naotoshi Fujita\n   * @copyright Naotoshi Fujita. All rights reserved.\n   */\n\n  /**\n   * Provide a function for composing components.\n   *\n   * @author    Naotoshi Fujita\n   * @copyright Naotoshi Fujita. All rights reserved.\n   */\n\n  /**\n   * Compose components.\n   *\n   * @param {Splide}   Splide     - Splide instance.\n   * @param {Object}   Components - Additional components.\n   * @param {function} Transition - Change component for transition.\n   *\n   * @return {Object} - An object containing all components.\n   */\n\n  function compose(Splide, Components, Transition) {\n    var components = {};\n    each(Components, function (Component, name) {\n      components[name] = Component(Splide, components, name.toLowerCase());\n    });\n\n    if (!Transition) {\n      Transition = Splide.is(FADE) ? fade : slide;\n    }\n\n    components.Transition = Transition(Splide, components);\n    return components;\n  } // CONCATENATED MODULE: ./src/js/utils/error.js\n  /**\n   * Utility functions for outputting logs.\n   *\n   * @author    Naotoshi Fujita\n   * @copyright Naotoshi Fujita. All rights reserved.\n   */\n\n  /**\n   * Prefix of an error massage.\n   *\n   * @type {string}\n   */\n  var MESSAGE_PREFIX = \"[SPLIDE]\";\n  /**\n   * Display an error message on the browser console.\n   *\n   * @param {string} message - An error message.\n   */\n\n  function error(message) {\n    console.error(MESSAGE_PREFIX + \" \" + message);\n  }\n  /**\n   * Check existence of the given object and throw an error if it doesn't.\n   *\n   * @throws {Error}\n   *\n   * @param {*}      subject - A subject to be confirmed.\n   * @param {string} message - An error message.\n   */\n\n  function exist(subject, message) {\n    if (!subject) {\n      throw new Error(message);\n    }\n  } // CONCATENATED MODULE: ./src/js/constants/classes.js\n  /**\n   * Export class names.\n   *\n   * @author    Naotoshi Fujita\n   * @copyright Naotoshi Fujita. All rights reserved.\n   */\n\n  /**\n   * A root class name.\n   *\n   * @type {string}\n   */\n  var ROOT = \"splide\";\n  /**\n   * The definition table of all classes for elements.\n   * They might be modified by options.\n   *\n   * @type {Object}\n   */\n\n  var ELEMENT_CLASSES = {\n    root: ROOT,\n    slider: ROOT + \"__slider\",\n    track: ROOT + \"__track\",\n    list: ROOT + \"__list\",\n    slide: ROOT + \"__slide\",\n    container: ROOT + \"__slide__container\",\n    arrows: ROOT + \"__arrows\",\n    arrow: ROOT + \"__arrow\",\n    prev: ROOT + \"__arrow--prev\",\n    next: ROOT + \"__arrow--next\",\n    pagination: ROOT + \"__pagination\",\n    page: ROOT + \"__pagination__page\",\n    clone: ROOT + \"__slide--clone\",\n    progress: ROOT + \"__progress\",\n    bar: ROOT + \"__progress__bar\",\n    autoplay: ROOT + \"__autoplay\",\n    play: ROOT + \"__play\",\n    pause: ROOT + \"__pause\",\n    spinner: ROOT + \"__spinner\",\n    sr: ROOT + \"__sr\",\n  };\n  /**\n   * Definitions of status classes.\n   *\n   * @type {Object}\n   */\n\n  var STATUS_CLASSES = {\n    active: \"is-active\",\n    visible: \"is-visible\",\n    loading: \"is-loading\",\n  }; // CONCATENATED MODULE: ./src/js/constants/i18n.js\n  /**\n   * Export i18n texts as object.\n   *\n   * @author    Naotoshi Fujita\n   * @copyright Naotoshi Fujita. All rights reserved.\n   */\n\n  /**\n   * Texts for i18n.\n   *\n   * @type {Object}\n   */\n  var I18N = {\n    prev: \"Previous slide\",\n    next: \"Next slide\",\n    first: \"Go to first slide\",\n    last: \"Go to last slide\",\n    slideX: \"Go to slide %s\",\n    pageX: \"Go to page %s\",\n    play: \"Start autoplay\",\n    pause: \"Pause autoplay\",\n  }; // CONCATENATED MODULE: ./src/js/constants/defaults.js\n  /**\n   * Export default options.\n   *\n   * @author    Naotoshi Fujita\n   * @copyright Naotoshi Fujita. All rights reserved.\n   */\n\n  var DEFAULTS = {\n    /**\n     * Determine a slider type.\n     * - 'slide': Regular slider.\n     * - 'loop' : Carousel slider.\n     * - 'fade' : Change slides with fade transition. perPage, drag options are ignored.\n     *\n     * @type {string}\n     */\n    type: \"slide\",\n\n    /**\n     * Whether to rewind a slider before the first slide or after the last one.\n     * In \"loop\" mode, this option is ignored.\n     *\n     * @type {boolean}\n     */\n    rewind: false,\n\n    /**\n     * Transition speed in milliseconds.\n     *\n     * @type {number}\n     */\n    speed: 400,\n\n    /**\n     * Transition speed on rewind in milliseconds.\n     *\n     * @type {number}\n     */\n    rewindSpeed: 0,\n\n    /**\n     * Whether to prevent any actions while a slider is transitioning.\n     * If false, navigation, drag and swipe work while the slider is running.\n     * Even so, it will be forced to wait for transition in some cases in the loop mode to shift a slider.\n     *\n     * @type {boolean}\n     */\n    waitForTransition: true,\n\n    /**\n     * Define slider max width.\n     *\n     * @type {number}\n     */\n    width: 0,\n\n    /**\n     * Define slider height.\n     *\n     * @type {number}\n     */\n    height: 0,\n\n    /**\n     * Fix width of slides. CSS format is allowed such as 10em, 80% or 80vw.\n     * perPage number will be ignored when this option is falsy.\n     *\n     * @type {number|string}\n     */\n    fixedWidth: 0,\n\n    /**\n     * Fix height of slides. CSS format is allowed such as 10em, 80vh but % unit is not accepted.\n     * heightRatio option will be ignored when this option is falsy.\n     *\n     * @type {number|string}\n     */\n    fixedHeight: 0,\n\n    /**\n     * Determine height of slides by ratio to a slider width.\n     * This will be ignored when the fixedHeight is provided.\n     *\n     * @type {number}\n     */\n    heightRatio: 0,\n\n    /**\n     * If true, slide width will be determined by the element width itself.\n     * - perPage/perMove should be 1.\n     *\n     * @type {boolean}\n     */\n    autoWidth: false,\n\n    /**\n     * If true, slide height will be determined by the element width itself.\n     * - perPage/perMove should be 1.\n     *\n     * @type {boolean}\n     */\n    autoHeight: false,\n\n    /**\n     * Determine how many slides should be displayed per page.\n     *\n     * @type {number}\n     */\n    perPage: 1,\n\n    /**\n     * Determine how many slides should be moved when a slider goes to next or perv.\n     *\n     * @type {number}\n     */\n    perMove: 0,\n\n    /**\n     * Determine manually how many clones should be generated on the left and right side.\n     * The total number of clones will be twice of this number.\n     *\n     * @type {number}\n     */\n    clones: 0,\n\n    /**\n     * Start index.\n     *\n     * @type {number}\n     */\n    start: 0,\n\n    /**\n     * Determine which slide should be focused if there are multiple slides in a page.\n     * A string \"center\" is acceptable for centering slides.\n     *\n     * @type {boolean|number|string}\n     */\n    focus: false,\n\n    /**\n     * Gap between slides. CSS format is allowed such as 1em.\n     *\n     * @type {number|string}\n     */\n    gap: 0,\n\n    /**\n     * Set padding-left/right in horizontal mode or padding-top/bottom in vertical one.\n     * Give a single value to set a same size for both sides or\n     * do an object for different sizes.\n     * Also, CSS format is allowed such as 1em.\n     *\n     * @example\n     * - 10: Number\n     * - '1em': CSS format.\n     * - { left: 0, right: 20 }: Object for different sizes in horizontal mode.\n     * - { top: 0, bottom: 20 }: Object for different sizes in vertical mode.\n     *\n     * @type {number|string|Object}\n     */\n    padding: 0,\n\n    /**\n     * Whether to append arrows.\n     *\n     * @type {boolean}\n     */\n    arrows: true,\n\n    /**\n     * Change the arrow SVG path like 'm7.61 0.807-2.12...'.\n     *\n     * @type {string}\n     */\n    arrowPath: \"\",\n\n    /**\n     * Whether to append pagination(indicator dots) or not.\n     *\n     * @type {boolean}\n     */\n    pagination: true,\n\n    /**\n     * Activate autoplay.\n     *\n     * @type {boolean}\n     */\n    autoplay: false,\n\n    /**\n     * Autoplay interval in milliseconds.\n     *\n     * @type {number}\n     */\n    interval: 5000,\n\n    /**\n     * Whether to stop autoplay when a slider is hovered.\n     *\n     * @type {boolean}\n     */\n    pauseOnHover: true,\n\n    /**\n     * Whether to stop autoplay when a slider elements are focused.\n     * True is recommended for accessibility.\n     *\n     * @type {boolean}\n     */\n    pauseOnFocus: true,\n\n    /**\n     * Whether to reset progress of the autoplay timer when resumed.\n     *\n     * @type {boolean}\n     */\n    resetProgress: true,\n\n    /**\n     * Loading images lazily.\n     * Image src must be provided by a data-splide-lazy attribute.\n     *\n     * - false: Do nothing.\n     * - 'nearby': Only images around an active slide will be loaded.\n     * - 'sequential': All images will be sequentially loaded.\n     *\n     * @type {boolean|string}\n     */\n    lazyLoad: false,\n\n    /**\n     * This option works only when a lazyLoad option is \"nearby\".\n     * Determine how many pages(not slides) around an active slide should be loaded beforehand.\n     *\n     * @type {number}\n     */\n    preloadPages: 1,\n\n    /**\n     * Easing for CSS transition. For example, linear, ease or cubic-bezier().\n     *\n     * @type {string}\n     */\n    easing: \"cubic-bezier(.42,.65,.27,.99)\",\n\n    /**\n     * Whether to enable keyboard shortcuts\n     * - true or 'global': Listen to keydown event of the document.\n     * - 'focused': Listen to the keydown event of the slider root element. tabindex=\"0\" will be added to the element.\n     * - false: Disable keyboard shortcuts.\n     *\n     * @type {boolean|string}\n     */\n    keyboard: \"global\",\n\n    /**\n     * Whether to allow mouse drag and touch swipe.\n     *\n     * @type {boolean}\n     */\n    drag: true,\n\n    /**\n     * The angle threshold for drag.\n     * The slider starts moving only when the drag angle is less than this threshold.\n     *\n     * @type {number}\n     */\n    dragAngleThreshold: 30,\n\n    /**\n     * Distance threshold for determining if the action is \"flick\" or \"swipe\".\n     * When a drag distance is over this value, the action will be treated as \"swipe\", not \"flick\".\n     *\n     * @type {number}\n     */\n    swipeDistanceThreshold: 150,\n\n    /**\n     * Velocity threshold for determining if the action is \"flick\" or \"swipe\".\n     * Around 0.5 is recommended.\n     *\n     * @type {number}\n     */\n    flickVelocityThreshold: 0.6,\n\n    /**\n     * Determine power of flick. The larger number this is, the farther a slider runs by flick.\n     * Around 500 is recommended.\n     *\n     * @type {number}\n     */\n    flickPower: 600,\n\n    /**\n     * Limit a number of pages to move by flick.\n     *\n     * @type {number}\n     */\n    flickMaxPages: 1,\n\n    /**\n     * Slider direction.\n     * - 'ltr': Left to right.\n     * - 'rtl': Right to left.\n     * - 'ttb': Top to bottom.\n     *\n     * @type {string}\n     */\n    direction: \"ltr\",\n\n    /**\n     * Set img src to background-image of its parent element.\n     * Images with various sizes can be displayed as same dimension without cropping work.\n     * fixedHeight or heightRatio is required.\n     *\n     * @type {boolean}\n     */\n    cover: false,\n\n    /**\n     * Whether to enable accessibility(aria and screen reader texts) or not.\n     *\n     * @type {boolean}\n     */\n    accessibility: true,\n\n    /**\n     * Whether to add tabindex=\"0\" to visible slides or not.\n     *\n     * @type {boolean}\n     */\n    slideFocus: true,\n\n    /**\n     * Determine if a slider is navigation for another.\n     * Use \"sync\" API to synchronize two sliders.\n     *\n     * @type {boolean}\n     */\n    isNavigation: false,\n\n    /**\n     * Whether to trim spaces before the fist slide or after the last one when \"focus\" is not 0.\n     *\n     * @type {boolean}\n     */\n    trimSpace: true,\n\n    /**\n     * The \"is-active\" class is added after transition as default.\n     * If true, it will be added before move.\n     *\n     * @type {boolean}\n     */\n    updateOnMove: false,\n\n    /**\n     * Throttle duration in milliseconds for the resize event.\n     *\n     * @type {number}\n     */\n    throttle: 100,\n\n    /**\n     * Whether to destroy a slider or not.\n     *\n     * @type {boolean}\n     */\n    destroy: false,\n\n    /**\n     * Options for specific breakpoints.\n     *\n     * @example\n     * {\n     *   1000: {\n     *     perPage: 3,\n     *     gap: 20\n     *   },\n     *   600: {\n     *     perPage: 1,\n     *     gap: 5,\n     *   }\n     * }\n     *\n     * @type {boolean|Object}\n     */\n    breakpoints: false,\n\n    /**\n     * Collection of class names.\n     *\n     * @see ./classes.js\n     *\n     * @type {Object}\n     */\n    classes: ELEMENT_CLASSES,\n\n    /**\n     * Collection of i18n texts.\n     *\n     * @see ./i18n.js\n     *\n     * @type {Object}\n     */\n    i18n: I18N,\n  }; // CONCATENATED MODULE: ./src/js/constants/states.js\n  /**\n   * Export state constants.\n   *\n   * @author    Naotoshi Fujita\n   * @copyright Naotoshi Fujita. All rights reserved.\n   */\n\n  /**\n   * Splide has been just created.\n   *\n   * @type {number}\n   */\n  var CREATED = 1;\n  /**\n   * All components have been mounted and initialized.\n   *\n   * @type {number}\n   */\n\n  var MOUNTED = 2;\n  /**\n   * Splide is ready for transition.\n   *\n   * @type {number}\n   */\n\n  var IDLE = 3;\n  /**\n   * Splide is moving.\n   *\n   * @type {number}\n   */\n\n  var MOVING = 4;\n  /**\n   * Splide is moving.\n   *\n   * @type {number}\n   */\n\n  var DESTROYED = 5; // CONCATENATED MODULE: ./src/js/splide.js\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  /**\n   * The main class for applying Splide to an element.\n   *\n   * @author    Naotoshi Fujita\n   * @copyright Naotoshi Fujita. All rights reserved.\n   */\n\n  /**\n   * The main class for applying Splide to an element,\n   * providing some APIs to control the behavior.\n   */\n\n  var Splide = /*#__PURE__*/ (function () {\n    /**\n     * Splide constructor.\n     *\n     * @throws {Error} When the given root element or selector is invalid.\n     *\n     * @param {Element|string}  root       - A selector for a root element or an element itself.\n     * @param {Object}          options    - Optional. Options to change default behaviour.\n     * @param {Object}          Components - Optional. Components.\n     */\n    function Splide(root, options, Components) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      if (Components === void 0) {\n        Components = {};\n      }\n\n      this.root = root instanceof Element ? root : document.querySelector(root);\n      exist(this.root, \"An invalid element/selector was given.\");\n      this.Components = null;\n      this.Event = core_event();\n      this.State = state(CREATED);\n      this.STATES = states_namespaceObject;\n      this._o = merge(DEFAULTS, options);\n      this._i = 0;\n      this._c = Components;\n      this._e = {}; // Extensions\n\n      this._t = null; // Transition\n    }\n    /**\n     * Compose and mount components.\n     *\n     * @param {Object}   Extensions - Optional. Additional components.\n     * @param {function} Transition - Optional. Set a custom transition component.\n     *\n     * @return {Splide|undefined} - This instance or undefined if an exception occurred.\n     */\n\n    var _proto = Splide.prototype;\n\n    _proto.mount = function mount(Extensions, Transition) {\n      var _this = this;\n\n      if (Extensions === void 0) {\n        Extensions = this._e;\n      }\n\n      if (Transition === void 0) {\n        Transition = this._t;\n      }\n\n      // Reset the state.\n      this.State.set(CREATED);\n      this._e = Extensions;\n      this._t = Transition;\n      this.Components = compose(this, merge(this._c, Extensions), Transition);\n\n      try {\n        each(this.Components, function (component, key) {\n          var required = component.required;\n\n          if (required === undefined || required) {\n            component.mount && component.mount();\n          } else {\n            delete _this.Components[key];\n          }\n        });\n      } catch (e) {\n        error(e.message);\n        return;\n      }\n\n      var State = this.State;\n      State.set(MOUNTED);\n      each(this.Components, function (component) {\n        component.mounted && component.mounted();\n      });\n      this.emit(\"mounted\");\n      State.set(IDLE);\n      this.emit(\"ready\");\n      applyStyle(this.root, {\n        visibility: \"visible\",\n      });\n      this.on(\"move drag\", function () {\n        return State.set(MOVING);\n      }).on(\"moved dragged\", function () {\n        return State.set(IDLE);\n      });\n      return this;\n    };\n    /**\n     * Set sync target.\n     *\n     * @param {Splide} splide - A Splide instance.\n     *\n     * @return {Splide} - This instance.\n     */\n\n    _proto.sync = function sync(splide) {\n      this.sibling = splide;\n      return this;\n    };\n    /**\n     * Register callback fired on the given event(s).\n     *\n     * @param {string}   events  - An event name. Use space to separate multiple events.\n     *                             Also, namespace is accepted by dot, such as 'resize.{namespace}'.\n     * @param {function} handler - A callback function.\n     * @param {Element}  elm     - Optional. Native event will be listened to when this arg is provided.\n     * @param {Object}   options - Optional. Options for addEventListener.\n     *\n     * @return {Splide} - This instance.\n     */\n\n    _proto.on = function on(events, handler, elm, options) {\n      if (elm === void 0) {\n        elm = null;\n      }\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      this.Event.on(events, handler, elm, options);\n      return this;\n    };\n    /**\n     * Unsubscribe the given event.\n     *\n     * @param {string}  events - A event name.\n     * @param {Element} elm    - Optional. removeEventListener() will be called when this arg is provided.\n     *\n     * @return {Splide} - This instance.\n     */\n\n    _proto.off = function off(events, elm) {\n      if (elm === void 0) {\n        elm = null;\n      }\n\n      this.Event.off(events, elm);\n      return this;\n    };\n    /**\n     * Emit an event.\n     *\n     * @param {string} event - An event name.\n     * @param {*}      args  - Any number of arguments passed to handlers.\n     */\n\n    _proto.emit = function emit(event) {\n      var _this$Event;\n\n      for (\n        var _len = arguments.length,\n          args = new Array(_len > 1 ? _len - 1 : 0),\n          _key = 1;\n        _key < _len;\n        _key++\n      ) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      (_this$Event = this.Event).emit.apply(_this$Event, [event].concat(args));\n\n      return this;\n    };\n    /**\n     * Go to the slide specified by the given control.\n     *\n     * @param {string|number} control - A control pattern.\n     * @param {boolean}       wait    - Optional. Whether to wait for transition.\n     */\n\n    _proto.go = function go(control, wait) {\n      if (wait === void 0) {\n        wait = this.options.waitForTransition;\n      }\n\n      if (this.State.is(IDLE) || (this.State.is(MOVING) && !wait)) {\n        this.Components.Controller.go(control, false);\n      }\n\n      return this;\n    };\n    /**\n     * Verify whether the slider type is the given one or not.\n     *\n     * @param {string} type - A slider type.\n     *\n     * @return {boolean} - True if the slider type is the provided type or false if not.\n     */\n\n    _proto.is = function is(type) {\n      return type === this._o.type;\n    };\n    /**\n     * Insert a slide.\n     *\n     * @param {Element|string} slide - A slide element to be added.\n     * @param {number}         index - A slide will be added at the position.\n     */\n\n    _proto.add = function add(slide, index) {\n      if (index === void 0) {\n        index = -1;\n      }\n\n      this.Components.Elements.add(slide, index, this.refresh.bind(this));\n      return this;\n    };\n    /**\n     * Remove the slide designated by the index.\n     *\n     * @param {number} index - A slide index.\n     */\n\n    _proto.remove = function remove(index) {\n      this.Components.Elements.remove(index);\n      this.refresh();\n      return this;\n    };\n    /**\n     * Destroy all Slide objects and clones and recreate them again.\n     */\n\n    _proto.refresh = function refresh() {\n      this.emit(\"refresh:before\").emit(\"refresh\").emit(\"resize\");\n      return this;\n    };\n    /**\n     * Destroy the Splide.\n     * \"Completely\" boolean is mainly for breakpoints.\n     *\n     * @param {boolean} completely - Destroy completely.\n     */\n\n    _proto.destroy = function destroy(completely) {\n      var _this2 = this;\n\n      if (completely === void 0) {\n        completely = true;\n      }\n\n      // Postpone destroy because it should be done after mount.\n      if (this.State.is(CREATED)) {\n        this.on(\"ready\", function () {\n          return _this2.destroy(completely);\n        });\n        return;\n      }\n\n      values(this.Components)\n        .reverse()\n        .forEach(function (component) {\n          component.destroy && component.destroy(completely);\n        });\n      this.emit(\"destroy\", completely); // Destroy all event handlers, including ones for native events.\n\n      this.Event.destroy();\n      this.State.set(DESTROYED);\n      return this;\n    };\n    /**\n   * Return the current slide index.\n   *\n   * @return {number} - The current slide index.\n   // */\n\n    _createClass(Splide, [\n      {\n        key: \"index\",\n        get: function get() {\n          return this._i;\n        },\n        /**\n         * Set the current slide index.\n         *\n         * @param {number|string} index - A new index.\n         */\n        set: function set(index) {\n          this._i = parseInt(index);\n        },\n        /**\n         * Return length of slides.\n         * This is an alias of Elements.length.\n         *\n         * @return {number} - A number of slides.\n         */\n      },\n      {\n        key: \"length\",\n        get: function get() {\n          return this.Components.Elements.length;\n        },\n        /**\n         * Return options.\n         *\n         * @return {Object} - Options object.\n         */\n      },\n      {\n        key: \"options\",\n        get: function get() {\n          return this._o;\n        },\n        /**\n         * Set options with merging the given object to the current one.\n         *\n         * @param {Object} options - New options.\n         */\n        set: function set(options) {\n          var created = this.State.is(CREATED);\n\n          if (!created) {\n            this.emit(\"update\");\n          }\n\n          this._o = merge(this._o, options);\n\n          if (!created) {\n            this.emit(\"updated\", this._o);\n          }\n        },\n        /**\n         * Return the class list.\n         * This is an alias of Splide.options.classList.\n         *\n         * @return {Object} - An object containing all class list.\n         */\n      },\n      {\n        key: \"classes\",\n        get: function get() {\n          return this._o.classes;\n        },\n        /**\n         * Return the i18n strings.\n         * This is an alias of Splide.options.i18n.\n         *\n         * @return {Object} - An object containing all i18n strings.\n         */\n      },\n      {\n        key: \"i18n\",\n        get: function get() {\n          return this._o.i18n;\n        },\n      },\n    ]);\n\n    return Splide;\n  })(); // CONCATENATED MODULE: ./src/js/components/options/index.js\n\n  /**\n   * The component for initializing options.\n   *\n   * @author    Naotoshi Fujita\n   * @copyright Naotoshi Fujita. All rights reserved.\n   */\n\n  /**\n   * The component for initializing options.\n   *\n   * @param {Splide} Splide - A Splide instance.\n   *\n   * @return {Object} - The component object.\n   */\n\n  /* harmony default export */ var options = function (Splide) {\n    /**\n     * Retrieve options from the data attribute.\n     * Note that IE10 doesn't support dataset property.\n     *\n     * @type {string}\n     */\n    var options = getAttribute(Splide.root, \"data-splide\");\n\n    if (options) {\n      try {\n        Splide.options = JSON.parse(options);\n      } catch (e) {\n        error(e.message);\n      }\n    }\n\n    return {\n      /**\n       * Called when the component is mounted.\n       */\n      mount: function mount() {\n        if (Splide.State.is(CREATED)) {\n          Splide.index = Splide.options.start;\n        }\n      },\n    };\n  }; // CONCATENATED MODULE: ./src/js/constants/directions.js\n  /**\n   * Export layout modes.\n   *\n   * @author    Naotoshi Fujita\n   * @copyright Naotoshi Fujita. All rights reserved.\n   */\n\n  /**\n   * Enumerate slides from left to right.\n   *\n   * @type {string}\n   */\n  var LTR = \"ltr\";\n  /**\n   * Enumerate slides from right to left.\n   *\n   * @type {string}\n   */\n\n  var RTL = \"rtl\";\n  /**\n   * Enumerate slides in a col.\n   *\n   * @type {string}\n   */\n\n  var TTB = \"ttb\"; // CONCATENATED MODULE: ./src/js/components/elements/slide.js\n  /**\n   * The sub component for handling each slide.\n   *\n   * @author    Naotoshi Fujita\n   * @copyright Naotoshi Fujita. All rights reserved.\n   */\n\n  /**\n   * Events for restoring original styles.\n   *\n   * @type {string}\n   */\n\n  var STYLE_RESTORE_EVENTS = \"update.slide\";\n  /**\n   * The sub component for handling each slide.\n   *\n   * @param {Splide}  Splide    - A Splide instance.\n   * @param {number}  index     - An unique slide index.\n   * @param {number}  realIndex - Clones should pass a real slide index.\n   * @param {Element} slide     - A slide element.\n   *\n   * @return {Object} - The sub component object.\n   */\n\n  /* harmony default export */ var elements_slide = function (\n    Splide,\n    index,\n    realIndex,\n    slide\n  ) {\n    /**\n     * Whether to update \"is-active\" class before or after transition.\n     *\n     * @type {boolean}\n     */\n    var updateOnMove = Splide.options.updateOnMove;\n    /**\n     * Events when the slide status is updated.\n     * Append a namespace to remove listeners later.\n     *\n     * @type {string}\n     */\n\n    var STATUS_UPDATE_EVENTS =\n      \"ready.slide updated.slide resized.slide moved.slide\" +\n      (updateOnMove ? \" move.slide\" : \"\");\n    /**\n     * Slide sub component object.\n     *\n     * @type {Object}\n     */\n\n    var Slide = {\n      /**\n       * Slide element.\n       *\n       * @type {Element}\n       */\n      slide: slide,\n\n      /**\n       * Slide index.\n       *\n       * @type {number}\n       */\n      index: index,\n\n      /**\n       * Real index for clones.\n       *\n       * @type {number}\n       */\n      realIndex: realIndex,\n\n      /**\n       * Container element if available.\n       *\n       * @type {Element|undefined}\n       */\n      container: child(slide, Splide.classes.container),\n\n      /**\n       * Whether this is a cloned slide or not.\n       *\n       * @type {boolean}\n       */\n      isClone: realIndex > -1,\n\n      /**\n       * Called when the component is mounted.\n       */\n      mount: function mount() {\n        var _this = this;\n\n        if (!this.isClone) {\n          slide.id = Splide.root.id + \"-slide\" + pad(index + 1);\n        }\n\n        Splide.on(STATUS_UPDATE_EVENTS, function () {\n          return _this.update();\n        })\n          .on(STYLE_RESTORE_EVENTS, restoreStyles)\n          .on(\n            \"click\",\n            function () {\n              return Splide.emit(\"click\", _this);\n            },\n            slide\n          );\n        /*\n         * Add \"is-active\" class to a clone element temporarily\n         * and it will be removed on \"moved\" event.\n         */\n\n        if (updateOnMove) {\n          Splide.on(\"move.slide\", function (newIndex) {\n            if (newIndex === realIndex) {\n              _update(true, false);\n            }\n          });\n        } // Make sure the slide is shown.\n\n        applyStyle(slide, {\n          display: \"\",\n        }); // Hold the original styles.\n\n        this.styles = getAttribute(slide, \"style\") || \"\";\n      },\n\n      /**\n       * Destroy.\n       */\n      destroy: function destroy() {\n        Splide.off(STATUS_UPDATE_EVENTS)\n          .off(STYLE_RESTORE_EVENTS)\n          .off(\"click\", slide);\n        removeClass(slide, values(STATUS_CLASSES));\n        restoreStyles();\n        removeAttribute(this.container, \"style\");\n      },\n\n      /**\n       * Update active and visible status.\n       */\n      update: function update() {\n        _update(this.isActive(), false);\n\n        _update(this.isVisible(), true);\n      },\n\n      /**\n       * Check whether this slide is active or not.\n       *\n       * @return {boolean} - True if the slide is active or false if not.\n       */\n      isActive: function isActive() {\n        return Splide.index === index;\n      },\n\n      /**\n       * Check whether this slide is visible in the viewport or not.\n       *\n       * @return {boolean} - True if the slide is visible or false if not.\n       */\n      isVisible: function isVisible() {\n        var active = this.isActive();\n\n        if (Splide.is(FADE) || active) {\n          return active;\n        }\n\n        var ceil = Math.ceil;\n        var trackRect = getRect(Splide.Components.Elements.track);\n        var slideRect = getRect(slide);\n\n        if (Splide.options.direction === TTB) {\n          return (\n            trackRect.top <= slideRect.top &&\n            slideRect.bottom <= ceil(trackRect.bottom)\n          );\n        }\n\n        return (\n          trackRect.left <= slideRect.left &&\n          slideRect.right <= ceil(trackRect.right)\n        );\n      },\n\n      /**\n       * Calculate how far this slide is from another slide and\n       * return true if the distance is within the given number.\n       *\n       * @param {number} from   - Index of a target slide.\n       * @param {number} within - True if the slide is within this number.\n       *\n       * @return {boolean} - True if the slide is within the number or false otherwise.\n       */\n      isWithin: function isWithin(from, within) {\n        var diff = Math.abs(from - index);\n\n        if (!Splide.is(SLIDE) && !this.isClone) {\n          diff = Math.min(diff, Splide.length - diff);\n        }\n\n        return diff < within;\n      },\n    };\n    /**\n     * Update classes for activity or visibility.\n     *\n     * @param {boolean} active        - Is active/visible or not.\n     * @param {boolean} forVisibility - Toggle classes for activity or visibility.\n     */\n\n    function _update(active, forVisibility) {\n      var type = forVisibility ? \"visible\" : \"active\";\n      var className = STATUS_CLASSES[type];\n\n      if (active) {\n        addClass(slide, className);\n        Splide.emit(\"\" + type, Slide);\n      } else {\n        if (hasClass(slide, className)) {\n          removeClass(slide, className);\n          Splide.emit(\"\" + (forVisibility ? \"hidden\" : \"inactive\"), Slide);\n        }\n      }\n    }\n    /**\n     * Restore the original styles.\n     */\n\n    function restoreStyles() {\n      setAttribute(slide, \"style\", Slide.styles);\n    }\n\n    return Slide;\n  }; // CONCATENATED MODULE: ./src/js/components/elements/index.js\n  /**\n   * The component for main elements.\n   *\n   * @author    Naotoshi Fujita\n   * @copyright Naotoshi Fujita. All rights reserved.\n   */\n\n  /**\n   * The property name for UID stored in a window object.\n   *\n   * @type {string}\n   */\n\n  var UID_NAME = \"uid\";\n  /**\n   * The component for main elements.\n   *\n   * @param {Splide} Splide     - A Splide instance.\n   * @param {Object} Components - An object containing components.\n   *\n   * @return {Object} - The component object.\n   */\n\n  /* harmony default export */ var components_elements = function (\n    Splide,\n    Components\n  ) {\n    /**\n     * Hold the root element.\n     *\n     * @type {Element}\n     */\n    var root = Splide.root;\n    /**\n     * Hold the class list.\n     *\n     * @type {Object}\n     */\n\n    var classes = Splide.classes;\n    /**\n     * Store Slide objects.\n     *\n     * @type {Array}\n     */\n\n    var Slides = [];\n    /*\n     * Assign unique ID to the root element if it doesn't have the one.\n     * Note that IE doesn't support padStart() to fill the uid by 0.\n     */\n\n    if (!root.id) {\n      window.splide = window.splide || {};\n      var uid = window.splide[UID_NAME] || 0;\n      window.splide[UID_NAME] = ++uid;\n      root.id = \"splide\" + pad(uid);\n    }\n    /**\n     * Elements component object.\n     *\n     * @type {Object}\n     */\n\n    var Elements = {\n      /**\n       * Called when the component is mounted.\n       * Collect main elements and store them as member properties.\n       */\n      mount: function mount() {\n        var _this = this;\n\n        this.init();\n        Splide.on(\"refresh\", function () {\n          _this.destroy();\n\n          _this.init();\n        }).on(\"updated\", function () {\n          removeClass(root, getClasses());\n          addClass(root, getClasses());\n        });\n      },\n\n      /**\n       * Destroy.\n       */\n      destroy: function destroy() {\n        Slides.forEach(function (Slide) {\n          Slide.destroy();\n        });\n        Slides = [];\n        removeClass(root, getClasses());\n      },\n\n      /**\n       * Initialization.\n       */\n      init: function init() {\n        var _this2 = this;\n\n        collect();\n        addClass(root, getClasses());\n        this.slides.forEach(function (slide, index) {\n          _this2.register(slide, index, -1);\n        });\n      },\n\n      /**\n       * Register a slide to create a Slide object and handle its behavior.\n       *\n       * @param {Element} slide     - A slide element.\n       * @param {number}  index     - A unique index. This can be negative.\n       * @param {number}  realIndex - A real index for clones. Set -1 for real slides.\n       */\n      register: function register(slide, index, realIndex) {\n        var SlideObject = elements_slide(Splide, index, realIndex, slide);\n        SlideObject.mount();\n        Slides.push(SlideObject);\n      },\n\n      /**\n       * Return the Slide object designated by the index.\n       * Note that \"find\" is not supported by IE.\n       *\n       * @return {Object|undefined} - A Slide object if available. Undefined if not.\n       */\n      getSlide: function getSlide(index) {\n        return Slides.filter(function (Slide) {\n          return Slide.index === index;\n        })[0];\n      },\n\n      /**\n       * Return all Slide objects.\n       *\n       * @param {boolean} includeClones - Whether to include cloned slides or not.\n       *\n       * @return {Object[]} - Slide objects.\n       */\n      getSlides: function getSlides(includeClones) {\n        return includeClones\n          ? Slides\n          : Slides.filter(function (Slide) {\n              return !Slide.isClone;\n            });\n      },\n\n      /**\n       * Return Slide objects belonging to the given page.\n       *\n       * @param {number} page - A page number.\n       *\n       * @return {Object[]} - An array containing Slide objects.\n       */\n      getSlidesByPage: function getSlidesByPage(page) {\n        var idx = Components.Controller.toIndex(page);\n        var options = Splide.options;\n        var max = options.focus !== false ? 1 : options.perPage;\n        return Slides.filter(function (_ref) {\n          var index = _ref.index;\n          return idx <= index && index < idx + max;\n        });\n      },\n\n      /**\n       * Insert a slide to a slider.\n       * Need to refresh Splide after adding a slide.\n       *\n       * @param {Node|string} slide    - A slide element to be added.\n       * @param {number}      index    - A slide will be added at the position.\n       * @param {Function}    callback - Called right after the slide is added to the DOM tree.\n       */\n      add: function add(slide, index, callback) {\n        if (typeof slide === \"string\") {\n          slide = domify(slide);\n        }\n\n        if (slide instanceof Element) {\n          var ref = this.slides[index]; // This will be removed in mount() of a Slide component.\n\n          applyStyle(slide, {\n            display: \"none\",\n          });\n\n          if (ref) {\n            before(slide, ref);\n            this.slides.splice(index, 0, slide);\n          } else {\n            append(this.list, slide);\n            this.slides.push(slide);\n          }\n\n          loaded(slide, function () {\n            callback && callback(slide);\n          });\n        }\n      },\n\n      /**\n       * Remove a slide from a slider.\n       * Need to refresh Splide after removing a slide.\n       *\n       * @param index - Slide index.\n       */\n      remove: function remove(index) {\n        dom_remove(this.slides.splice(index, 1)[0]);\n      },\n\n      /**\n       * Trigger the provided callback for each Slide object.\n       *\n       * @param {Function} callback - A callback function. The first argument will be the Slide object.\n       */\n      each: function each(callback) {\n        Slides.forEach(callback);\n      },\n\n      /**\n       * Return slides length without clones.\n       *\n       * @return {number} - Slide length.\n       */\n      get length() {\n        return this.slides.length;\n      },\n\n      /**\n       * Return \"SlideObjects\" length including clones.\n       *\n       * @return {number} - Slide length including clones.\n       */\n      get total() {\n        return Slides.length;\n      },\n    };\n    /**\n     * Collect elements.\n     */\n\n    function collect() {\n      Elements.slider = child(root, classes.slider);\n      Elements.track = find(root, \".\" + classes.track);\n      Elements.list = child(Elements.track, classes.list);\n      exist(Elements.track && Elements.list, \"Track or list was not found.\");\n      Elements.slides = children(Elements.list, classes.slide);\n      var arrows = findParts(classes.arrows);\n      Elements.arrows = {\n        prev: find(arrows, \".\" + classes.prev),\n        next: find(arrows, \".\" + classes.next),\n      };\n      var autoplay = findParts(classes.autoplay);\n      Elements.bar = find(findParts(classes.progress), \".\" + classes.bar);\n      Elements.play = find(autoplay, \".\" + classes.play);\n      Elements.pause = find(autoplay, \".\" + classes.pause);\n      Elements.track.id = Elements.track.id || root.id + \"-track\";\n      Elements.list.id = Elements.list.id || root.id + \"-list\";\n    }\n    /**\n     * Return class names for the root element.\n     */\n\n    function getClasses() {\n      var rootClass = classes.root;\n      var options = Splide.options;\n      return [\n        rootClass + \"--\" + options.type,\n        rootClass + \"--\" + options.direction,\n        options.drag ? rootClass + \"--draggable\" : \"\",\n        options.isNavigation ? rootClass + \"--nav\" : \"\",\n        STATUS_CLASSES.active,\n      ];\n    }\n    /**\n     * Find parts only from children of the root or track.\n     *\n     * @return {Element} - A found element or undefined.\n     */\n\n    function findParts(className) {\n      return child(root, className) || child(Elements.slider, className);\n    }\n\n    return Elements;\n  }; // CONCATENATED MODULE: ./src/js/components/controller/index.js\n  /**\n   * The component for controlling the track.\n   *\n   * @author    Naotoshi Fujita\n   * @copyright Naotoshi Fujita. All rights reserved.\n   */\n\n  var floor = Math.floor;\n  /**\n   * The component for controlling the track.\n   *\n   * @param {Splide} Splide     - A Splide instance.\n   * @param {Object} Components - An object containing components.\n   *\n   * @return {Object} - The component object.\n   */\n\n  /* harmony default export */ var controller = function (Splide, Components) {\n    /**\n     * Store current options.\n     *\n     * @type {Object}\n     */\n    var options;\n    /**\n     * True if the slide is LOOP mode.\n     *\n     * @type {boolean}\n     */\n\n    var isLoop;\n    /**\n     * Controller component object.\n     *\n     * @type {Object}\n     */\n\n    var Controller = {\n      /**\n       * Called when the component is mounted.\n       */\n      mount: function mount() {\n        options = Splide.options;\n        isLoop = Splide.is(LOOP);\n        bind();\n      },\n\n      /**\n       * Make track run by the given control.\n       * - \"+{i}\" : Increment the slide index by i.\n       * - \"-{i}\" : Decrement the slide index by i.\n       * - \"{i}\"  : Go to the slide whose index is i.\n       * - \">\"    : Go to next page.\n       * - \"<\"    : Go to prev page.\n       * - \">{i}\" : Go to page i.\n       *\n       * @param {string|number} control  - A control pattern.\n       * @param {boolean}       silently - Go to the destination without event emission.\n       */\n      go: function go(control, silently) {\n        var destIndex = this.trim(this.parse(control));\n        Components.Track.go(destIndex, this.rewind(destIndex), silently);\n      },\n\n      /**\n       * Parse the given control and return the destination index for the track.\n       *\n       * @param {string} control - A control target pattern.\n       *\n       * @return {number} - A parsed target.\n       */\n      parse: function parse(control) {\n        var index = Splide.index;\n        var matches = String(control).match(/([+\\-<>]+)(\\d+)?/);\n        var indicator = matches ? matches[1] : \"\";\n        var number = matches ? parseInt(matches[2]) : 0;\n\n        switch (indicator) {\n          case \"+\":\n            index += number || 1;\n            break;\n\n          case \"-\":\n            index -= number || 1;\n            break;\n\n          case \">\":\n          case \"<\":\n            index = parsePage(number, index, indicator === \"<\");\n            break;\n\n          default:\n            index = parseInt(control);\n        }\n\n        return index;\n      },\n\n      /**\n       * Compute index from the given page number.\n       *\n       * @param {number} page - Page number.\n       *\n       * @return {number} - A computed page number.\n       */\n      toIndex: function toIndex(page) {\n        if (hasFocus()) {\n          return page;\n        }\n\n        var length = Splide.length;\n        var perPage = options.perPage;\n        var index = page * perPage;\n        index =\n          index - (this.pageLength * perPage - length) * floor(index / length); // Adjustment for the last page.\n\n        if (length - perPage <= index && index < length) {\n          index = length - perPage;\n        }\n\n        return index;\n      },\n\n      /**\n       * Compute page number from the given slide index.\n       *\n       * @param {number} index - Slide index.\n       *\n       * @return {number} - A computed page number.\n       */\n      toPage: function toPage(index) {\n        if (hasFocus()) {\n          return index;\n        }\n\n        var length = Splide.length;\n        var perPage = options.perPage; // Make the last \"perPage\" number of slides belong to the last page.\n\n        if (length - perPage <= index && index < length) {\n          return floor((length - 1) / perPage);\n        }\n\n        return floor(index / perPage);\n      },\n\n      /**\n       * Trim the given index according to the current mode.\n       * Index being returned could be less than 0 or greater than the length in Loop mode.\n       *\n       * @param {number} index - An index being trimmed.\n       *\n       * @return {number} - A trimmed index.\n       */\n      trim: function trim(index) {\n        if (!isLoop) {\n          index = options.rewind\n            ? this.rewind(index)\n            : between(index, 0, this.edgeIndex);\n        }\n\n        return index;\n      },\n\n      /**\n       * Rewind the given index if it's out of range.\n       *\n       * @param {number} index - An index.\n       *\n       * @return {number} - A rewound index.\n       */\n      rewind: function rewind(index) {\n        var edge = this.edgeIndex;\n\n        if (isLoop) {\n          while (index > edge) {\n            index -= edge + 1;\n          }\n\n          while (index < 0) {\n            index += edge + 1;\n          }\n        } else {\n          if (index > edge) {\n            index = 0;\n          } else if (index < 0) {\n            index = edge;\n          }\n        }\n\n        return index;\n      },\n\n      /**\n       * Check if the direction is \"rtl\" or not.\n       *\n       * @return {boolean} - True if \"rtl\" or false if not.\n       */\n      isRtl: function isRtl() {\n        return options.direction === RTL;\n      },\n\n      /**\n       * Return the page length.\n       *\n       * @return {number} - Max page number.\n       */\n      get pageLength() {\n        var length = Splide.length;\n        return hasFocus() ? length : Math.ceil(length / options.perPage);\n      },\n\n      /**\n       * Return the edge index.\n       *\n       * @return {number} - Edge index.\n       */\n      get edgeIndex() {\n        var length = Splide.length;\n\n        if (!length) {\n          return 0;\n        }\n\n        if (hasFocus() || options.isNavigation || isLoop) {\n          return length - 1;\n        }\n\n        return length - options.perPage;\n      },\n\n      /**\n       * Return the index of the previous slide.\n       *\n       * @return {number} - The index of the previous slide if available. -1 otherwise.\n       */\n      get prevIndex() {\n        var prev = Splide.index - 1;\n\n        if (isLoop || options.rewind) {\n          prev = this.rewind(prev);\n        }\n\n        return prev > -1 ? prev : -1;\n      },\n\n      /**\n       * Return the index of the next slide.\n       *\n       * @return {number} - The index of the next slide if available. -1 otherwise.\n       */\n      get nextIndex() {\n        var next = Splide.index + 1;\n\n        if (isLoop || options.rewind) {\n          next = this.rewind(next);\n        }\n\n        return (Splide.index < next && next <= this.edgeIndex) || next === 0\n          ? next\n          : -1;\n      },\n    };\n    /**\n     * Listen to some events.\n     */\n\n    function bind() {\n      Splide.on(\"move\", function (newIndex) {\n        Splide.index = newIndex;\n      }).on(\"updated refresh\", function (newOptions) {\n        options = newOptions || options;\n        Splide.index = between(Splide.index, 0, Controller.edgeIndex);\n      });\n    }\n    /**\n     * Verify if the focus option is available or not.\n     *\n     * @return {boolean} - True if a slider has the focus option.\n     */\n\n    function hasFocus() {\n      return options.focus !== false;\n    }\n    /**\n     * Return the next or previous page index computed by the page number and current index.\n     *\n     * @param {number}  number - Specify the page number.\n     * @param {number}  index  - Current index.\n     * @param {boolean} prev   - Prev or next.\n     *\n     * @return {number} - Slide index.\n     */\n\n    function parsePage(number, index, prev) {\n      if (number > -1) {\n        return Controller.toIndex(number);\n      }\n\n      var perMove = options.perMove;\n      var sign = prev ? -1 : 1;\n\n      if (perMove) {\n        return index + perMove * sign;\n      }\n\n      return Controller.toIndex(Controller.toPage(index) + sign);\n    }\n\n    return Controller;\n  }; // CONCATENATED MODULE: ./src/js/components/track/index.js\n  /**\n   * The component for moving list in the track.\n   *\n   * @author    Naotoshi Fujita\n   * @copyright Naotoshi Fujita. All rights reserved.\n   */\n\n  var abs = Math.abs;\n  /**\n   * The component for moving list in the track.\n   *\n   * @param {Splide} Splide     - A Splide instance.\n   * @param {Object} Components - An object containing components.\n   *\n   * @return {Object} - The component object.\n   */\n\n  /* harmony default export */ var track = function (Splide, Components) {\n    /**\n     * Hold the Layout component.\n     *\n     * @type {Object}\n     */\n    var Layout;\n    /**\n     * Hold the Layout component.\n     *\n     * @type {Object}\n     */\n\n    var Elements;\n    /**\n     * Store the list element.\n     *\n     * @type {Element}\n     */\n\n    var list;\n    /**\n     * Whether the current direction is vertical or not.\n     *\n     * @type {boolean}\n     */\n\n    var isVertical = Splide.options.direction === TTB;\n    /**\n     * Whether the slider type is FADE or not.\n     *\n     * @type {boolean}\n     */\n\n    var isFade = Splide.is(FADE);\n    /**\n     * Whether the slider direction is RTL or not.\n     *\n     * @type {boolean}\n     */\n\n    var isRTL = Splide.options.direction === RTL;\n    /**\n     * This will be true while transitioning from the last index to the first one.\n     *\n     * @type {boolean}\n     */\n\n    var isLoopPending = false;\n    /**\n     * Sign for the direction. Only RTL mode uses the positive sign.\n     *\n     * @type {number}\n     */\n\n    var sign = isRTL ? 1 : -1;\n    /**\n     * Track component object.\n     *\n     * @type {Object}\n     */\n\n    var Track = {\n      /**\n       * Make public the sign defined locally.\n       *\n       * @type {number}\n       */\n      sign: sign,\n\n      /**\n       * Called when the component is mounted.\n       */\n      mount: function mount() {\n        Elements = Components.Elements;\n        Layout = Components.Layout;\n        list = Elements.list;\n      },\n\n      /**\n       * Called after the component is mounted.\n       * The resize event must be registered after the Layout's one is done.\n       */\n      mounted: function mounted() {\n        var _this = this;\n\n        if (!isFade) {\n          this.jump(0);\n          Splide.on(\"mounted resize updated\", function () {\n            _this.jump(Splide.index);\n          });\n        }\n      },\n\n      /**\n       * Go to the given destination index.\n       * After arriving there, the track is jump to the new index without animation, mainly for loop mode.\n       *\n       * @param {number}  destIndex - A destination index.\n       *                              This can be negative or greater than slides length for reaching clones.\n       * @param {number}  newIndex  - An actual new index. They are always same in Slide and Rewind mode.\n       * @param {boolean} silently  - If true, suppress emitting events.\n       */\n      go: function go(destIndex, newIndex, silently) {\n        var newPosition = getTrimmedPosition(destIndex);\n        var prevIndex = Splide.index; // Prevent any actions while transitioning from the last index to the first one for jump.\n\n        if (Splide.State.is(MOVING) && isLoopPending) {\n          return;\n        }\n\n        isLoopPending = destIndex !== newIndex;\n\n        if (!silently) {\n          Splide.emit(\"move\", newIndex, prevIndex, destIndex);\n        }\n\n        if (Math.abs(newPosition - this.position) >= 1 || isFade) {\n          Components.Transition.start(\n            destIndex,\n            newIndex,\n            prevIndex,\n            this.toCoord(newPosition),\n            function () {\n              onTransitionEnd(destIndex, newIndex, prevIndex, silently);\n            }\n          );\n        } else {\n          if (destIndex !== prevIndex && Splide.options.trimSpace === \"move\") {\n            Components.Controller.go(\n              destIndex + destIndex - prevIndex,\n              silently\n            );\n          } else {\n            onTransitionEnd(destIndex, newIndex, prevIndex, silently);\n          }\n        }\n      },\n\n      /**\n       * Move the track to the specified index.\n       *\n       * @param {number} index - A destination index where the track jumps.\n       */\n      jump: function jump(index) {\n        this.translate(getTrimmedPosition(index));\n      },\n\n      /**\n       * Set the list position by CSS translate property.\n       *\n       * @param {number} position - A new position value.\n       */\n      translate: function translate(position) {\n        applyStyle(list, {\n          transform:\n            \"translate\" + (isVertical ? \"Y\" : \"X\") + \"(\" + position + \"px)\",\n        });\n      },\n\n      /**\n       * Cancel the transition and set the list position.\n       * Also, loop the slider if necessary.\n       */\n      cancel: function cancel() {\n        if (Splide.is(LOOP)) {\n          this.shift();\n        } else {\n          // Ensure the current position.\n          this.translate(this.position);\n        }\n\n        applyStyle(list, {\n          transition: \"\",\n        });\n      },\n\n      /**\n       * Shift the slider if it exceeds borders on the edge.\n       */\n      shift: function shift() {\n        var position = abs(this.position);\n        var left = abs(this.toPosition(0));\n        var right = abs(this.toPosition(Splide.length));\n        var innerSize = right - left;\n\n        if (position < left) {\n          position += innerSize;\n        } else if (position > right) {\n          position -= innerSize;\n        }\n\n        this.translate(sign * position);\n      },\n\n      /**\n       * Trim redundant spaces on the left or right edge if necessary.\n       *\n       * @param {number} position - Position value to be trimmed.\n       *\n       * @return {number} - Trimmed position.\n       */\n      trim: function trim(position) {\n        if (!Splide.options.trimSpace || Splide.is(LOOP)) {\n          return position;\n        }\n\n        var edge = sign * (Layout.totalSize() - Layout.size - Layout.gap);\n        return between(position, edge, 0);\n      },\n\n      /**\n       * Calculate the closest slide index from the given position.\n       *\n       * @param {number} position - A position converted to an slide index.\n       *\n       * @return {number} - The closest slide index.\n       */\n      toIndex: function toIndex(position) {\n        var _this2 = this;\n\n        var index = 0;\n        var minDistance = Infinity;\n        Elements.getSlides(true).forEach(function (Slide) {\n          var slideIndex = Slide.index;\n          var distance = abs(_this2.toPosition(slideIndex) - position);\n\n          if (distance < minDistance) {\n            minDistance = distance;\n            index = slideIndex;\n          }\n        });\n        return index;\n      },\n\n      /**\n       * Return coordinates object by the given position.\n       *\n       * @param {number} position - A position value.\n       *\n       * @return {Object} - A coordinates object.\n       */\n      toCoord: function toCoord(position) {\n        return {\n          x: isVertical ? 0 : position,\n          y: isVertical ? position : 0,\n        };\n      },\n\n      /**\n       * Calculate the track position by a slide index.\n       *\n       * @param {number} index - Slide index.\n       *\n       * @return {Object} - Calculated position.\n       */\n      toPosition: function toPosition(index) {\n        var position =\n          Layout.totalSize(index) - Layout.slideSize(index) - Layout.gap;\n        return sign * (position + this.offset(index));\n      },\n\n      /**\n       * Return the current offset value, considering direction.\n       *\n       * @return {number} - Offset amount.\n       */\n      offset: function offset(index) {\n        var focus = Splide.options.focus;\n        var slideSize = Layout.slideSize(index);\n\n        if (focus === \"center\") {\n          return -(Layout.size - slideSize) / 2;\n        }\n\n        return -(parseInt(focus) || 0) * (slideSize + Layout.gap);\n      },\n\n      /**\n       * Return the current position.\n       * This returns the correct position even while transitioning by CSS.\n       *\n       * @return {number} - Current position.\n       */\n      get position() {\n        var prop = isVertical ? \"top\" : isRTL ? \"right\" : \"left\";\n        return (\n          getRect(list)[prop] -\n          (getRect(Elements.track)[prop] - Layout.padding[prop] * sign)\n        );\n      },\n    };\n    /**\n     * Called whenever slides arrive at a destination.\n     *\n     * @param {number}  destIndex - A destination index.\n     * @param {number}  newIndex  - A new index.\n     * @param {number}  prevIndex - A previous index.\n     * @param {boolean} silently  - If true, suppress emitting events.\n     */\n\n    function onTransitionEnd(destIndex, newIndex, prevIndex, silently) {\n      applyStyle(list, {\n        transition: \"\",\n      });\n      isLoopPending = false;\n\n      if (!isFade) {\n        Track.jump(newIndex);\n      }\n\n      if (!silently) {\n        Splide.emit(\"moved\", newIndex, prevIndex, destIndex);\n      }\n    }\n    /**\n     * Convert index to the trimmed position.\n     *\n     * @return {number} - Trimmed position.\n     */\n\n    function getTrimmedPosition(index) {\n      return Track.trim(Track.toPosition(index));\n    }\n\n    return Track;\n  }; // CONCATENATED MODULE: ./src/js/components/clones/index.js\n  /**\n   * The component for cloning some slides for \"loop\" mode of the track.\n   *\n   * @author    Naotoshi Fujita\n   * @copyright Naotoshi Fujita. All rights reserved.\n   */\n\n  /**\n   * The component for cloning some slides for \"loop\" mode of the track.\n   *\n   * @param {Splide} Splide     - A Splide instance.\n   * @param {Object} Components - An object containing components.\n   *\n   * @return {Object} - The component object.\n   */\n\n  /* harmony default export */ var clones = function (Splide, Components) {\n    /**\n     * Store information of all clones.\n     *\n     * @type {Array}\n     */\n    var clones = [];\n    /**\n     * Store the current clone count on one side.\n     *\n     * @type {number}\n     */\n\n    var cloneCount = 0;\n    /**\n     * Keep Elements component.\n     *\n     * @type {Object}\n     */\n\n    var Elements = Components.Elements;\n    /**\n     * Clones component object.\n     *\n     * @type {Object}\n     */\n\n    var Clones = {\n      /**\n       * Called when the component is mounted.\n       */\n      mount: function mount() {\n        var _this = this;\n\n        if (Splide.is(LOOP)) {\n          init();\n          Splide.on(\"refresh:before\", function () {\n            _this.destroy();\n          })\n            .on(\"refresh\", init)\n            .on(\"resize\", function () {\n              if (cloneCount !== getCloneCount()) {\n                // Destroy before refresh not to collect clones by the Elements component.\n                _this.destroy();\n\n                Splide.refresh();\n              }\n            });\n        }\n      },\n\n      /**\n       * Destroy.\n       */\n      destroy: function destroy() {\n        dom_remove(clones);\n        clones = [];\n      },\n\n      /**\n       * Return all clones.\n       *\n       * @return {Element[]} - Cloned elements.\n       */\n      get clones() {\n        return clones;\n      },\n\n      /**\n       * Return clone length.\n       *\n       * @return {number} - A length of clones.\n       */\n      get length() {\n        return clones.length;\n      },\n    };\n    /**\n     * Initialization.\n     */\n\n    function init() {\n      Clones.destroy();\n      cloneCount = getCloneCount();\n      generateClones(cloneCount);\n    }\n    /**\n     * Generate and append/prepend clones.\n     *\n     * @param {number} count - The half number of clones.\n     */\n\n    function generateClones(count) {\n      var length = Elements.length,\n        register = Elements.register;\n\n      if (length) {\n        var slides = Elements.slides;\n\n        while (slides.length < count) {\n          slides = slides.concat(slides);\n        } // Clones after the last element.\n\n        slides.slice(0, count).forEach(function (elm, index) {\n          var clone = cloneDeeply(elm);\n          append(Elements.list, clone);\n          clones.push(clone);\n          register(clone, index + length, index % length);\n        }); // Clones before the first element.\n\n        slides.slice(-count).forEach(function (elm, index) {\n          var clone = cloneDeeply(elm);\n          before(clone, slides[0]);\n          clones.push(clone);\n          register(\n            clone,\n            index - count,\n            (length + index - (count % length)) % length\n          );\n        });\n      }\n    }\n    /**\n     * Return half count of clones to be generated.\n     * Clone count is determined by:\n     * - \"clones\" value in the options.\n     * - Number of slides that can be placed in a view in \"fixed\" mode.\n     * - Max pages a flick action can move.\n     * - Whether the slide length is enough for perPage.\n     *\n     * @return {number} - Count for clones.\n     */\n\n    function getCloneCount() {\n      var options = Splide.options;\n\n      if (options.clones) {\n        return options.clones;\n      } // Use the slide length in autoWidth mode because the number cannot be calculated.\n\n      var baseCount =\n        options.autoWidth || options.autoHeight\n          ? Elements.length\n          : options.perPage;\n      var dimension = options.direction === TTB ? \"Height\" : \"Width\";\n      var fixedSize = toPixel(Splide.root, options[\"fixed\" + dimension]);\n\n      if (fixedSize) {\n        // Roughly calculate the count. This needs not to be strict.\n        baseCount = Math.ceil(Elements.track[\"client\" + dimension] / fixedSize);\n      }\n\n      return baseCount * (options.drag ? options.flickMaxPages + 1 : 1);\n    }\n    /**\n     * Clone deeply the given element.\n     *\n     * @param {Element} elm - An element being duplicated.\n     *\n     * @return {Node} - A cloned node(element).\n     */\n\n    function cloneDeeply(elm) {\n      var clone = elm.cloneNode(true);\n      addClass(clone, Splide.classes.clone); // ID should not be duplicated.\n\n      removeAttribute(clone, \"id\");\n      return clone;\n    }\n\n    return Clones;\n  }; // CONCATENATED MODULE: ./src/js/components/layout/directions/horizontal.js\n  /**\n   * The resolver component for horizontal layout.\n   *\n   * @author    Naotoshi Fujita\n   * @copyright Naotoshi Fujita. All rights reserved.\n   */\n\n  /**\n   * The resolver component for horizontal layout.\n   *\n   * @param {Splide} Splide     - A Splide instance.\n   * @param {Object} Components - An object containing components.\n   *\n   * @return {Object} - The resolver object.\n   */\n\n  /* harmony default export */ var horizontal = function (Splide, Components) {\n    /**\n     * Keep the Elements component.\n     *\n     * @type {string}\n     */\n    var Elements = Components.Elements;\n    /**\n     * Keep the root element.\n     *\n     * @type {Element}\n     */\n\n    var root = Splide.root;\n    /**\n     * Keep the track element.\n     *\n     * @type {Element}\n     */\n\n    var track;\n    /**\n     * Keep the latest options.\n     *\n     * @type {Element}\n     */\n\n    var options = Splide.options;\n    return {\n      /**\n       * Margin property name.\n       *\n       * @type {string}\n       */\n      margin: \"margin\" + (options.direction === RTL ? \"Left\" : \"Right\"),\n\n      /**\n       * Always 0 because the height will be determined by inner contents.\n       *\n       * @type {number}\n       */\n      height: 0,\n\n      /**\n       * Initialization.\n       */\n      init: function init() {\n        this.resize();\n      },\n\n      /**\n       * Resize gap and padding.\n       * This must be called on init.\n       */\n      resize: function resize() {\n        options = Splide.options;\n        track = Elements.track;\n        this.gap = toPixel(root, options.gap);\n        var padding = options.padding;\n        var left = toPixel(root, padding.left || padding);\n        var right = toPixel(root, padding.right || padding);\n        this.padding = {\n          left: left,\n          right: right,\n        };\n        applyStyle(track, {\n          paddingLeft: unit(left),\n          paddingRight: unit(right),\n        });\n      },\n\n      /**\n       * Return total width from the left of the list to the right of the slide specified by the provided index.\n       *\n       * @param {number} index - Optional. A slide index. If undefined, total width of the slider will be returned.\n       *\n       * @return {number} - Total width to the right side of the specified slide, or 0 for an invalid index.\n       */\n      totalWidth: function totalWidth(index) {\n        if (index === void 0) {\n          index = Splide.length - 1;\n        }\n\n        var Slide = Elements.getSlide(index);\n        var width = 0;\n\n        if (Slide) {\n          var slideRect = getRect(Slide.slide);\n          var listRect = getRect(Elements.list);\n\n          if (options.direction === RTL) {\n            width = listRect.right - slideRect.left;\n          } else {\n            width = slideRect.right - listRect.left;\n          }\n\n          width += this.gap;\n        }\n\n        return width;\n      },\n\n      /**\n       * Return the slide width in px.\n       *\n       * @param {number} index - Slide index.\n       *\n       * @return {number} - The slide width.\n       */\n      slideWidth: function slideWidth(index) {\n        if (options.autoWidth) {\n          var Slide = Elements.getSlide(index);\n          return Slide ? Slide.slide.offsetWidth : 0;\n        }\n\n        var width =\n          options.fixedWidth ||\n          (this.width + this.gap) / options.perPage - this.gap;\n        return toPixel(root, width);\n      },\n\n      /**\n       * Return the slide height in px.\n       *\n       * @return {number} - The slide height.\n       */\n      slideHeight: function slideHeight() {\n        var height =\n          options.height ||\n          options.fixedHeight ||\n          this.width * options.heightRatio;\n        return toPixel(root, height);\n      },\n\n      /**\n       * Return slider width without padding.\n       *\n       * @return {number} - Current slider width.\n       */\n      get width() {\n        return track.clientWidth - this.padding.left - this.padding.right;\n      },\n    };\n  }; // CONCATENATED MODULE: ./src/js/components/layout/directions/vertical.js\n  /**\n   * The resolver component for vertical layout.\n   *\n   * @author    Naotoshi Fujita\n   * @copyright Naotoshi Fujita. All rights reserved.\n   */\n\n  /**\n   * The resolver component for vertical layout.\n   *\n   * @param {Splide} Splide     - A Splide instance.\n   * @param {Object} Components - An object containing components.\n   *\n   * @return {Object} - The resolver object.\n   */\n\n  /* harmony default export */ var vertical = function (Splide, Components) {\n    /**\n     * Keep the Elements component.\n     *\n     * @type {string}\n     */\n    var Elements = Components.Elements;\n    /**\n     * Keep the root element.\n     *\n     * @type {Element}\n     */\n\n    var root = Splide.root;\n    /**\n     * Keep the track element.\n     *\n     * @type {Element}\n     */\n\n    var track;\n    /**\n     * Keep the latest options.\n     *\n     * @type {Element}\n     */\n\n    var options;\n    return {\n      /**\n       * Margin property name.\n       *\n       * @type {string}\n       */\n      margin: \"marginBottom\",\n\n      /**\n       * Initialization.\n       */\n      init: function init() {\n        this.resize();\n      },\n\n      /**\n       * Resize gap and padding.\n       * This must be called on init.\n       */\n      resize: function resize() {\n        options = Splide.options;\n        track = Elements.track;\n        this.gap = toPixel(root, options.gap);\n        var padding = options.padding;\n        var top = toPixel(root, padding.top || padding);\n        var bottom = toPixel(root, padding.bottom || padding);\n        this.padding = {\n          top: top,\n          bottom: bottom,\n        };\n        applyStyle(track, {\n          paddingTop: unit(top),\n          paddingBottom: unit(bottom),\n        });\n      },\n\n      /**\n       * Return total height from the top of the list to the bottom of the slide specified by the provided index.\n       *\n       * @param {number} index - Optional. A slide index. If undefined, total height of the slider will be returned.\n       *\n       * @return {number} - Total height to the bottom of the specified slide, or 0 for an invalid index.\n       */\n      totalHeight: function totalHeight(index) {\n        if (index === void 0) {\n          index = Splide.length - 1;\n        }\n\n        var Slide = Elements.getSlide(index);\n\n        if (Slide) {\n          return (\n            getRect(Slide.slide).bottom - getRect(Elements.list).top + this.gap\n          );\n        }\n\n        return 0;\n      },\n\n      /**\n       * Return the slide width in px.\n       *\n       * @return {number} - The slide width.\n       */\n      slideWidth: function slideWidth() {\n        return toPixel(root, options.fixedWidth || this.width);\n      },\n\n      /**\n       * Return the slide height in px.\n       *\n       * @param {number} index - Slide index.\n       *\n       * @return {number} - The slide height.\n       */\n      slideHeight: function slideHeight(index) {\n        if (options.autoHeight) {\n          var Slide = Elements.getSlide(index);\n          return Slide ? Slide.slide.offsetHeight : 0;\n        }\n\n        var height =\n          options.fixedHeight ||\n          (this.height + this.gap) / options.perPage - this.gap;\n        return toPixel(root, height);\n      },\n\n      /**\n       * Return slider width without padding.\n       *\n       * @return {number} - Current slider width.\n       */\n      get width() {\n        return track.clientWidth;\n      },\n\n      /**\n       * Return slide height without padding.\n       *\n       * @return {number} - Slider height.\n       */\n      get height() {\n        var height = options.height || this.width * options.heightRatio;\n        exist(height, '\"height\" or \"heightRatio\" is missing.');\n        return toPixel(root, height) - this.padding.top - this.padding.bottom;\n      },\n    };\n  }; // CONCATENATED MODULE: ./src/js/utils/time.js\n  /**\n   * A package of utility functions related with time.\n   *\n   * @author    Naotoshi Fujita\n   * @copyright Naotoshi Fujita. All rights reserved.\n   */\n\n  /**\n   * Simple throttle function that controls how often the given function is executed.\n   *\n   * @param {function} func - A function to be throttled.\n   * @param {number}   wait - Time in millisecond for interval of execution.\n   *\n   * @return {Function} - A debounced function.\n   */\n  function throttle(func, wait) {\n    var timeout; // Declare function by the \"function\" keyword to prevent \"this\" from being inherited.\n\n    return function () {\n      if (!timeout) {\n        timeout = setTimeout(function () {\n          func();\n          timeout = null;\n        }, wait);\n      }\n    };\n  }\n  /**\n   * Custom setInterval function that provides progress rate as callback.\n   *\n   * @param {function} callback - A callback function fired every time the interval time passes.\n   * @param {number}   interval - Interval duration in milliseconds.\n   * @param {function} progress - A callback function fired whenever the progress goes.\n   *\n   * @return {Object} - An object containing play() and pause() functions.\n   */\n\n  function createInterval(callback, interval, progress) {\n    var _window = window,\n      requestAnimationFrame = _window.requestAnimationFrame;\n    var start,\n      elapse,\n      rate,\n      _pause = true;\n\n    var step = function step(timestamp) {\n      if (!_pause) {\n        if (!start) {\n          start = timestamp;\n\n          if (rate && rate < 1) {\n            start -= rate * interval;\n          }\n        }\n\n        elapse = timestamp - start;\n        rate = elapse / interval;\n\n        if (elapse >= interval) {\n          start = 0;\n          rate = 1;\n          callback();\n        }\n\n        if (progress) {\n          progress(rate);\n        }\n\n        requestAnimationFrame(step);\n      }\n    };\n\n    return {\n      pause: function pause() {\n        _pause = true;\n        start = 0;\n      },\n      play: function play(reset) {\n        start = 0;\n\n        if (reset) {\n          rate = 0;\n        }\n\n        if (_pause) {\n          _pause = false;\n          requestAnimationFrame(step);\n        }\n      },\n    };\n  } // CONCATENATED MODULE: ./src/js/components/layout/index.js\n  /**\n   * The component for handing slide layouts and their sizes.\n   *\n   * @author    Naotoshi Fujita\n   * @copyright Naotoshi Fujita. All rights reserved.\n   */\n\n  /**\n   * The component for handing slide layouts and their sizes.\n   *\n   * @param {Splide} Splide     - A Splide instance.\n   * @param {Object} Components - An object containing components.\n   *\n   * @return {Object} - The component object.\n   */\n\n  /* harmony default export */ var layout = function (Splide, Components) {\n    /**\n     * Keep the Elements component.\n     *\n     * @type {string}\n     */\n    var Elements = Components.Elements;\n    /**\n     * Whether the slider is vertical or not.\n     *\n     * @type {boolean}\n     */\n\n    var isVertical = Splide.options.direction === TTB;\n    /**\n     * Layout component object.\n     *\n     * @type {Object}\n     */\n\n    var Layout = object_assign(\n      {\n        /**\n         * Called when the component is mounted.\n         */\n        mount: function mount() {\n          bind();\n          init(); // The word \"size\" means width for a horizontal slider and height for a vertical slider.\n\n          this.totalSize = isVertical ? this.totalHeight : this.totalWidth;\n          this.slideSize = isVertical ? this.slideHeight : this.slideWidth;\n        },\n\n        /**\n         * Destroy the component.\n         */\n        destroy: function destroy() {\n          removeAttribute([Elements.list, Elements.track], \"style\");\n        },\n\n        /**\n         * Return the slider height on the vertical mode or width on the horizontal mode.\n         *\n         * @return {number}\n         */\n        get size() {\n          return isVertical ? this.height : this.width;\n        },\n      },\n      isVertical ? vertical(Splide, Components) : horizontal(Splide, Components)\n    );\n    /**\n     * Init slider styles according to options.\n     */\n\n    function init() {\n      Layout.init();\n      applyStyle(Splide.root, {\n        maxWidth: unit(Splide.options.width),\n      });\n      Elements.each(function (Slide) {\n        Slide.slide.style[Layout.margin] = unit(Layout.gap);\n      });\n      resize();\n    }\n    /**\n     * Listen the resize native event with throttle.\n     * Initialize when the component is mounted or options are updated.\n     */\n\n    function bind() {\n      Splide.on(\n        \"resize load\",\n        throttle(function () {\n          Splide.emit(\"resize\");\n        }, Splide.options.throttle),\n        window\n      )\n        .on(\"resize\", resize)\n        .on(\"updated refresh\", init);\n    }\n    /**\n     * Resize the track and slide elements.\n     */\n\n    function resize() {\n      var options = Splide.options;\n      Layout.resize();\n      applyStyle(Elements.track, {\n        height: unit(Layout.height),\n      });\n      var slideHeight = options.autoHeight ? null : unit(Layout.slideHeight());\n      Elements.each(function (Slide) {\n        applyStyle(Slide.container, {\n          height: slideHeight,\n        });\n        applyStyle(Slide.slide, {\n          width: options.autoWidth\n            ? null\n            : unit(Layout.slideWidth(Slide.index)),\n          height: Slide.container ? null : slideHeight,\n        });\n      });\n      Splide.emit(\"resized\");\n    }\n\n    return Layout;\n  }; // CONCATENATED MODULE: ./src/js/components/drag/index.js\n  /**\n   * The component for supporting mouse drag and swipe.\n   *\n   * @author    Naotoshi Fujita\n   * @copyright Naotoshi Fujita. All rights reserved.\n   */\n\n  var drag_abs = Math.abs;\n  /**\n   * If the absolute velocity is greater thant this value,\n   * a slider always goes to a different slide after drag, not allowed to stay on a current slide.\n   */\n\n  var MIN_VELOCITY = 0.1;\n  /**\n   * Adjust how much the track can be pulled on the first or last page.\n   * The larger number this is, the farther the track moves.\n   * This should be around 5 - 9.\n   *\n   * @type {number}\n   */\n\n  var FRICTION_REDUCER = 7;\n  /**\n   * The component supporting mouse drag and swipe.\n   *\n   * @param {Splide} Splide     - A Splide instance.\n   * @param {Object} Components - An object containing components.\n   *\n   * @return {Object} - The component object.\n   */\n\n  /* harmony default export */ var drag = function (Splide, Components) {\n    /**\n     * Store the Move component.\n     *\n     * @type {Object}\n     */\n    var Track = Components.Track;\n    /**\n     * Store the Controller component.\n     *\n     * @type {Object}\n     */\n\n    var Controller = Components.Controller;\n    /**\n     * Coordinate of the track on starting drag.\n     *\n     * @type {Object}\n     */\n\n    var startCoord;\n    /**\n     * Analyzed info on starting drag.\n     *\n     * @type {Object|null}\n     */\n\n    var startInfo;\n    /**\n     * Analyzed info being updated while dragging/swiping.\n     *\n     * @type {Object}\n     */\n\n    var currentInfo;\n    /**\n     * Determine whether slides are being dragged or not.\n     *\n     * @type {boolean}\n     */\n\n    var isDragging;\n    /**\n     * Whether the slider direction is vertical or not.\n     *\n     * @type {boolean}\n     */\n\n    var isVertical = Splide.options.direction === TTB;\n    /**\n     * Axis for the direction.\n     *\n     * @type {string}\n     */\n\n    var axis = isVertical ? \"y\" : \"x\";\n    /**\n     * Drag component object.\n     *\n     * @type {Object}\n     */\n\n    var Drag = {\n      /**\n       * Whether dragging is disabled or not.\n       *\n       * @type {boolean}\n       */\n      disabled: false,\n\n      /**\n       * Called when the component is mounted.\n       */\n      mount: function mount() {\n        var _this = this;\n\n        var Elements = Components.Elements;\n        var track = Elements.track;\n        Splide.on(\"touchstart mousedown\", start, track)\n          .on(\"touchmove mousemove\", move, track, {\n            passive: false,\n          })\n          .on(\"touchend touchcancel mouseleave mouseup dragend\", end, track)\n          .on(\"mounted refresh\", function () {\n            // Prevent dragging an image or anchor itself.\n            each(Elements.list.querySelectorAll(\"img, a\"), function (elm) {\n              Splide.off(\"dragstart\", elm).on(\n                \"dragstart\",\n                function (e) {\n                  e.preventDefault();\n                },\n                elm,\n                {\n                  passive: false,\n                }\n              );\n            });\n          })\n          .on(\"mounted updated\", function () {\n            _this.disabled = !Splide.options.drag;\n          });\n      },\n    };\n    /**\n     * Called when the track starts to be dragged.\n     *\n     * @param {TouchEvent|MouseEvent} e - TouchEvent or MouseEvent object.\n     */\n\n    function start(e) {\n      if (!Drag.disabled && !isDragging) {\n        // These prams are used to evaluate whether the slider should start moving.\n        init(e);\n      }\n    }\n    /**\n     * Initialize parameters.\n     *\n     * @param {TouchEvent|MouseEvent} e - TouchEvent or MouseEvent object.\n     */\n\n    function init(e) {\n      startCoord = Track.toCoord(Track.position);\n      startInfo = analyze(e, {});\n      currentInfo = startInfo;\n    }\n    /**\n     * Called while the track being dragged.\n     *\n     * @param {TouchEvent|MouseEvent} e - TouchEvent or MouseEvent object.\n     */\n\n    function move(e) {\n      if (startInfo) {\n        currentInfo = analyze(e, startInfo);\n\n        if (isDragging) {\n          if (e.cancelable) {\n            e.preventDefault();\n          }\n\n          if (!Splide.is(FADE)) {\n            var position = startCoord[axis] + currentInfo.offset[axis];\n            Track.translate(resist(position));\n          }\n        } else {\n          if (shouldMove(currentInfo)) {\n            Splide.emit(\"drag\", startInfo);\n            isDragging = true;\n            Track.cancel(); // These params are actual drag data.\n\n            init(e);\n          }\n        }\n      }\n    }\n    /**\n     * Determine whether to start moving the track or not by drag angle.\n     *\n     * @param {Object} info - An information object.\n     *\n     * @return {boolean} - True if the track should be moved or false if not.\n     */\n\n    function shouldMove(_ref) {\n      var offset = _ref.offset;\n\n      if (Splide.State.is(MOVING) && Splide.options.waitForTransition) {\n        return false;\n      }\n\n      var angle =\n        (Math.atan(drag_abs(offset.y) / drag_abs(offset.x)) * 180) / Math.PI;\n\n      if (isVertical) {\n        angle = 90 - angle;\n      }\n\n      return angle < Splide.options.dragAngleThreshold;\n    }\n    /**\n     * Resist dragging the track on the first/last page because there is no more.\n     *\n     * @param {number} position - A position being applied to the track.\n     *\n     * @return {Object} - Adjusted position.\n     */\n\n    function resist(position) {\n      if (Splide.is(SLIDE)) {\n        var sign = Track.sign;\n\n        var _start = sign * Track.trim(Track.toPosition(0));\n\n        var _end = sign * Track.trim(Track.toPosition(Controller.edgeIndex));\n\n        position *= sign;\n\n        if (position < _start) {\n          position = _start - FRICTION_REDUCER * Math.log(_start - position);\n        } else if (position > _end) {\n          position = _end + FRICTION_REDUCER * Math.log(position - _end);\n        }\n\n        position *= sign;\n      }\n\n      return position;\n    }\n    /**\n     * Called when dragging ends.\n     */\n\n    function end() {\n      startInfo = null;\n\n      if (isDragging) {\n        Splide.emit(\"dragged\", currentInfo);\n        go(currentInfo);\n        isDragging = false;\n      }\n    }\n    /**\n     * Go to the slide determined by the analyzed data.\n     *\n     * @param {Object} info - An info object.\n     */\n\n    function go(info) {\n      var velocity = info.velocity[axis];\n      var absV = drag_abs(velocity);\n\n      if (absV > 0) {\n        var options = Splide.options;\n        var index = Splide.index;\n        var sign = velocity < 0 ? -1 : 1;\n        var destIndex = index;\n\n        if (!Splide.is(FADE)) {\n          var destination = Track.position;\n\n          if (\n            absV > options.flickVelocityThreshold &&\n            drag_abs(info.offset[axis]) < options.swipeDistanceThreshold\n          ) {\n            destination +=\n              sign *\n              Math.min(\n                absV * options.flickPower,\n                Components.Layout.size * (options.flickMaxPages || 1)\n              );\n          }\n\n          destIndex = Track.toIndex(destination);\n        }\n        /*\n         * Do not allow the track to go to a previous position if there is enough velocity.\n         * Always use the adjacent index for the fade mode.\n         */\n\n        if (destIndex === index && absV > MIN_VELOCITY) {\n          destIndex = index + sign * Track.sign;\n        }\n\n        if (Splide.is(SLIDE)) {\n          destIndex = between(destIndex, 0, Controller.edgeIndex);\n        }\n\n        Controller.go(destIndex, options.isNavigation);\n      }\n    }\n    /**\n     * Analyze the given event object and return important information for handling swipe behavior.\n     *\n     * @param {Event}   e          - Touch or Mouse event object.\n     * @param {Object}  startInfo  - Information analyzed on start for calculating difference from the current one.\n     *\n     * @return {Object} - An object containing analyzed information, such as offset, velocity, etc.\n     */\n\n    function analyze(e, startInfo) {\n      var timeStamp = e.timeStamp,\n        touches = e.touches;\n\n      var _ref2 = touches ? touches[0] : e,\n        clientX = _ref2.clientX,\n        clientY = _ref2.clientY;\n\n      var _ref3 = startInfo.to || {},\n        _ref3$x = _ref3.x,\n        fromX = _ref3$x === void 0 ? clientX : _ref3$x,\n        _ref3$y = _ref3.y,\n        fromY = _ref3$y === void 0 ? clientY : _ref3$y;\n\n      var startTime = startInfo.time || 0;\n      var offset = {\n        x: clientX - fromX,\n        y: clientY - fromY,\n      };\n      var duration = timeStamp - startTime;\n      var velocity = {\n        x: offset.x / duration,\n        y: offset.y / duration,\n      };\n      return {\n        to: {\n          x: clientX,\n          y: clientY,\n        },\n        offset: offset,\n        time: timeStamp,\n        velocity: velocity,\n      };\n    }\n\n    return Drag;\n  }; // CONCATENATED MODULE: ./src/js/components/click/index.js\n  /**\n   * The component for handling a click event.\n   *\n   * @author    Naotoshi Fujita\n   * @copyright Naotoshi Fujita. All rights reserved.\n   */\n\n  /**\n   * The component for handling a click event.\n   * Click should be disabled during drag/swipe.\n   *\n   * @param {Splide} Splide     - A Splide instance.\n   * @param {Object} Components - An object containing components.\n   *\n   * @return {Object} - The component object.\n   */\n  /* harmony default export */ var click = function (Splide, Components) {\n    /**\n     * Whether click is disabled or not.\n     *\n     * @type {boolean}\n     */\n    var disabled = false;\n    /**\n     * Click component object.\n     *\n     * @type {Object}\n     */\n\n    var Click = {\n      /**\n       * Mount only when the drag is activated and the slide type is not \"fade\".\n       *\n       * @type {boolean}\n       */\n      required: Splide.options.drag,\n\n      /**\n       * Called when the component is mounted.\n       */\n      mount: function mount() {\n        Splide.on(\"click\", onClick, Components.Elements.track, {\n          capture: true,\n        })\n          .on(\"drag\", function () {\n            disabled = true;\n          })\n          .on(\"dragged\", function () {\n            // Make sure the flag is released after the click event is fired.\n            setTimeout(function () {\n              disabled = false;\n            });\n          });\n      },\n    };\n    /**\n     * Called when a track element is clicked.\n     *\n     * @param {Event} e - A click event.\n     */\n\n    function onClick(e) {\n      if (disabled) {\n        e.preventDefault();\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n      }\n    }\n\n    return Click;\n  }; // CONCATENATED MODULE: ./src/js/components/autoplay/index.js\n  /**\n   * The component for playing slides automatically.\n   *\n   * @author    Naotoshi Fujita\n   * @copyright Naotoshi Fujita. All rights reserved.\n   */\n\n  /**\n   * Set of pause flags.\n   */\n\n  var PAUSE_FLAGS = {\n    HOVER: 1,\n    FOCUS: 2,\n    MANUAL: 3,\n  };\n  /**\n   * The component for playing slides automatically.\n   *\n   * @param {Splide} Splide     - A Splide instance.\n   * @param {Object} Components - An object containing components.\n   * @param {string} name       - A component name as a lowercase string.\n   *\n   * @return {Object} - The component object.\n   */\n\n  /* harmony default export */ var autoplay = function (\n    Splide,\n    Components,\n    name\n  ) {\n    /**\n     * Store pause flags.\n     *\n     * @type {Array}\n     */\n    var flags = [];\n    /**\n     * Store an interval object.\n     *\n     * @type {Object};\n     */\n\n    var interval;\n    /**\n     * Keep the Elements component.\n     *\n     * @type {string}\n     */\n\n    var Elements = Components.Elements;\n    /**\n     * Autoplay component object.\n     *\n     * @type {Object}\n     */\n\n    var Autoplay = {\n      /**\n       * Required only when the autoplay option is true.\n       *\n       * @type {boolean}\n       */\n      required: Splide.options.autoplay,\n\n      /**\n       * Called when the component is mounted.\n       * Note that autoplay starts only if there are slides over perPage number.\n       */\n      mount: function mount() {\n        var options = Splide.options;\n\n        if (Elements.slides.length > options.perPage) {\n          interval = createInterval(\n            function () {\n              Splide.go(\">\");\n            },\n            options.interval,\n            function (rate) {\n              Splide.emit(name + \":playing\", rate);\n\n              if (Elements.bar) {\n                applyStyle(Elements.bar, {\n                  width: rate * 100 + \"%\",\n                });\n              }\n            }\n          );\n          bind();\n          this.play();\n        }\n      },\n\n      /**\n       * Start autoplay.\n       *\n       * @param {number} flag - A pause flag to be removed.\n       */\n      play: function play(flag) {\n        if (flag === void 0) {\n          flag = 0;\n        }\n\n        flags = flags.filter(function (f) {\n          return f !== flag;\n        });\n\n        if (!flags.length) {\n          Splide.emit(name + \":play\");\n          interval.play(Splide.options.resetProgress);\n        }\n      },\n\n      /**\n       * Pause autoplay.\n       * Note that Array.includes is not supported by IE.\n       *\n       * @param {number} flag - A pause flag to be added.\n       */\n      pause: function pause(flag) {\n        if (flag === void 0) {\n          flag = 0;\n        }\n\n        interval.pause();\n\n        if (flags.indexOf(flag) === -1) {\n          flags.push(flag);\n        }\n\n        if (flags.length === 1) {\n          Splide.emit(name + \":pause\");\n        }\n      },\n    };\n    /**\n     * Listen some events.\n     */\n\n    function bind() {\n      var options = Splide.options;\n      var sibling = Splide.sibling;\n      var elms = [Splide.root, sibling ? sibling.root : null];\n\n      if (options.pauseOnHover) {\n        switchOn(elms, \"mouseleave\", PAUSE_FLAGS.HOVER, true);\n        switchOn(elms, \"mouseenter\", PAUSE_FLAGS.HOVER, false);\n      }\n\n      if (options.pauseOnFocus) {\n        switchOn(elms, \"focusout\", PAUSE_FLAGS.FOCUS, true);\n        switchOn(elms, \"focusin\", PAUSE_FLAGS.FOCUS, false);\n      }\n\n      if (Elements.play) {\n        Splide.on(\n          \"click\",\n          function () {\n            // Need to be removed a focus flag at first.\n            Autoplay.play(PAUSE_FLAGS.FOCUS);\n            Autoplay.play(PAUSE_FLAGS.MANUAL);\n          },\n          Elements.play\n        );\n      }\n\n      if (Elements.pause) {\n        switchOn([Elements.pause], \"click\", PAUSE_FLAGS.MANUAL, false);\n      }\n\n      Splide.on(\"move refresh\", function () {\n        Autoplay.play();\n      }) // Rewind the timer.\n        .on(\"destroy\", function () {\n          Autoplay.pause();\n        });\n    }\n    /**\n     * Play or pause on the given event.\n     *\n     * @param {Element[]} elms  - Elements.\n     * @param {string}    event - An event name or names.\n     * @param {number}    flag  - A pause flag defined on the top.\n     * @param {boolean}   play  - Determine whether to play or pause.\n     */\n\n    function switchOn(elms, event, flag, play) {\n      elms.forEach(function (elm) {\n        Splide.on(\n          event,\n          function () {\n            Autoplay[play ? \"play\" : \"pause\"](flag);\n          },\n          elm\n        );\n      });\n    }\n\n    return Autoplay;\n  }; // CONCATENATED MODULE: ./src/js/components/cover/index.js\n  /**\n   * The component for change an img element to background image of its wrapper.\n   *\n   * @author    Naotoshi Fujita\n   * @copyright Naotoshi Fujita. All rights reserved.\n   */\n\n  /**\n   * The component for change an img element to background image of its wrapper.\n   *\n   * @param {Splide} Splide     - A Splide instance.\n   * @param {Object} Components - An object containing components.\n   *\n   * @return {Object} - The component object.\n   */\n\n  /* harmony default export */ var cover = function (Splide, Components) {\n    /**\n     * Hold options.\n     *\n     * @type {Object}\n     */\n    var options = Splide.options;\n    /**\n     * Cover component object.\n     *\n     * @type {Object}\n     */\n\n    var Cover = {\n      /**\n       * Required only when \"cover\" option is true.\n       *\n       * @type {boolean}\n       */\n      required: options.cover,\n\n      /**\n       * Called when the component is mounted.\n       */\n      mount: function mount() {\n        Splide.on(\"lazyload:loaded\", function (img) {\n          cover(img, false);\n        });\n        Splide.on(\"mounted updated refresh\", function () {\n          return apply(false);\n        });\n      },\n\n      /**\n       * Destroy.\n       */\n      destroy: function destroy() {\n        apply(true);\n      },\n    };\n    /**\n     * Apply \"cover\" to all slides.\n     *\n     * @param {boolean} uncover - If true, \"cover\" will be clear.\n     */\n\n    function apply(uncover) {\n      Components.Elements.each(function (Slide) {\n        var img = child(Slide.slide, \"IMG\") || child(Slide.container, \"IMG\");\n\n        if (img && img.src) {\n          cover(img, uncover);\n        }\n      });\n    }\n    /**\n     * Set background image of the parent element, using source of the given image element.\n     *\n     * @param {Element} img     - An image element.\n     * @param {boolean} uncover - Reset \"cover\".\n     */\n\n    function cover(img, uncover) {\n      applyStyle(img.parentElement, {\n        background: uncover\n          ? \"\"\n          : 'center/cover no-repeat url(\"' + img.src + '\")',\n      });\n      applyStyle(img, {\n        display: uncover ? \"\" : \"none\",\n      });\n    }\n\n    return Cover;\n  }; // CONCATENATED MODULE: ./src/js/components/arrows/path.js\n  /**\n   * Export vector path for an arrow.\n   *\n   * @author    Naotoshi Fujita\n   * @copyright Naotoshi Fujita. All rights reserved.\n   */\n\n  /**\n   * Namespace definition for SVG element.\n   *\n   * @type {string}\n   */\n  var XML_NAME_SPACE = \"http://www.w3.org/2000/svg\";\n  /**\n   * The arrow vector path.\n   *\n   * @type {number}\n   */\n\n  var PATH =\n    \"m15.5 0.932-4.3 4.38 14.5 14.6-14.5 14.5 4.3 4.4 14.6-14.6 4.4-4.3-4.4-4.4-14.6-14.6z\";\n  /**\n   * SVG width and height.\n   *\n   * @type {number}\n   */\n\n  var SIZE = 40; // CONCATENATED MODULE: ./src/js/components/arrows/index.js\n  /**\n   * The component for appending prev/next arrows.\n   *\n   * @author    Naotoshi Fujita\n   * @copyright Naotoshi Fujita. All rights reserved.\n   */\n\n  /**\n   * The component for appending prev/next arrows.\n   *\n   * @param {Splide} Splide     - A Splide instance.\n   * @param {Object} Components - An object containing components.\n   * @param {string} name       - A component name as a lowercase string.\n   *\n   * @return {Object} - The component object.\n   */\n\n  /* harmony default export */ var arrows = function (\n    Splide,\n    Components,\n    name\n  ) {\n    /**\n     * Previous arrow element.\n     *\n     * @type {Element|undefined}\n     */\n    var prev;\n    /**\n     * Next arrow element.\n     *\n     * @type {Element|undefined}\n     */\n\n    var next;\n    /**\n     * Store the class list.\n     *\n     * @type {Object}\n     */\n\n    var classes = Splide.classes;\n    /**\n     * Hold the root element.\n     *\n     * @type {Element}\n     */\n\n    var root = Splide.root;\n    /**\n     * Whether arrows are created programmatically or not.\n     *\n     * @type {boolean}\n     */\n\n    var created;\n    /**\n     * Hold the Elements component.\n     *\n     * @type {Object}\n     */\n\n    var Elements = Components.Elements;\n    /**\n     * Arrows component object.\n     *\n     * @type {Object}\n     */\n\n    var Arrows = {\n      /**\n       * Required when the arrows option is true.\n       *\n       * @type {boolean}\n       */\n      required: Splide.options.arrows,\n\n      /**\n       * Called when the component is mounted.\n       */\n      mount: function mount() {\n        // Attempt to get arrows from HTML source.\n        prev = Elements.arrows.prev;\n        next = Elements.arrows.next; // If arrows were not found in HTML, let's generate them.\n\n        if ((!prev || !next) && Splide.options.arrows) {\n          prev = createArrow(true);\n          next = createArrow(false);\n          created = true;\n          appendArrows();\n        }\n\n        if (prev && next) {\n          bind();\n        }\n\n        this.arrows = {\n          prev: prev,\n          next: next,\n        };\n      },\n\n      /**\n       * Called after all components are mounted.\n       */\n      mounted: function mounted() {\n        Splide.emit(name + \":mounted\", prev, next);\n      },\n\n      /**\n       * Destroy.\n       */\n      destroy: function destroy() {\n        removeAttribute([prev, next], \"disabled\");\n\n        if (created) {\n          dom_remove(prev.parentElement);\n        }\n      },\n    };\n    /**\n     * Listen to native and custom events.\n     */\n\n    function bind() {\n      Splide.on(\n        \"click\",\n        function () {\n          Splide.go(\"<\");\n        },\n        prev\n      )\n        .on(\n          \"click\",\n          function () {\n            Splide.go(\">\");\n          },\n          next\n        )\n        .on(\"mounted move updated refresh\", updateDisabled);\n    }\n    /**\n     * Update a disabled attribute.\n     */\n\n    function updateDisabled() {\n      var _Components$Controlle = Components.Controller,\n        prevIndex = _Components$Controlle.prevIndex,\n        nextIndex = _Components$Controlle.nextIndex;\n      var isEnough = Splide.length > Splide.options.perPage || Splide.is(LOOP);\n      prev.disabled = prevIndex < 0 || !isEnough;\n      next.disabled = nextIndex < 0 || !isEnough;\n      Splide.emit(name + \":updated\", prev, next, prevIndex, nextIndex);\n    }\n    /**\n     * Create a wrapper element and append arrows.\n     */\n\n    function appendArrows() {\n      var wrapper = create(\"div\", {\n        class: classes.arrows,\n      });\n      append(wrapper, prev);\n      append(wrapper, next);\n      var slider = Elements.slider;\n      var parent = Splide.options.arrows === \"slider\" && slider ? slider : root;\n      before(wrapper, parent.firstElementChild);\n    }\n    /**\n     * Create an arrow element.\n     *\n     * @param {boolean} prev - Determine to create a prev arrow or next arrow.\n     *\n     * @return {Element} - A created arrow element.\n     */\n\n    function createArrow(prev) {\n      var arrow =\n        '<button class=\"' +\n        classes.arrow +\n        \" \" +\n        (prev ? classes.prev : classes.next) +\n        '\" type=\"button\">' +\n        ('<svg xmlns=\"' +\n          XML_NAME_SPACE +\n          '\"\\tviewBox=\"0 0 ' +\n          SIZE +\n          \" \" +\n          SIZE +\n          '\"\\twidth=\"' +\n          SIZE +\n          '\"\\theight=\"' +\n          SIZE +\n          '\">') +\n        ('<path d=\"' + (Splide.options.arrowPath || PATH) + '\" />');\n      return domify(arrow);\n    }\n\n    return Arrows;\n  }; // CONCATENATED MODULE: ./src/js/components/pagination/index.js\n  /**\n   * The component for handling pagination\n   *\n   * @author    Naotoshi Fujita\n   * @copyright Naotoshi Fujita. All rights reserved.\n   */\n\n  /**\n   * The event name for updating some attributes of pagination nodes.\n   *\n   * @type {string}\n   */\n\n  var ATTRIBUTES_UPDATE_EVENT = \"move.page\";\n  /**\n   * The event name for recreating pagination.\n   *\n   * @type {string}\n   */\n\n  var UPDATE_EVENT = \"updated.page refresh.page\";\n  /**\n   * The component for handling pagination\n   *\n   * @param {Splide} Splide     - A Splide instance.\n   * @param {Object} Components - An object containing components.\n   * @param {string} name       - A component name as a lowercase string.\n   *\n   * @return {Object} - The component object.\n   */\n\n  /* harmony default export */ var pagination = function (\n    Splide,\n    Components,\n    name\n  ) {\n    /**\n     * Store all data for pagination.\n     * - list: A list element.\n     * - items: An array that contains objects(li, button, index, page).\n     *\n     * @type {Object}\n     */\n    var data = {};\n    /**\n     * Hold the Elements component.\n     *\n     * @type {Object}\n     */\n\n    var Elements = Components.Elements;\n    /**\n     * Pagination component object.\n     *\n     * @type {Object}\n     */\n\n    var Pagination = {\n      /**\n       * Called when the component is mounted.\n       */\n      mount: function mount() {\n        var pagination = Splide.options.pagination;\n\n        if (pagination) {\n          data = createPagination();\n          var slider = Elements.slider;\n          var parent = pagination === \"slider\" && slider ? slider : Splide.root;\n          append(parent, data.list);\n          Splide.on(ATTRIBUTES_UPDATE_EVENT, updateAttributes);\n        }\n\n        Splide.off(UPDATE_EVENT).on(UPDATE_EVENT, function () {\n          Pagination.destroy();\n\n          if (Splide.options.pagination) {\n            Pagination.mount();\n            Pagination.mounted();\n          }\n        });\n      },\n\n      /**\n       * Called after all components are mounted.\n       */\n      mounted: function mounted() {\n        if (Splide.options.pagination) {\n          var index = Splide.index;\n          Splide.emit(name + \":mounted\", data, this.getItem(index));\n          updateAttributes(index, -1);\n        }\n      },\n\n      /**\n       * Destroy the pagination.\n       * Be aware that node.remove() is not supported by IE.\n       */\n      destroy: function destroy() {\n        dom_remove(data.list);\n\n        if (data.items) {\n          data.items.forEach(function (item) {\n            Splide.off(\"click\", item.button);\n          });\n        } // Do not remove UPDATE_EVENT to recreate pagination if needed.\n\n        Splide.off(ATTRIBUTES_UPDATE_EVENT);\n        data = {};\n      },\n\n      /**\n       * Return an item by index.\n       *\n       * @param {number} index - A slide index.\n       *\n       * @return {Object|undefined} - An item object on success or undefined on failure.\n       */\n      getItem: function getItem(index) {\n        return data.items[Components.Controller.toPage(index)];\n      },\n\n      /**\n       * Return object containing pagination data.\n       *\n       * @return {Object} - Pagination data including list and items.\n       */\n      get data() {\n        return data;\n      },\n    };\n    /**\n     * Update attributes.\n     *\n     * @param {number} index     - Active index.\n     * @param {number} prevIndex - Prev index.\n     */\n\n    function updateAttributes(index, prevIndex) {\n      var prev = Pagination.getItem(prevIndex);\n      var curr = Pagination.getItem(index);\n      var active = STATUS_CLASSES.active;\n\n      if (prev) {\n        removeClass(prev.button, active);\n      }\n\n      if (curr) {\n        addClass(curr.button, active);\n      }\n\n      Splide.emit(name + \":updated\", data, prev, curr);\n    }\n    /**\n     * Create a wrapper and button elements.\n     *\n     * @return {Object} - An object contains all data.\n     */\n\n    function createPagination() {\n      var options = Splide.options;\n      var classes = Splide.classes;\n      var list = create(\"ul\", {\n        class: classes.pagination,\n      });\n      var items = Elements.getSlides(false)\n        .filter(function (Slide) {\n          return options.focus !== false || Slide.index % options.perPage === 0;\n        })\n        .map(function (Slide, page) {\n          var li = create(\"li\", {});\n          var button = create(\"button\", {\n            class: classes.page,\n            type: \"button\",\n          });\n          append(li, button);\n          append(list, li);\n          Splide.on(\n            \"click\",\n            function () {\n              Splide.go(\">\" + page);\n            },\n            button\n          );\n          return {\n            li: li,\n            button: button,\n            page: page,\n            Slides: Elements.getSlidesByPage(page),\n          };\n        });\n      return {\n        list: list,\n        items: items,\n      };\n    }\n\n    return Pagination;\n  }; // CONCATENATED MODULE: ./src/js/components/lazyload/index.js\n  /**\n   * The component for loading slider images lazily.\n   *\n   * @author    Naotoshi Fujita\n   * @copyright Naotoshi Fujita. All rights reserved.\n   */\n\n  /**\n   * The name for a data attribute of src.\n   *\n   * @type {string}\n   */\n\n  var SRC_DATA_NAME = \"data-splide-lazy\";\n  /**\n   * The name for a data attribute of srcset.\n   *\n   * @type {string}\n   */\n\n  var SRCSET_DATA_NAME = \"data-splide-lazy-srcset\";\n  /**\n   * The component for loading slider images lazily.\n   *\n   * @param {Splide} Splide     - A Splide instance.\n   * @param {Object} Components - An object containing components.\n   * @param {string} name       - A component name as a lowercase string.\n   *\n   * @return {Object} - The component object.\n   */\n\n  /* harmony default export */ var lazyload = function (\n    Splide,\n    Components,\n    name\n  ) {\n    /**\n     * Next index for sequential loading.\n     *\n     * @type {number}\n     */\n    var nextIndex;\n    /**\n     * Store objects containing an img element and a Slide object.\n     *\n     * @type {Object[]}\n     */\n\n    var images;\n    /**\n     * Store the options.\n     *\n     * @type {Object}\n     */\n\n    var options = Splide.options;\n    /**\n     * Whether to load images sequentially or not.\n     *\n     * @type {boolean}\n     */\n\n    var isSequential = options.lazyLoad === \"sequential\";\n    /**\n     * Lazyload component object.\n     *\n     * @type {Object}\n     */\n\n    var Lazyload = {\n      /**\n       * Mount only when the lazyload option is provided.\n       *\n       * @type {boolean}\n       */\n      required: options.lazyLoad,\n\n      /**\n       * Called when the component is mounted.\n       */\n      mount: function mount() {\n        Splide.on(\"mounted refresh\", function () {\n          init();\n          Components.Elements.each(function (Slide) {\n            each(\n              Slide.slide.querySelectorAll(\n                \"[\" + SRC_DATA_NAME + \"], [\" + SRCSET_DATA_NAME + \"]\"\n              ),\n              function (img) {\n                if (!img.src && !img.srcset) {\n                  images.push({\n                    img: img,\n                    Slide: Slide,\n                  });\n                  applyStyle(img, {\n                    display: \"none\",\n                  });\n                }\n              }\n            );\n          });\n\n          if (isSequential) {\n            loadNext();\n          }\n        });\n\n        if (!isSequential) {\n          Splide.on(\"mounted refresh moved.\" + name, check);\n        }\n      },\n\n      /**\n       * Destroy.\n       */\n      destroy: init,\n    };\n    /**\n     * Initialize parameters.\n     */\n\n    function init() {\n      images = [];\n      nextIndex = 0;\n    }\n    /**\n     * Check how close each image is from the active slide and\n     * determine whether to start loading or not, according to the distance.\n     *\n     * @param {number} index - Current index.\n     */\n\n    function check(index) {\n      index = isNaN(index) ? Splide.index : index;\n      images = images.filter(function (image) {\n        if (\n          image.Slide.isWithin(\n            index,\n            options.perPage * (options.preloadPages + 1)\n          )\n        ) {\n          load(image.img, image.Slide);\n          return false;\n        }\n\n        return true;\n      }); // Unbind if all images are loaded.\n\n      if (!images[0]) {\n        Splide.off(\"moved.\" + name);\n      }\n    }\n    /**\n     * Start loading an image.\n     * Creating a clone of the image element since setting src attribute directly to it\n     * often occurs 'hitch', blocking some other processes of a browser.\n     *\n     * @param {Element} img   - An image element.\n     * @param {Object}  Slide - A Slide object.\n     */\n\n    function load(img, Slide) {\n      addClass(Slide.slide, STATUS_CLASSES.loading);\n      var spinner = create(\"span\", {\n        class: Splide.classes.spinner,\n      });\n      append(img.parentElement, spinner);\n\n      img.onload = function () {\n        loaded(img, spinner, Slide, false);\n      };\n\n      img.onerror = function () {\n        loaded(img, spinner, Slide, true);\n      };\n\n      setAttribute(img, \"srcset\", getAttribute(img, SRCSET_DATA_NAME) || \"\");\n      setAttribute(img, \"src\", getAttribute(img, SRC_DATA_NAME) || \"\");\n    }\n    /**\n     * Start loading a next image in images array.\n     */\n\n    function loadNext() {\n      if (nextIndex < images.length) {\n        var image = images[nextIndex];\n        load(image.img, image.Slide);\n      }\n\n      nextIndex++;\n    }\n    /**\n     * Called just after the image was loaded or loading was aborted by some error.\n     *\n     * @param {Element} img     - An image element.\n     * @param {Element} spinner - A spinner element.\n     * @param {Object}  Slide   - A Slide object.\n     * @param {boolean} error   - True if the image was loaded successfully or false on error.\n     */\n\n    function loaded(img, spinner, Slide, error) {\n      removeClass(Slide.slide, STATUS_CLASSES.loading);\n\n      if (!error) {\n        dom_remove(spinner);\n        applyStyle(img, {\n          display: \"\",\n        });\n        Splide.emit(name + \":loaded\", img).emit(\"resize\");\n      }\n\n      if (isSequential) {\n        loadNext();\n      }\n    }\n\n    return Lazyload;\n  }; // CONCATENATED MODULE: ./src/js/constants/a11y.js\n  /**\n   * Export aria attribute names.\n   *\n   * @author    Naotoshi Fujita\n   * @copyright Naotoshi Fujita. All rights reserved.\n   */\n\n  /**\n   * Attribute name for aria-current.\n   *\n   * @type {string}\n   */\n  var ARIA_CURRENRT = \"aria-current\";\n  /**\n   * Attribute name for aria-control.\n   *\n   * @type {string}\n   */\n\n  var ARIA_CONTROLS = \"aria-controls\";\n  /**\n   * Attribute name for aria-control.\n   *\n   * @type {string}\n   */\n\n  var ARIA_LABEL = \"aria-label\";\n  /**\n   * Attribute name for aria-labelledby.\n   *\n   * @type {string}\n   */\n\n  var ARIA_LABELLEDBY = \"aria-labelledby\";\n  /**\n   * Attribute name for aria-hidden.\n   *\n   * @type {string}\n   */\n\n  var ARIA_HIDDEN = \"aria-hidden\";\n  /**\n   * Attribute name for tab-index.\n   *\n   * @type {string}\n   */\n\n  var TAB_INDEX = \"tabindex\"; // CONCATENATED MODULE: ./src/js/components/keyboard/index.js\n  /**\n   * The component for controlling slides via keyboard.\n   *\n   * @author    Naotoshi Fujita\n   * @copyright Naotoshi Fujita. All rights reserved.\n   */\n\n  /**\n   * Map a key to a slide control.\n   *\n   * @type {Object}\n   */\n\n  var KEY_MAP = {\n    ltr: {\n      ArrowLeft: \"<\",\n      ArrowRight: \">\",\n      // For IE.\n      Left: \"<\",\n      Right: \">\",\n    },\n    rtl: {\n      ArrowLeft: \">\",\n      ArrowRight: \"<\",\n      // For IE.\n      Left: \">\",\n      Right: \"<\",\n    },\n    ttb: {\n      ArrowUp: \"<\",\n      ArrowDown: \">\",\n      // For IE.\n      Up: \"<\",\n      Down: \">\",\n    },\n  };\n  /**\n   * The component for controlling slides via keyboard.\n   *\n   * @param {Splide} Splide - A Splide instance.\n   *\n   * @return {Object} - The component object.\n   */\n\n  /* harmony default export */ var keyboard = function (Splide) {\n    /**\n     * Hold the target element.\n     *\n     * @type {Element|Document|undefined}\n     */\n    var target;\n    return {\n      /**\n       * Called when the component is mounted.\n       */\n      mount: function mount() {\n        Splide.on(\"mounted updated\", function () {\n          var options = Splide.options;\n          var root = Splide.root;\n          var map = KEY_MAP[options.direction];\n          var keyboard = options.keyboard;\n\n          if (target) {\n            Splide.off(\"keydown\", target);\n            removeAttribute(root, TAB_INDEX);\n          }\n\n          if (keyboard) {\n            if (keyboard === \"focused\") {\n              target = root;\n              setAttribute(root, TAB_INDEX, 0);\n            } else {\n              target = document;\n            }\n\n            Splide.on(\n              \"keydown\",\n              function (e) {\n                if (root.contains(document.activeElement) && map[e.key]) {\n                  Splide.go(map[e.key]);\n                }\n              },\n              target\n            );\n          }\n        });\n      },\n    };\n  }; // CONCATENATED MODULE: ./src/js/components/a11y/index.js\n  /**\n   * The component for enhancing accessibility.\n   *\n   * @author    Naotoshi Fujita\n   * @copyright Naotoshi Fujita. All rights reserved.\n   */\n\n  /**\n   * The component for enhancing accessibility.\n   *\n   * @param {Splide} Splide     - A Splide instance.\n   * @param {Object} Components - An object containing components.\n   *\n   * @return {Object} - The component object.\n   */\n\n  /* harmony default export */ var a11y = function (Splide, Components) {\n    /**\n     * Hold a i18n object.\n     *\n     * @type {Object}\n     */\n    var i18n = Splide.i18n;\n    /**\n     * Hold the Elements component.\n     *\n     * @type {Object}\n     */\n\n    var Elements = Components.Elements;\n    /**\n     * All attributes related with A11y.\n     *\n     * @type {string[]}\n     */\n\n    var allAttributes = [\n      ARIA_HIDDEN,\n      TAB_INDEX,\n      ARIA_CONTROLS,\n      ARIA_LABEL,\n      ARIA_CURRENRT,\n      \"role\",\n    ];\n    /**\n     * A11y component object.\n     *\n     * @type {Object}\n     */\n\n    var A11y = {\n      /**\n       * Required only when the accessibility option is true.\n       *\n       * @type {boolean}\n       */\n      required: Splide.options.accessibility,\n\n      /**\n       * Called when the component is mounted.\n       */\n      mount: function mount() {\n        Splide.on(\"visible\", function (Slide) {\n          updateSlide(Slide.slide, true);\n        })\n          .on(\"hidden\", function (Slide) {\n            updateSlide(Slide.slide, false);\n          })\n          .on(\"arrows:mounted\", initArrows)\n          .on(\"arrows:updated\", updateArrows)\n          .on(\"pagination:mounted\", initPagination)\n          .on(\"pagination:updated\", updatePagination)\n          .on(\"refresh\", function () {\n            removeAttribute(Components.Clones.clones, allAttributes);\n          });\n\n        if (Splide.options.isNavigation) {\n          Splide.on(\"navigation:mounted navigation:updated\", initNavigation)\n            .on(\"active\", function (Slide) {\n              updateNavigation(Slide, true);\n            })\n            .on(\"inactive\", function (Slide) {\n              updateNavigation(Slide, false);\n            });\n        }\n\n        initAutoplay();\n      },\n\n      /**\n       * Destroy.\n       */\n      destroy: function destroy() {\n        var Arrows = Components.Arrows;\n        var arrows = Arrows ? Arrows.arrows : {};\n        removeAttribute(\n          Elements.slides.concat([\n            arrows.prev,\n            arrows.next,\n            Elements.play,\n            Elements.pause,\n          ]),\n          allAttributes\n        );\n      },\n    };\n    /**\n     * Update slide attributes when it gets visible or hidden.\n     *\n     * @param {Element} slide   - A slide element.\n     * @param {Boolean} visible - True when the slide gets visible, or false when hidden.\n     */\n\n    function updateSlide(slide, visible) {\n      setAttribute(slide, ARIA_HIDDEN, !visible);\n\n      if (Splide.options.slideFocus) {\n        setAttribute(slide, TAB_INDEX, visible ? 0 : -1);\n      }\n    }\n    /**\n     * Initialize arrows if they are available.\n     * Append screen reader elements and add aria-controls attribute.\n     *\n     * @param {Element} prev - Previous arrow element.\n     * @param {Element} next - Next arrow element.\n     */\n\n    function initArrows(prev, next) {\n      var controls = Elements.track.id;\n      setAttribute(prev, ARIA_CONTROLS, controls);\n      setAttribute(next, ARIA_CONTROLS, controls);\n    }\n    /**\n     * Update arrow attributes.\n     *\n     * @param {Element} prev      - Previous arrow element.\n     * @param {Element} next      - Next arrow element.\n     * @param {number}  prevIndex - Previous slide index or -1 when there is no precede slide.\n     * @param {number}  nextIndex - Next slide index or -1 when there is no next slide.\n     */\n\n    function updateArrows(prev, next, prevIndex, nextIndex) {\n      var index = Splide.index;\n      var prevLabel =\n        prevIndex > -1 && index < prevIndex ? i18n.last : i18n.prev;\n      var nextLabel =\n        nextIndex > -1 && index > nextIndex ? i18n.first : i18n.next;\n      setAttribute(prev, ARIA_LABEL, prevLabel);\n      setAttribute(next, ARIA_LABEL, nextLabel);\n    }\n    /**\n     * Initialize pagination if it's available.\n     * Append a screen reader element and add aria-controls/label attribute to each item.\n     *\n     * @param {Object} data       - Data object containing all items.\n     * @param {Object} activeItem - An initial active item.\n     */\n\n    function initPagination(data, activeItem) {\n      if (activeItem) {\n        setAttribute(activeItem.button, ARIA_CURRENRT, true);\n      }\n\n      data.items.forEach(function (item) {\n        var options = Splide.options;\n        var text =\n          options.focus === false && options.perPage > 1\n            ? i18n.pageX\n            : i18n.slideX;\n        var label = sprintf(text, item.page + 1);\n        var button = item.button;\n        var controls = item.Slides.map(function (Slide) {\n          return Slide.slide.id;\n        });\n        setAttribute(button, ARIA_CONTROLS, controls.join(\" \"));\n        setAttribute(button, ARIA_LABEL, label);\n      });\n    }\n    /**\n     * Update pagination attributes.\n     *\n     * @param {Object}  data - Data object containing all items.\n     * @param {Element} prev - A previous active element.\n     * @param {Element} curr - A current active element.\n     */\n\n    function updatePagination(data, prev, curr) {\n      if (prev) {\n        removeAttribute(prev.button, ARIA_CURRENRT);\n      }\n\n      if (curr) {\n        setAttribute(curr.button, ARIA_CURRENRT, true);\n      }\n    }\n    /**\n     * Initialize autoplay buttons.\n     */\n\n    function initAutoplay() {\n      [\"play\", \"pause\"].forEach(function (name) {\n        var elm = Elements[name];\n\n        if (elm) {\n          if (!isButton(elm)) {\n            setAttribute(elm, \"role\", \"button\");\n          }\n\n          setAttribute(elm, ARIA_CONTROLS, Elements.track.id);\n          setAttribute(elm, ARIA_LABEL, i18n[name]);\n        }\n      });\n    }\n    /**\n     * Initialize navigation slider.\n     * Add button role, aria-label, aria-controls to slide elements and append screen reader text to them.\n     *\n     * @param {Splide} main - A main Splide instance.\n     */\n\n    function initNavigation(main) {\n      Elements.each(function (Slide) {\n        var slide = Slide.slide;\n        var realIndex = Slide.realIndex;\n\n        if (!isButton(slide)) {\n          setAttribute(slide, \"role\", \"button\");\n        }\n\n        var slideIndex = realIndex > -1 ? realIndex : Slide.index;\n        var label = sprintf(i18n.slideX, slideIndex + 1);\n        var mainSlide = main.Components.Elements.getSlide(slideIndex);\n        setAttribute(slide, ARIA_LABEL, label);\n\n        if (mainSlide) {\n          setAttribute(slide, ARIA_CONTROLS, mainSlide.slide.id);\n        }\n      });\n    }\n    /**\n     * Update navigation attributes.\n     *\n     * @param {Object}  Slide  - A target Slide object.\n     * @param {boolean} active - True if the slide is active or false if inactive.\n     */\n\n    function updateNavigation(_ref, active) {\n      var slide = _ref.slide;\n\n      if (active) {\n        setAttribute(slide, ARIA_CURRENRT, true);\n      } else {\n        removeAttribute(slide, ARIA_CURRENRT);\n      }\n    }\n    /**\n     * Check if the given element is button or not.\n     *\n     * @param {Element} elm - An element to be checked.\n     *\n     * @return {boolean} - True if the given element is button.\n     */\n\n    function isButton(elm) {\n      return elm.tagName === \"BUTTON\";\n    }\n\n    return A11y;\n  }; // CONCATENATED MODULE: ./src/js/components/sync/index.js\n  /**\n   * The component for synchronizing a slider with another.\n   *\n   * @author    Naotoshi Fujita\n   * @copyright Naotoshi Fujita. All rights reserved.\n   */\n\n  /**\n   * The event name for sync.\n   *\n   * @type {string}\n   */\n\n  var SYNC_EVENT = \"move.sync\";\n  /**\n   * The event names for click navigation.\n   * @type {string}\n   */\n\n  var CLICK_EVENTS = \"mouseup touchend\";\n  /**\n   * The keys for triggering the navigation button.\n   *\n   * @type {String[]}\n   */\n\n  var TRIGGER_KEYS = [\" \", \"Enter\", \"Spacebar\"];\n  /**\n   * The component for synchronizing a slider with another.\n   *\n   * @param {Splide} Splide - A Splide instance.\n   *\n   * @return {Object} - The component object.\n   */\n\n  /* harmony default export */ var sync = function (Splide) {\n    /**\n     * Keep the sibling Splide instance.\n     *\n     * @type {Splide}\n     */\n    var sibling = Splide.sibling;\n    /**\n     * Whether the sibling slider is navigation or not.\n     *\n     * @type {Splide|boolean}\n     */\n\n    var isNavigation = sibling && sibling.options.isNavigation;\n    /**\n     * Layout component object.\n     *\n     * @type {Object}\n     */\n\n    var Sync = {\n      /**\n       * Required only when the sub slider is available.\n       *\n       * @type {boolean}\n       */\n      required: !!sibling,\n\n      /**\n       * Called when the component is mounted.\n       */\n      mount: function mount() {\n        syncMain();\n        syncSibling();\n\n        if (isNavigation) {\n          bind();\n          Splide.on(\"refresh\", function () {\n            setTimeout(function () {\n              bind();\n              sibling.emit(\"navigation:updated\", Splide);\n            });\n          });\n        }\n      },\n\n      /**\n       * Called after all components are mounted.\n       */\n      mounted: function mounted() {\n        if (isNavigation) {\n          sibling.emit(\"navigation:mounted\", Splide);\n        }\n      },\n    };\n    /**\n     * Listen the primary slider event to move secondary one.\n     * Must unbind a handler at first to avoid infinite loop.\n     */\n\n    function syncMain() {\n      Splide.on(SYNC_EVENT, function (newIndex, prevIndex, destIndex) {\n        sibling\n          .off(SYNC_EVENT)\n          .go(sibling.is(LOOP) ? destIndex : newIndex, false);\n        syncSibling();\n      });\n    }\n    /**\n     * Listen the secondary slider event to move primary one.\n     * Must unbind a handler at first to avoid infinite loop.\n     */\n\n    function syncSibling() {\n      sibling.on(SYNC_EVENT, function (newIndex, prevIndex, destIndex) {\n        Splide.off(SYNC_EVENT).go(\n          Splide.is(LOOP) ? destIndex : newIndex,\n          false\n        );\n        syncMain();\n      });\n    }\n    /**\n     * Listen some events on each slide.\n     */\n\n    function bind() {\n      sibling.Components.Elements.each(function (_ref) {\n        var slide = _ref.slide,\n          index = _ref.index;\n\n        /*\n         * Listen mouseup and touchend events to handle click.\n         */\n        Splide.off(CLICK_EVENTS, slide).on(\n          CLICK_EVENTS,\n          function (e) {\n            // Ignore a middle or right click.\n            if (!e.button || e.button === 0) {\n              moveSibling(index);\n            }\n          },\n          slide\n        );\n        /*\n         * Subscribe keyup to handle Enter and Space key.\n         * Note that Array.includes is not supported by IE.\n         */\n\n        Splide.off(\"keyup\", slide).on(\n          \"keyup\",\n          function (e) {\n            if (TRIGGER_KEYS.indexOf(e.key) > -1) {\n              e.preventDefault();\n              moveSibling(index);\n            }\n          },\n          slide,\n          {\n            passive: false,\n          }\n        );\n      });\n    }\n    /**\n     * Move the sibling to the given index.\n     * Need to check \"IDLE\" status because slides can be moving by Drag component.\n     *\n     * @param {number} index - Target index.\n     */\n\n    function moveSibling(index) {\n      if (Splide.State.is(IDLE)) {\n        sibling.go(index);\n      }\n    }\n\n    return Sync;\n  }; // CONCATENATED MODULE: ./src/js/components/breakpoints/index.js\n  /**\n   * The component for updating options according to a current window width.\n   *\n   * @author    Naotoshi Fujita\n   * @copyright Naotoshi Fujita. All rights reserved.\n   */\n\n  /**\n   * Interval time for throttle.\n   *\n   * @type {number}\n   */\n\n  var THROTTLE = 50;\n  /**\n   * The component for updating options according to a current window width.\n   *\n   * @param {Splide} Splide - A Splide instance.\n   *\n   * @return {Object} - The component object.\n   */\n\n  /* harmony default export */ var breakpoints = function (Splide) {\n    /**\n     * Store breakpoints.\n     *\n     * @type {Object|boolean}\n     */\n    var breakpoints = Splide.options.breakpoints;\n    /**\n     * The check function whose frequency of call is reduced.\n     *\n     * @type {Function}\n     */\n\n    var throttledCheck = throttle(check, THROTTLE);\n    /**\n     * Keep initial options.\n     *\n     * @type {Object}\n     */\n\n    var initialOptions;\n    /**\n     * An array containing objects of point and MediaQueryList.\n     *\n     * @type {Object[]}\n     */\n\n    var map = [];\n    /**\n     * Hold the previous breakpoint.\n     *\n     * @type {number|undefined}\n     */\n\n    var prevPoint;\n    /**\n     * Breakpoints component object.\n     *\n     * @type {Object}\n     */\n\n    var Breakpoints = {\n      /**\n       * Required only when the breakpoints definition is provided and browser supports matchMedia.\n       *\n       * @type {boolean}\n       */\n      required: breakpoints && matchMedia,\n\n      /**\n       * Called when the component is mounted.\n       */\n      mount: function mount() {\n        map = Object.keys(breakpoints)\n          .sort(function (n, m) {\n            return +n - +m;\n          })\n          .map(function (point) {\n            return {\n              point: point,\n              mql: matchMedia(\"(max-width:\" + point + \"px)\"),\n            };\n          });\n        /*\n         * To keep monitoring resize event after destruction without \"completely\",\n         * use native addEventListener instead of Splide.on.\n         */\n\n        this.destroy(true);\n        addEventListener(\"resize\", throttledCheck); // Keep initial options to apply them when no breakpoint matches.\n\n        initialOptions = Splide.options;\n        check();\n      },\n\n      /**\n       * Destroy.\n       *\n       * @param {boolean} completely - Whether to destroy Splide completely.\n       */\n      destroy: function destroy(completely) {\n        if (completely) {\n          removeEventListener(\"resize\", throttledCheck);\n        }\n      },\n    };\n    /**\n     * Check the breakpoint.\n     */\n\n    function check() {\n      var point = getPoint();\n\n      if (point !== prevPoint) {\n        prevPoint = point;\n        var State = Splide.State;\n        var options = breakpoints[point] || initialOptions;\n        var destroy = options.destroy;\n\n        if (destroy) {\n          Splide.options = initialOptions;\n          Splide.destroy(destroy === \"completely\");\n        } else {\n          if (State.is(DESTROYED)) {\n            Splide.mount();\n          }\n\n          Splide.options = options;\n        }\n      }\n    }\n    /**\n     * Return the breakpoint matching current window width.\n     * Note that Array.prototype.find is not supported by IE.\n     *\n     * @return {number|string} - A breakpoint as number or string. -1 if no point matches.\n     */\n\n    function getPoint() {\n      var item = map.filter(function (item) {\n        return item.mql.matches;\n      })[0];\n      return item ? item.point : -1;\n    }\n\n    return Breakpoints;\n  }; // CONCATENATED MODULE: ./src/js/components/index.js\n  /**\n   * Export components.\n   *\n   * @author    Naotoshi Fujita\n   * @copyright Naotoshi Fujita. All rights reserved.\n   */\n\n  var COMPLETE = {\n    Options: options,\n    Breakpoints: breakpoints,\n    Controller: controller,\n    Elements: components_elements,\n    Track: track,\n    Clones: clones,\n    Layout: layout,\n    Drag: drag,\n    Click: click,\n    Autoplay: autoplay,\n    Cover: cover,\n    Arrows: arrows,\n    Pagination: pagination,\n    LazyLoad: lazyload,\n    Keyboard: keyboard,\n    Sync: sync,\n    A11y: a11y,\n  };\n  var LIGHT = {\n    Options: options,\n    Controller: controller,\n    Elements: components_elements,\n    Track: track,\n    Clones: clones,\n    Layout: layout,\n    Drag: drag,\n    Click: click,\n    Arrows: arrows,\n    Pagination: pagination,\n    A11y: a11y,\n  }; // CONCATENATED MODULE: ./build/complete/complete.js\n  function _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    subClass.__proto__ = superClass;\n  }\n\n  /**\n   * Export \"Splide\" class for frontend with full components.\n   *\n   * @author    Naotoshi Fujita\n   * @copyright Naotoshi Fujita. All rights reserved.\n   */\n\n  /**\n   * Export Splide with all components.\n   */\n\n  var complete_Splide = /*#__PURE__*/ (function (_Core) {\n    _inheritsLoose(Splide, _Core);\n\n    function Splide(root, options) {\n      return _Core.call(this, root, options, COMPLETE) || this;\n    }\n\n    return Splide;\n  })(Splide); // Register the class as a global variable for non-ES6 environment.\n\n  window.Splide = complete_Splide;\n  /******/\n})();\n","import \"./splide\";\n\nlet slider;\n\nfunction mountSlider() {\n  const sliderElm = document.querySelector(\".question-slider\");\n\n  slider = new Splide(sliderElm, {\n    gap: 12,\n    arrows: false,\n    pagination: false,\n    i18n: {\n      prev: \"前一張\",\n      next: \"下一張\",\n    },\n  }).mount();\n\n  // focus control: only allow focus of active slide\n  const focusableItems = sliderElm.querySelectorAll(\"button, a\");\n\n  slider.on(\"active\", (data) => {\n    const activeSlide = data.slide;\n\n    focusableItems.forEach((item) => {\n      item.setAttribute(\"tabindex\", \"-1\");\n    });\n    activeSlide.querySelectorAll(\"button, a\").forEach((item) => {\n      item.setAttribute(\"tabindex\", \"0\");\n    });\n  });\n\n  // when changing to new slide, set focus to the new slide\n  slider.on(\"moved\", (newIndex) => {\n    const slide = slider.Components.Elements.slides[newIndex];\n\n    // at this point slide still has tabindex=-1 (due to Splide implementation)\n    // so we explicitly set here so that we can focus()\n    slide.setAttribute(\"tabindex\", \"-1\");\n    slide.focus();\n  });\n}\n\nfunction forwardSlider() {\n  slider.go(slider.index + 1);\n}\n\nfunction toArray(nodelist) {\n  const res = [];\n  for (let node of nodelist) {\n    res.push(node);\n  }\n\n  return res;\n}\n\nfunction mountQuestionBox() {\n  function mount(box) {\n    const answer = box.getAttribute(\"data-answer\");\n\n    const handleAnswerSelect = (event) => {\n      const correctOption = box.querySelector(`button[data-value=${answer}]`);\n      correctOption.classList.add(\"button-green\");\n\n      const selectedAnswer = event.target.getAttribute(\"data-value\");\n\n      if (selectedAnswer !== answer) {\n        event.target.classList.add(\"button-red\");\n      }\n\n      setTimeout(() => {\n        forwardSlider();\n      }, 1000);\n    };\n\n    const buttons = toArray(box.querySelectorAll(\".option-list-item\"));\n    buttons.forEach((elm) => elm.addEventListener(\"click\", handleAnswerSelect));\n  }\n\n  document.querySelectorAll(\".question-box\").forEach((elm) => mount(elm));\n}\n\nfunction mountAnswerBox() {\n  document.querySelectorAll(\".answer-detail button\").forEach((elm) =>\n    elm.addEventListener(\"click\", () => {\n      forwardSlider();\n    })\n  );\n}\n\nfunction mountSmoothAnchorScroll() {\n  document.querySelectorAll('a[href^=\"#\"]').forEach((anchor) => {\n    anchor.addEventListener(\"click\", function (e) {\n      e.preventDefault();\n\n      document.querySelector(this.getAttribute(\"href\")).scrollIntoView({\n        behavior: \"smooth\",\n      });\n    });\n  });\n}\n\nexport function mountSectionQuestion() {\n  mountSlider();\n  mountQuestionBox();\n  mountAnswerBox();\n  mountSmoothAnchorScroll();\n}\n","import \"./splide\";\n\nexport function mountSectionReason() {\n  let splide = new Splide(document.querySelector(\".section-reasons--slider\"), {\n    gap: 12,\n    arrows: true,\n    i18n: {\n      prev: \"前一張\",\n      next: \"下一張\",\n    },\n  }).mount();\n\n  let heroContainer = document.querySelector(\".section-reasons--hero\");\n\n  splide.on(\"active\", (data) => {\n    //data.slide.setAttribute(\"tabindex\", \"-1\");\n    //data.slide.focus();\n\n    const { index } = splide;\n    heroContainer.setAttribute(\"data-hero-display\", index);\n  });\n\n  // when changing to new slide, set focus to the new slide\n  splide.on(\"moved\", (newIndex) => {\n    const slide = splide.Components.Elements.slides[newIndex];\n\n    // at this point slide still has tabindex=-1 (due to Splide implementation)\n    // so we explicitly set here so that we can focus()\n    slide.setAttribute(\"tabindex\", \"-1\");\n    slide.focus();\n  });\n}\n","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar MicroModal = function () {\n\n  var FOCUSABLE_ELEMENTS = ['a[href]', 'area[href]', 'input:not([disabled]):not([type=\"hidden\"]):not([aria-hidden])', 'select:not([disabled]):not([aria-hidden])', 'textarea:not([disabled]):not([aria-hidden])', 'button:not([disabled]):not([aria-hidden])', 'iframe', 'object', 'embed', '[contenteditable]', '[tabindex]:not([tabindex^=\"-\"])'];\n\n  var Modal = /*#__PURE__*/function () {\n    function Modal(_ref) {\n      var targetModal = _ref.targetModal,\n          _ref$triggers = _ref.triggers,\n          triggers = _ref$triggers === void 0 ? [] : _ref$triggers,\n          _ref$onShow = _ref.onShow,\n          onShow = _ref$onShow === void 0 ? function () {} : _ref$onShow,\n          _ref$onClose = _ref.onClose,\n          onClose = _ref$onClose === void 0 ? function () {} : _ref$onClose,\n          _ref$openTrigger = _ref.openTrigger,\n          openTrigger = _ref$openTrigger === void 0 ? 'data-micromodal-trigger' : _ref$openTrigger,\n          _ref$closeTrigger = _ref.closeTrigger,\n          closeTrigger = _ref$closeTrigger === void 0 ? 'data-micromodal-close' : _ref$closeTrigger,\n          _ref$openClass = _ref.openClass,\n          openClass = _ref$openClass === void 0 ? 'is-open' : _ref$openClass,\n          _ref$disableScroll = _ref.disableScroll,\n          disableScroll = _ref$disableScroll === void 0 ? false : _ref$disableScroll,\n          _ref$disableFocus = _ref.disableFocus,\n          disableFocus = _ref$disableFocus === void 0 ? false : _ref$disableFocus,\n          _ref$awaitCloseAnimat = _ref.awaitCloseAnimation,\n          awaitCloseAnimation = _ref$awaitCloseAnimat === void 0 ? false : _ref$awaitCloseAnimat,\n          _ref$awaitOpenAnimati = _ref.awaitOpenAnimation,\n          awaitOpenAnimation = _ref$awaitOpenAnimati === void 0 ? false : _ref$awaitOpenAnimati,\n          _ref$debugMode = _ref.debugMode,\n          debugMode = _ref$debugMode === void 0 ? false : _ref$debugMode;\n\n      _classCallCheck(this, Modal);\n\n      // Save a reference of the modal\n      this.modal = document.getElementById(targetModal); // Save a reference to the passed config\n\n      this.config = {\n        debugMode: debugMode,\n        disableScroll: disableScroll,\n        openTrigger: openTrigger,\n        closeTrigger: closeTrigger,\n        openClass: openClass,\n        onShow: onShow,\n        onClose: onClose,\n        awaitCloseAnimation: awaitCloseAnimation,\n        awaitOpenAnimation: awaitOpenAnimation,\n        disableFocus: disableFocus\n      }; // Register click events only if pre binding eventListeners\n\n      if (triggers.length > 0) this.registerTriggers.apply(this, _toConsumableArray(triggers)); // pre bind functions for event listeners\n\n      this.onClick = this.onClick.bind(this);\n      this.onKeydown = this.onKeydown.bind(this);\n    }\n    /**\n     * Loops through all openTriggers and binds click event\n     * @param  {array} triggers [Array of node elements]\n     * @return {void}\n     */\n\n\n    _createClass(Modal, [{\n      key: \"registerTriggers\",\n      value: function registerTriggers() {\n        var _this = this;\n\n        for (var _len = arguments.length, triggers = new Array(_len), _key = 0; _key < _len; _key++) {\n          triggers[_key] = arguments[_key];\n        }\n\n        triggers.filter(Boolean).forEach(function (trigger) {\n          trigger.addEventListener('click', function (event) {\n            return _this.showModal(event);\n          });\n        });\n      }\n    }, {\n      key: \"showModal\",\n      value: function showModal() {\n        var _this2 = this;\n\n        var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n        this.activeElement = document.activeElement;\n        this.modal.setAttribute('aria-hidden', 'false');\n        this.modal.classList.add(this.config.openClass);\n        this.scrollBehaviour('disable');\n        this.addEventListeners();\n\n        if (this.config.awaitOpenAnimation) {\n          var handler = function handler() {\n            _this2.modal.removeEventListener('animationend', handler, false);\n\n            _this2.setFocusToFirstNode();\n          };\n\n          this.modal.addEventListener('animationend', handler, false);\n        } else {\n          this.setFocusToFirstNode();\n        }\n\n        this.config.onShow(this.modal, this.activeElement, event);\n      }\n    }, {\n      key: \"closeModal\",\n      value: function closeModal() {\n        var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n        var modal = this.modal;\n        this.modal.setAttribute('aria-hidden', 'true');\n        this.removeEventListeners();\n        this.scrollBehaviour('enable');\n\n        if (this.activeElement && this.activeElement.focus) {\n          this.activeElement.focus();\n        }\n\n        this.config.onClose(this.modal, this.activeElement, event);\n\n        if (this.config.awaitCloseAnimation) {\n          var openClass = this.config.openClass; // <- old school ftw\n\n          this.modal.addEventListener('animationend', function handler() {\n            modal.classList.remove(openClass);\n            modal.removeEventListener('animationend', handler, false);\n          }, false);\n        } else {\n          modal.classList.remove(this.config.openClass);\n        }\n      }\n    }, {\n      key: \"closeModalById\",\n      value: function closeModalById(targetModal) {\n        this.modal = document.getElementById(targetModal);\n        if (this.modal) this.closeModal();\n      }\n    }, {\n      key: \"scrollBehaviour\",\n      value: function scrollBehaviour(toggle) {\n        if (!this.config.disableScroll) return;\n        var body = document.querySelector('body');\n\n        switch (toggle) {\n          case 'enable':\n            Object.assign(body.style, {\n              overflow: ''\n            });\n            break;\n\n          case 'disable':\n            Object.assign(body.style, {\n              overflow: 'hidden'\n            });\n            break;\n        }\n      }\n    }, {\n      key: \"addEventListeners\",\n      value: function addEventListeners() {\n        this.modal.addEventListener('touchstart', this.onClick);\n        this.modal.addEventListener('click', this.onClick);\n        document.addEventListener('keydown', this.onKeydown);\n      }\n    }, {\n      key: \"removeEventListeners\",\n      value: function removeEventListeners() {\n        this.modal.removeEventListener('touchstart', this.onClick);\n        this.modal.removeEventListener('click', this.onClick);\n        document.removeEventListener('keydown', this.onKeydown);\n      }\n    }, {\n      key: \"onClick\",\n      value: function onClick(event) {\n        if (event.target.hasAttribute(this.config.closeTrigger)) {\n          this.closeModal(event);\n        }\n      }\n    }, {\n      key: \"onKeydown\",\n      value: function onKeydown(event) {\n        if (event.keyCode === 27) this.closeModal(event); // esc\n\n        if (event.keyCode === 9) this.retainFocus(event); // tab\n      }\n    }, {\n      key: \"getFocusableNodes\",\n      value: function getFocusableNodes() {\n        var nodes = this.modal.querySelectorAll(FOCUSABLE_ELEMENTS);\n        return Array.apply(void 0, _toConsumableArray(nodes));\n      }\n      /**\n       * Tries to set focus on a node which is not a close trigger\n       * if no other nodes exist then focuses on first close trigger\n       */\n\n    }, {\n      key: \"setFocusToFirstNode\",\n      value: function setFocusToFirstNode() {\n        var _this3 = this;\n\n        if (this.config.disableFocus) return;\n        var focusableNodes = this.getFocusableNodes(); // no focusable nodes\n\n        if (focusableNodes.length === 0) return; // remove nodes on whose click, the modal closes\n        // could not think of a better name :(\n\n        var nodesWhichAreNotCloseTargets = focusableNodes.filter(function (node) {\n          return !node.hasAttribute(_this3.config.closeTrigger);\n        });\n        if (nodesWhichAreNotCloseTargets.length > 0) nodesWhichAreNotCloseTargets[0].focus();\n        if (nodesWhichAreNotCloseTargets.length === 0) focusableNodes[0].focus();\n      }\n    }, {\n      key: \"retainFocus\",\n      value: function retainFocus(event) {\n        var focusableNodes = this.getFocusableNodes(); // no focusable nodes\n\n        if (focusableNodes.length === 0) return;\n        /**\n         * Filters nodes which are hidden to prevent\n         * focus leak outside modal\n         */\n\n        focusableNodes = focusableNodes.filter(function (node) {\n          return node.offsetParent !== null;\n        }); // if disableFocus is true\n\n        if (!this.modal.contains(document.activeElement)) {\n          focusableNodes[0].focus();\n        } else {\n          var focusedItemIndex = focusableNodes.indexOf(document.activeElement);\n\n          if (event.shiftKey && focusedItemIndex === 0) {\n            focusableNodes[focusableNodes.length - 1].focus();\n            event.preventDefault();\n          }\n\n          if (!event.shiftKey && focusableNodes.length > 0 && focusedItemIndex === focusableNodes.length - 1) {\n            focusableNodes[0].focus();\n            event.preventDefault();\n          }\n        }\n      }\n    }]);\n\n    return Modal;\n  }();\n  /**\n   * Modal prototype ends.\n   * Here on code is responsible for detecting and\n   * auto binding event handlers on modal triggers\n   */\n  // Keep a reference to the opened modal\n\n\n  var activeModal = null;\n  /**\n   * Generates an associative array of modals and it's\n   * respective triggers\n   * @param  {array} triggers     An array of all triggers\n   * @param  {string} triggerAttr The data-attribute which triggers the module\n   * @return {array}\n   */\n\n  var generateTriggerMap = function generateTriggerMap(triggers, triggerAttr) {\n    var triggerMap = [];\n    triggers.forEach(function (trigger) {\n      var targetModal = trigger.attributes[triggerAttr].value;\n      if (triggerMap[targetModal] === undefined) triggerMap[targetModal] = [];\n      triggerMap[targetModal].push(trigger);\n    });\n    return triggerMap;\n  };\n  /**\n   * Validates whether a modal of the given id exists\n   * in the DOM\n   * @param  {number} id  The id of the modal\n   * @return {boolean}\n   */\n\n\n  var validateModalPresence = function validateModalPresence(id) {\n    if (!document.getElementById(id)) {\n      console.warn(\"MicroModal: \\u2757Seems like you have missed %c'\".concat(id, \"'\"), 'background-color: #f8f9fa;color: #50596c;font-weight: bold;', 'ID somewhere in your code. Refer example below to resolve it.');\n      console.warn(\"%cExample:\", 'background-color: #f8f9fa;color: #50596c;font-weight: bold;', \"<div class=\\\"modal\\\" id=\\\"\".concat(id, \"\\\"></div>\"));\n      return false;\n    }\n  };\n  /**\n   * Validates if there are modal triggers present\n   * in the DOM\n   * @param  {array} triggers An array of data-triggers\n   * @return {boolean}\n   */\n\n\n  var validateTriggerPresence = function validateTriggerPresence(triggers) {\n    if (triggers.length <= 0) {\n      console.warn(\"MicroModal: \\u2757Please specify at least one %c'micromodal-trigger'\", 'background-color: #f8f9fa;color: #50596c;font-weight: bold;', 'data attribute.');\n      console.warn(\"%cExample:\", 'background-color: #f8f9fa;color: #50596c;font-weight: bold;', \"<a href=\\\"#\\\" data-micromodal-trigger=\\\"my-modal\\\"></a>\");\n      return false;\n    }\n  };\n  /**\n   * Checks if triggers and their corresponding modals\n   * are present in the DOM\n   * @param  {array} triggers   Array of DOM nodes which have data-triggers\n   * @param  {array} triggerMap Associative array of modals and their triggers\n   * @return {boolean}\n   */\n\n\n  var validateArgs = function validateArgs(triggers, triggerMap) {\n    validateTriggerPresence(triggers);\n    if (!triggerMap) return true;\n\n    for (var id in triggerMap) {\n      validateModalPresence(id);\n    }\n\n    return true;\n  };\n  /**\n   * Binds click handlers to all modal triggers\n   * @param  {object} config [description]\n   * @return void\n   */\n\n\n  var init = function init(config) {\n    // Create an config object with default openTrigger\n    var options = Object.assign({}, {\n      openTrigger: 'data-micromodal-trigger'\n    }, config); // Collects all the nodes with the trigger\n\n    var triggers = _toConsumableArray(document.querySelectorAll(\"[\".concat(options.openTrigger, \"]\"))); // Makes a mappings of modals with their trigger nodes\n\n\n    var triggerMap = generateTriggerMap(triggers, options.openTrigger); // Checks if modals and triggers exist in dom\n\n    if (options.debugMode === true && validateArgs(triggers, triggerMap) === false) return; // For every target modal creates a new instance\n\n    for (var key in triggerMap) {\n      var value = triggerMap[key];\n      options.targetModal = key;\n      options.triggers = _toConsumableArray(value);\n      activeModal = new Modal(options); // eslint-disable-line no-new\n    }\n  };\n  /**\n   * Shows a particular modal\n   * @param  {string} targetModal [The id of the modal to display]\n   * @param  {object} config [The configuration object to pass]\n   * @return {void}\n   */\n\n\n  var show = function show(targetModal, config) {\n    var options = config || {};\n    options.targetModal = targetModal; // Checks if modals and triggers exist in dom\n\n    if (options.debugMode === true && validateModalPresence(targetModal) === false) return; // clear events in case previous modal wasn't close\n\n    if (activeModal) activeModal.removeEventListeners(); // stores reference to active modal\n\n    activeModal = new Modal(options); // eslint-disable-line no-new\n\n    activeModal.showModal();\n  };\n  /**\n   * Closes the active modal\n   * @param  {string} targetModal [The id of the modal to close]\n   * @return {void}\n   */\n\n\n  var close = function close(targetModal) {\n    targetModal ? activeModal.closeModalById(targetModal) : activeModal.closeModal();\n  };\n\n  return {\n    init: init,\n    show: show,\n    close: close\n  };\n}();\nwindow.MicroModal = MicroModal;\n\nexport default MicroModal;\n","// Public: Create a new SelectorSet.\nexport default function SelectorSet() {\n  // Construct new SelectorSet if called as a function.\n  if (!(this instanceof SelectorSet)) {\n    return new SelectorSet();\n  }\n\n  // Public: Number of selectors added to the set\n  this.size = 0;\n\n  // Internal: Incrementing ID counter\n  this.uid = 0;\n\n  // Internal: Array of String selectors in the set\n  this.selectors = [];\n\n  // Internal: Map of selector ids to objects\n  this.selectorObjects = {};\n\n  // Internal: All Object index String names mapping to Index objects.\n  this.indexes = Object.create(this.indexes);\n\n  // Internal: Used Object index String names mapping to Index objects.\n  this.activeIndexes = [];\n}\n\n// Detect prefixed Element#matches function.\nvar docElem = window.document.documentElement;\nvar matches =\n  docElem.matches ||\n  docElem.webkitMatchesSelector ||\n  docElem.mozMatchesSelector ||\n  docElem.oMatchesSelector ||\n  docElem.msMatchesSelector;\n\n// Public: Check if element matches selector.\n//\n// Maybe overridden with custom Element.matches function.\n//\n// el       - An Element\n// selector - String CSS selector\n//\n// Returns true or false.\nSelectorSet.prototype.matchesSelector = function(el, selector) {\n  return matches.call(el, selector);\n};\n\n// Public: Find all elements in the context that match the selector.\n//\n// Maybe overridden with custom querySelectorAll function.\n//\n// selectors - String CSS selectors.\n// context   - Element context\n//\n// Returns non-live list of Elements.\nSelectorSet.prototype.querySelectorAll = function(selectors, context) {\n  return context.querySelectorAll(selectors);\n};\n\n// Public: Array of indexes.\n//\n// name     - Unique String name\n// selector - Function that takes a String selector and returns a String key\n//            or undefined if it can't be used by the index.\n// element  - Function that takes an Element and returns an Array of String\n//            keys that point to indexed values.\n//\nSelectorSet.prototype.indexes = [];\n\n// Index by element id\nvar idRe = /^#((?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)+)/g;\nSelectorSet.prototype.indexes.push({\n  name: 'ID',\n  selector: function matchIdSelector(sel) {\n    var m;\n    if ((m = sel.match(idRe))) {\n      return m[0].slice(1);\n    }\n  },\n  element: function getElementId(el) {\n    if (el.id) {\n      return [el.id];\n    }\n  }\n});\n\n// Index by all of its class names\nvar classRe = /^\\.((?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)+)/g;\nSelectorSet.prototype.indexes.push({\n  name: 'CLASS',\n  selector: function matchClassSelector(sel) {\n    var m;\n    if ((m = sel.match(classRe))) {\n      return m[0].slice(1);\n    }\n  },\n  element: function getElementClassNames(el) {\n    var className = el.className;\n    if (className) {\n      if (typeof className === 'string') {\n        return className.split(/\\s/);\n      } else if (typeof className === 'object' && 'baseVal' in className) {\n        // className is a SVGAnimatedString\n        // global SVGAnimatedString is not an exposed global in Opera 12\n        return className.baseVal.split(/\\s/);\n      }\n    }\n  }\n});\n\n// Index by tag/node name: `DIV`, `FORM`, `A`\nvar tagRe = /^((?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)+)/g;\nSelectorSet.prototype.indexes.push({\n  name: 'TAG',\n  selector: function matchTagSelector(sel) {\n    var m;\n    if ((m = sel.match(tagRe))) {\n      return m[0].toUpperCase();\n    }\n  },\n  element: function getElementTagName(el) {\n    return [el.nodeName.toUpperCase()];\n  }\n});\n\n// Default index just contains a single array of elements.\nSelectorSet.prototype.indexes['default'] = {\n  name: 'UNIVERSAL',\n  selector: function() {\n    return true;\n  },\n  element: function() {\n    return [true];\n  }\n};\n\n// Use ES Maps when supported\nvar Map;\nif (typeof window.Map === 'function') {\n  Map = window.Map;\n} else {\n  Map = (function() {\n    function Map() {\n      this.map = {};\n    }\n    Map.prototype.get = function(key) {\n      return this.map[key + ' '];\n    };\n    Map.prototype.set = function(key, value) {\n      this.map[key + ' '] = value;\n    };\n    return Map;\n  })();\n}\n\n// Regexps adopted from Sizzle\n//   https://github.com/jquery/sizzle/blob/1.7/sizzle.js\n//\nvar chunker = /((?:\\((?:\\([^()]+\\)|[^()]+)+\\)|\\[(?:\\[[^\\[\\]]*\\]|['\"][^'\"]*['\"]|[^\\[\\]'\"]+)+\\]|\\\\.|[^ >+~,(\\[\\\\]+)+|[>+~])(\\s*,\\s*)?((?:.|\\r|\\n)*)/g;\n\n// Internal: Get indexes for selector.\n//\n// selector - String CSS selector\n//\n// Returns Array of {index, key}.\nfunction parseSelectorIndexes(allIndexes, selector) {\n  allIndexes = allIndexes.slice(0).concat(allIndexes['default']);\n\n  var allIndexesLen = allIndexes.length,\n    i,\n    j,\n    m,\n    dup,\n    rest = selector,\n    key,\n    index,\n    indexes = [];\n\n  do {\n    chunker.exec('');\n    if ((m = chunker.exec(rest))) {\n      rest = m[3];\n      if (m[2] || !rest) {\n        for (i = 0; i < allIndexesLen; i++) {\n          index = allIndexes[i];\n          if ((key = index.selector(m[1]))) {\n            j = indexes.length;\n            dup = false;\n            while (j--) {\n              if (indexes[j].index === index && indexes[j].key === key) {\n                dup = true;\n                break;\n              }\n            }\n            if (!dup) {\n              indexes.push({ index: index, key: key });\n            }\n            break;\n          }\n        }\n      }\n    }\n  } while (m);\n\n  return indexes;\n}\n\n// Internal: Find first item in Array that is a prototype of `proto`.\n//\n// ary   - Array of objects\n// proto - Prototype of expected item in `ary`\n//\n// Returns object from `ary` if found. Otherwise returns undefined.\nfunction findByPrototype(ary, proto) {\n  var i, len, item;\n  for (i = 0, len = ary.length; i < len; i++) {\n    item = ary[i];\n    if (proto.isPrototypeOf(item)) {\n      return item;\n    }\n  }\n}\n\n// Public: Log when added selector falls under the default index.\n//\n// This API should not be considered stable. May change between\n// minor versions.\n//\n// obj - {selector, data} Object\n//\n//   SelectorSet.prototype.logDefaultIndexUsed = function(obj) {\n//     console.warn(obj.selector, \"could not be indexed\");\n//   };\n//\n// Returns nothing.\nSelectorSet.prototype.logDefaultIndexUsed = function() {};\n\n// Public: Add selector to set.\n//\n// selector - String CSS selector\n// data     - Optional data Object (default: undefined)\n//\n// Returns nothing.\nSelectorSet.prototype.add = function(selector, data) {\n  var obj,\n    i,\n    indexProto,\n    key,\n    index,\n    objs,\n    selectorIndexes,\n    selectorIndex,\n    indexes = this.activeIndexes,\n    selectors = this.selectors,\n    selectorObjects = this.selectorObjects;\n\n  if (typeof selector !== 'string') {\n    return;\n  }\n\n  obj = {\n    id: this.uid++,\n    selector: selector,\n    data: data\n  };\n  selectorObjects[obj.id] = obj;\n\n  selectorIndexes = parseSelectorIndexes(this.indexes, selector);\n  for (i = 0; i < selectorIndexes.length; i++) {\n    selectorIndex = selectorIndexes[i];\n    key = selectorIndex.key;\n    indexProto = selectorIndex.index;\n\n    index = findByPrototype(indexes, indexProto);\n    if (!index) {\n      index = Object.create(indexProto);\n      index.map = new Map();\n      indexes.push(index);\n    }\n\n    if (indexProto === this.indexes['default']) {\n      this.logDefaultIndexUsed(obj);\n    }\n    objs = index.map.get(key);\n    if (!objs) {\n      objs = [];\n      index.map.set(key, objs);\n    }\n    objs.push(obj);\n  }\n\n  this.size++;\n  selectors.push(selector);\n};\n\n// Public: Remove selector from set.\n//\n// selector - String CSS selector\n// data     - Optional data Object (default: undefined)\n//\n// Returns nothing.\nSelectorSet.prototype.remove = function(selector, data) {\n  if (typeof selector !== 'string') {\n    return;\n  }\n\n  var selectorIndexes,\n    selectorIndex,\n    i,\n    j,\n    k,\n    selIndex,\n    objs,\n    obj,\n    indexes = this.activeIndexes,\n    selectors = (this.selectors = []),\n    selectorObjects = this.selectorObjects,\n    removedIds = {},\n    removeAll = arguments.length === 1;\n\n  selectorIndexes = parseSelectorIndexes(this.indexes, selector);\n  for (i = 0; i < selectorIndexes.length; i++) {\n    selectorIndex = selectorIndexes[i];\n\n    j = indexes.length;\n    while (j--) {\n      selIndex = indexes[j];\n      if (selectorIndex.index.isPrototypeOf(selIndex)) {\n        objs = selIndex.map.get(selectorIndex.key);\n        if (objs) {\n          k = objs.length;\n          while (k--) {\n            obj = objs[k];\n            if (obj.selector === selector && (removeAll || obj.data === data)) {\n              objs.splice(k, 1);\n              removedIds[obj.id] = true;\n            }\n          }\n        }\n        break;\n      }\n    }\n  }\n\n  for (i in removedIds) {\n    delete selectorObjects[i];\n    this.size--;\n  }\n\n  for (i in selectorObjects) {\n    selectors.push(selectorObjects[i].selector);\n  }\n};\n\n// Sort by id property handler.\n//\n// a - Selector obj.\n// b - Selector obj.\n//\n// Returns Number.\nfunction sortById(a, b) {\n  return a.id - b.id;\n}\n\n// Public: Find all matching decendants of the context element.\n//\n// context - An Element\n//\n// Returns Array of {selector, data, elements} matches.\nSelectorSet.prototype.queryAll = function(context) {\n  if (!this.selectors.length) {\n    return [];\n  }\n\n  var matches = {},\n    results = [];\n  var els = this.querySelectorAll(this.selectors.join(', '), context);\n\n  var i, j, len, len2, el, m, match, obj;\n  for (i = 0, len = els.length; i < len; i++) {\n    el = els[i];\n    m = this.matches(el);\n    for (j = 0, len2 = m.length; j < len2; j++) {\n      obj = m[j];\n      if (!matches[obj.id]) {\n        match = {\n          id: obj.id,\n          selector: obj.selector,\n          data: obj.data,\n          elements: []\n        };\n        matches[obj.id] = match;\n        results.push(match);\n      } else {\n        match = matches[obj.id];\n      }\n      match.elements.push(el);\n    }\n  }\n\n  return results.sort(sortById);\n};\n\n// Public: Match element against all selectors in set.\n//\n// el - An Element\n//\n// Returns Array of {selector, data} matches.\nSelectorSet.prototype.matches = function(el) {\n  if (!el) {\n    return [];\n  }\n\n  var i, j, k, len, len2, len3, index, keys, objs, obj, id;\n  var indexes = this.activeIndexes,\n    matchedIds = {},\n    matches = [];\n\n  for (i = 0, len = indexes.length; i < len; i++) {\n    index = indexes[i];\n    keys = index.element(el);\n    if (keys) {\n      for (j = 0, len2 = keys.length; j < len2; j++) {\n        if ((objs = index.map.get(keys[j]))) {\n          for (k = 0, len3 = objs.length; k < len3; k++) {\n            obj = objs[k];\n            id = obj.id;\n            if (!matchedIds[id] && this.matchesSelector(el, obj.selector)) {\n              matchedIds[id] = true;\n              matches.push(obj);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  return matches.sort(sortById);\n};\n","import SelectorSet from 'selector-set';\n\nvar bubbleEvents = {};\nvar captureEvents = {};\nvar propagationStopped = new WeakMap();\nvar immediatePropagationStopped = new WeakMap();\nvar currentTargets = new WeakMap();\nvar currentTargetDesc = Object.getOwnPropertyDescriptor(Event.prototype, 'currentTarget');\n\nfunction before(subject, verb, fn) {\n  var source = subject[verb];\n\n  subject[verb] = function () {\n    fn.apply(subject, arguments);\n    return source.apply(subject, arguments);\n  };\n\n  return subject;\n}\n\nfunction matches(selectors, target, reverse) {\n  var queue = [];\n  var node = target;\n\n  do {\n    if (node.nodeType !== 1) break;\n\n    var _matches = selectors.matches(node);\n\n    if (_matches.length) {\n      var matched = {\n        node: node,\n        observers: _matches\n      };\n\n      if (reverse) {\n        queue.unshift(matched);\n      } else {\n        queue.push(matched);\n      }\n    }\n  } while (node = node.parentElement);\n\n  return queue;\n}\n\nfunction trackPropagation() {\n  propagationStopped.set(this, true);\n}\n\nfunction trackImmediate() {\n  propagationStopped.set(this, true);\n  immediatePropagationStopped.set(this, true);\n}\n\nfunction getCurrentTarget() {\n  return currentTargets.get(this) || null;\n}\n\nfunction defineCurrentTarget(event, getter) {\n  if (!currentTargetDesc) return;\n  Object.defineProperty(event, 'currentTarget', {\n    configurable: true,\n    enumerable: true,\n    get: getter || currentTargetDesc.get\n  });\n}\n\nfunction canDispatch(event) {\n  try {\n    event.eventPhase;\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n\nfunction dispatch(event) {\n  if (!canDispatch(event)) return;\n  var events = event.eventPhase === 1 ? captureEvents : bubbleEvents;\n  var selectors = events[event.type];\n  if (!selectors) return;\n  var queue = matches(selectors, event.target, event.eventPhase === 1);\n  if (!queue.length) return;\n  before(event, 'stopPropagation', trackPropagation);\n  before(event, 'stopImmediatePropagation', trackImmediate);\n  defineCurrentTarget(event, getCurrentTarget);\n\n  for (var i = 0, len1 = queue.length; i < len1; i++) {\n    if (propagationStopped.get(event)) break;\n    var matched = queue[i];\n    currentTargets.set(event, matched.node);\n\n    for (var j = 0, len2 = matched.observers.length; j < len2; j++) {\n      if (immediatePropagationStopped.get(event)) break;\n      matched.observers[j].data.call(matched.node, event);\n    }\n  }\n\n  currentTargets[\"delete\"](event);\n  defineCurrentTarget(event);\n}\n\nfunction on(name, selector, fn) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var capture = options.capture ? true : false;\n  var events = capture ? captureEvents : bubbleEvents;\n  var selectors = events[name];\n\n  if (!selectors) {\n    selectors = new SelectorSet();\n    events[name] = selectors;\n    document.addEventListener(name, dispatch, capture);\n  }\n\n  selectors.add(selector, fn);\n}\nfunction off(name, selector, fn) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var capture = options.capture ? true : false;\n  var events = capture ? captureEvents : bubbleEvents;\n  var selectors = events[name];\n  if (!selectors) return;\n  selectors.remove(selector, fn);\n  if (selectors.size) return;\n  delete events[name];\n  document.removeEventListener(name, dispatch, capture);\n}\nfunction fire(target, name, detail) {\n  return target.dispatchEvent(new CustomEvent(name, {\n    bubbles: true,\n    cancelable: true,\n    detail: detail\n  }));\n}\n\nexport { fire, off, on };\n","import MicroModal from \"micromodal\";\nimport { on } from \"delegated-events\";\n\nexport function mountSectionKnowledge() {\n  document.addEventListener(\"DOMContentLoaded\", function () {\n    ModalManager.init();\n  });\n}\n\nconst modalOption = {\n  disableScroll: true,\n  disableFocus: false,\n  openTrigger: \"none\",\n  closeTrigger: \"none\",\n};\n\nconst ModalManager = {\n  modalId: null,\n\n  init() {\n    on(\"click\", \"[data-micromodal-trigger]\", (event) => {\n      const modalId = event.target.getAttribute(\"data-micromodal-trigger\");\n      const skipAnimation = event.target.hasAttribute(\n        \"data-micromodal-skip-animation\"\n      );\n\n      this.show(modalId, { skipAnimation });\n    });\n\n    on(\"click\", \"[data-micromodal-close]\", () => {\n      this.close();\n    });\n\n    document.addEventListener(\"keydown\", (event) => {\n      if (!this.modalId) {\n        return;\n      }\n      if (event.key === \"ArrowRight\") {\n        this.show(delta(this.modalId, 1), { skipAnimation: true });\n      }\n      if (event.key === \"ArrowLeft\") {\n        this.show(delta(this.modalId, -1), { skipAnimation: true });\n      }\n    });\n  },\n  show(id, { skipAnimation } = {}) {\n    if (skipAnimation) {\n      document.documentElement.classList.add(\"micromodal-skip-animation\");\n    } else {\n      document.documentElement.classList.remove(\"micromodal-skip-animation\");\n    }\n\n    if (this.modalId) {\n      MicroModal.close(this.modalId);\n    }\n\n    MicroModal.show(id, modalOption);\n\n    // when an modal has been opened and scrolled, we want to reset\n    // the scroll position when it is re-opened\n    const modal = document.querySelector(`#${id}`);\n    modal.scrollTo(0, 0);\n\n    this.modalId = id;\n  },\n  close() {\n    if (this.modalId) {\n      MicroModal.close(this.modalId);\n    }\n    this.modalId = null;\n  },\n};\n\nfunction delta(id, delta) {\n  const num = parseInt(id.replace(\"article-\", \"\"));\n  return `article-${num + delta}`;\n}\n","import \"@stkao05/layout-grid\";\nimport { mountSectionQuestion } from \"./section-question\";\nimport { mountSectionReason } from \"./section-reason\";\nimport { mountSectionKnowledge } from \"./section-knowledge\";\n\nmountSectionQuestion();\nmountSectionReason();\nmountSectionKnowledge();\n"]}