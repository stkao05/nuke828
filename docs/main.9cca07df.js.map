{"version":3,"sources":["../../node_modules/micromodal/dist/micromodal.es.js","../js/main.js"],"names":["MicroModal","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","Array","isArray","_arrayLikeToArray","iter","Symbol","iterator","from","o","minLen","n","toString","call","slice","constructor","name","test","len","arr2","FOCUSABLE_ELEMENTS","Modal","_ref","targetModal","_ref$triggers","triggers","_ref$onShow","onShow","_ref$onClose","onClose","_ref$openTrigger","openTrigger","_ref$closeTrigger","closeTrigger","_ref$openClass","openClass","_ref$disableScroll","disableScroll","_ref$disableFocus","disableFocus","_ref$awaitCloseAnimat","awaitCloseAnimation","_ref$awaitOpenAnimati","awaitOpenAnimation","_ref$debugMode","debugMode","modal","document","getElementById","config","registerTriggers","apply","onClick","bind","onKeydown","value","_this","_len","arguments","_key","filter","Boolean","forEach","trigger","addEventListener","event","showModal","_this2","undefined","activeElement","setAttribute","classList","add","scrollBehaviour","addEventListeners","handler","removeEventListener","setFocusToFirstNode","removeEventListeners","focus","remove","closeModal","toggle","body","querySelector","assign","style","overflow","hasAttribute","keyCode","retainFocus","nodes","querySelectorAll","_this3","focusableNodes","getFocusableNodes","nodesWhichAreNotCloseTargets","node","offsetParent","contains","focusedItemIndex","indexOf","shiftKey","preventDefault","activeModal","validateModalPresence","id","console","warn","concat","validateArgs","triggerMap","validateTriggerPresence","init","options","triggerAttr","attributes","push","generateTriggerMap","show","close","closeModalById","window","toArray","nodelist","res","questionSlider","Splide","gap","arrows","pagination","mount","QuestionBox","questionBox","answer","getAttribute","handleSelect","parentElement","setTimeout","nextItem","elm","go","index","reasonSlider","heroContainer","on"],"mappings":"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","file":"main.9cca07df.js","sourceRoot":"../src/tmpl","sourcesContent":["function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar MicroModal = function () {\n\n  var FOCUSABLE_ELEMENTS = ['a[href]', 'area[href]', 'input:not([disabled]):not([type=\"hidden\"]):not([aria-hidden])', 'select:not([disabled]):not([aria-hidden])', 'textarea:not([disabled]):not([aria-hidden])', 'button:not([disabled]):not([aria-hidden])', 'iframe', 'object', 'embed', '[contenteditable]', '[tabindex]:not([tabindex^=\"-\"])'];\n\n  var Modal = /*#__PURE__*/function () {\n    function Modal(_ref) {\n      var targetModal = _ref.targetModal,\n          _ref$triggers = _ref.triggers,\n          triggers = _ref$triggers === void 0 ? [] : _ref$triggers,\n          _ref$onShow = _ref.onShow,\n          onShow = _ref$onShow === void 0 ? function () {} : _ref$onShow,\n          _ref$onClose = _ref.onClose,\n          onClose = _ref$onClose === void 0 ? function () {} : _ref$onClose,\n          _ref$openTrigger = _ref.openTrigger,\n          openTrigger = _ref$openTrigger === void 0 ? 'data-micromodal-trigger' : _ref$openTrigger,\n          _ref$closeTrigger = _ref.closeTrigger,\n          closeTrigger = _ref$closeTrigger === void 0 ? 'data-micromodal-close' : _ref$closeTrigger,\n          _ref$openClass = _ref.openClass,\n          openClass = _ref$openClass === void 0 ? 'is-open' : _ref$openClass,\n          _ref$disableScroll = _ref.disableScroll,\n          disableScroll = _ref$disableScroll === void 0 ? false : _ref$disableScroll,\n          _ref$disableFocus = _ref.disableFocus,\n          disableFocus = _ref$disableFocus === void 0 ? false : _ref$disableFocus,\n          _ref$awaitCloseAnimat = _ref.awaitCloseAnimation,\n          awaitCloseAnimation = _ref$awaitCloseAnimat === void 0 ? false : _ref$awaitCloseAnimat,\n          _ref$awaitOpenAnimati = _ref.awaitOpenAnimation,\n          awaitOpenAnimation = _ref$awaitOpenAnimati === void 0 ? false : _ref$awaitOpenAnimati,\n          _ref$debugMode = _ref.debugMode,\n          debugMode = _ref$debugMode === void 0 ? false : _ref$debugMode;\n\n      _classCallCheck(this, Modal);\n\n      // Save a reference of the modal\n      this.modal = document.getElementById(targetModal); // Save a reference to the passed config\n\n      this.config = {\n        debugMode: debugMode,\n        disableScroll: disableScroll,\n        openTrigger: openTrigger,\n        closeTrigger: closeTrigger,\n        openClass: openClass,\n        onShow: onShow,\n        onClose: onClose,\n        awaitCloseAnimation: awaitCloseAnimation,\n        awaitOpenAnimation: awaitOpenAnimation,\n        disableFocus: disableFocus\n      }; // Register click events only if pre binding eventListeners\n\n      if (triggers.length > 0) this.registerTriggers.apply(this, _toConsumableArray(triggers)); // pre bind functions for event listeners\n\n      this.onClick = this.onClick.bind(this);\n      this.onKeydown = this.onKeydown.bind(this);\n    }\n    /**\n     * Loops through all openTriggers and binds click event\n     * @param  {array} triggers [Array of node elements]\n     * @return {void}\n     */\n\n\n    _createClass(Modal, [{\n      key: \"registerTriggers\",\n      value: function registerTriggers() {\n        var _this = this;\n\n        for (var _len = arguments.length, triggers = new Array(_len), _key = 0; _key < _len; _key++) {\n          triggers[_key] = arguments[_key];\n        }\n\n        triggers.filter(Boolean).forEach(function (trigger) {\n          trigger.addEventListener('click', function (event) {\n            return _this.showModal(event);\n          });\n        });\n      }\n    }, {\n      key: \"showModal\",\n      value: function showModal() {\n        var _this2 = this;\n\n        var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n        this.activeElement = document.activeElement;\n        this.modal.setAttribute('aria-hidden', 'false');\n        this.modal.classList.add(this.config.openClass);\n        this.scrollBehaviour('disable');\n        this.addEventListeners();\n\n        if (this.config.awaitOpenAnimation) {\n          var handler = function handler() {\n            _this2.modal.removeEventListener('animationend', handler, false);\n\n            _this2.setFocusToFirstNode();\n          };\n\n          this.modal.addEventListener('animationend', handler, false);\n        } else {\n          this.setFocusToFirstNode();\n        }\n\n        this.config.onShow(this.modal, this.activeElement, event);\n      }\n    }, {\n      key: \"closeModal\",\n      value: function closeModal() {\n        var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n        var modal = this.modal;\n        this.modal.setAttribute('aria-hidden', 'true');\n        this.removeEventListeners();\n        this.scrollBehaviour('enable');\n\n        if (this.activeElement && this.activeElement.focus) {\n          this.activeElement.focus();\n        }\n\n        this.config.onClose(this.modal, this.activeElement, event);\n\n        if (this.config.awaitCloseAnimation) {\n          var openClass = this.config.openClass; // <- old school ftw\n\n          this.modal.addEventListener('animationend', function handler() {\n            modal.classList.remove(openClass);\n            modal.removeEventListener('animationend', handler, false);\n          }, false);\n        } else {\n          modal.classList.remove(this.config.openClass);\n        }\n      }\n    }, {\n      key: \"closeModalById\",\n      value: function closeModalById(targetModal) {\n        this.modal = document.getElementById(targetModal);\n        if (this.modal) this.closeModal();\n      }\n    }, {\n      key: \"scrollBehaviour\",\n      value: function scrollBehaviour(toggle) {\n        if (!this.config.disableScroll) return;\n        var body = document.querySelector('body');\n\n        switch (toggle) {\n          case 'enable':\n            Object.assign(body.style, {\n              overflow: ''\n            });\n            break;\n\n          case 'disable':\n            Object.assign(body.style, {\n              overflow: 'hidden'\n            });\n            break;\n        }\n      }\n    }, {\n      key: \"addEventListeners\",\n      value: function addEventListeners() {\n        this.modal.addEventListener('touchstart', this.onClick);\n        this.modal.addEventListener('click', this.onClick);\n        document.addEventListener('keydown', this.onKeydown);\n      }\n    }, {\n      key: \"removeEventListeners\",\n      value: function removeEventListeners() {\n        this.modal.removeEventListener('touchstart', this.onClick);\n        this.modal.removeEventListener('click', this.onClick);\n        document.removeEventListener('keydown', this.onKeydown);\n      }\n    }, {\n      key: \"onClick\",\n      value: function onClick(event) {\n        if (event.target.hasAttribute(this.config.closeTrigger)) {\n          this.closeModal(event);\n        }\n      }\n    }, {\n      key: \"onKeydown\",\n      value: function onKeydown(event) {\n        if (event.keyCode === 27) this.closeModal(event); // esc\n\n        if (event.keyCode === 9) this.retainFocus(event); // tab\n      }\n    }, {\n      key: \"getFocusableNodes\",\n      value: function getFocusableNodes() {\n        var nodes = this.modal.querySelectorAll(FOCUSABLE_ELEMENTS);\n        return Array.apply(void 0, _toConsumableArray(nodes));\n      }\n      /**\n       * Tries to set focus on a node which is not a close trigger\n       * if no other nodes exist then focuses on first close trigger\n       */\n\n    }, {\n      key: \"setFocusToFirstNode\",\n      value: function setFocusToFirstNode() {\n        var _this3 = this;\n\n        if (this.config.disableFocus) return;\n        var focusableNodes = this.getFocusableNodes(); // no focusable nodes\n\n        if (focusableNodes.length === 0) return; // remove nodes on whose click, the modal closes\n        // could not think of a better name :(\n\n        var nodesWhichAreNotCloseTargets = focusableNodes.filter(function (node) {\n          return !node.hasAttribute(_this3.config.closeTrigger);\n        });\n        if (nodesWhichAreNotCloseTargets.length > 0) nodesWhichAreNotCloseTargets[0].focus();\n        if (nodesWhichAreNotCloseTargets.length === 0) focusableNodes[0].focus();\n      }\n    }, {\n      key: \"retainFocus\",\n      value: function retainFocus(event) {\n        var focusableNodes = this.getFocusableNodes(); // no focusable nodes\n\n        if (focusableNodes.length === 0) return;\n        /**\n         * Filters nodes which are hidden to prevent\n         * focus leak outside modal\n         */\n\n        focusableNodes = focusableNodes.filter(function (node) {\n          return node.offsetParent !== null;\n        }); // if disableFocus is true\n\n        if (!this.modal.contains(document.activeElement)) {\n          focusableNodes[0].focus();\n        } else {\n          var focusedItemIndex = focusableNodes.indexOf(document.activeElement);\n\n          if (event.shiftKey && focusedItemIndex === 0) {\n            focusableNodes[focusableNodes.length - 1].focus();\n            event.preventDefault();\n          }\n\n          if (!event.shiftKey && focusableNodes.length > 0 && focusedItemIndex === focusableNodes.length - 1) {\n            focusableNodes[0].focus();\n            event.preventDefault();\n          }\n        }\n      }\n    }]);\n\n    return Modal;\n  }();\n  /**\n   * Modal prototype ends.\n   * Here on code is responsible for detecting and\n   * auto binding event handlers on modal triggers\n   */\n  // Keep a reference to the opened modal\n\n\n  var activeModal = null;\n  /**\n   * Generates an associative array of modals and it's\n   * respective triggers\n   * @param  {array} triggers     An array of all triggers\n   * @param  {string} triggerAttr The data-attribute which triggers the module\n   * @return {array}\n   */\n\n  var generateTriggerMap = function generateTriggerMap(triggers, triggerAttr) {\n    var triggerMap = [];\n    triggers.forEach(function (trigger) {\n      var targetModal = trigger.attributes[triggerAttr].value;\n      if (triggerMap[targetModal] === undefined) triggerMap[targetModal] = [];\n      triggerMap[targetModal].push(trigger);\n    });\n    return triggerMap;\n  };\n  /**\n   * Validates whether a modal of the given id exists\n   * in the DOM\n   * @param  {number} id  The id of the modal\n   * @return {boolean}\n   */\n\n\n  var validateModalPresence = function validateModalPresence(id) {\n    if (!document.getElementById(id)) {\n      console.warn(\"MicroModal: \\u2757Seems like you have missed %c'\".concat(id, \"'\"), 'background-color: #f8f9fa;color: #50596c;font-weight: bold;', 'ID somewhere in your code. Refer example below to resolve it.');\n      console.warn(\"%cExample:\", 'background-color: #f8f9fa;color: #50596c;font-weight: bold;', \"<div class=\\\"modal\\\" id=\\\"\".concat(id, \"\\\"></div>\"));\n      return false;\n    }\n  };\n  /**\n   * Validates if there are modal triggers present\n   * in the DOM\n   * @param  {array} triggers An array of data-triggers\n   * @return {boolean}\n   */\n\n\n  var validateTriggerPresence = function validateTriggerPresence(triggers) {\n    if (triggers.length <= 0) {\n      console.warn(\"MicroModal: \\u2757Please specify at least one %c'micromodal-trigger'\", 'background-color: #f8f9fa;color: #50596c;font-weight: bold;', 'data attribute.');\n      console.warn(\"%cExample:\", 'background-color: #f8f9fa;color: #50596c;font-weight: bold;', \"<a href=\\\"#\\\" data-micromodal-trigger=\\\"my-modal\\\"></a>\");\n      return false;\n    }\n  };\n  /**\n   * Checks if triggers and their corresponding modals\n   * are present in the DOM\n   * @param  {array} triggers   Array of DOM nodes which have data-triggers\n   * @param  {array} triggerMap Associative array of modals and their triggers\n   * @return {boolean}\n   */\n\n\n  var validateArgs = function validateArgs(triggers, triggerMap) {\n    validateTriggerPresence(triggers);\n    if (!triggerMap) return true;\n\n    for (var id in triggerMap) {\n      validateModalPresence(id);\n    }\n\n    return true;\n  };\n  /**\n   * Binds click handlers to all modal triggers\n   * @param  {object} config [description]\n   * @return void\n   */\n\n\n  var init = function init(config) {\n    // Create an config object with default openTrigger\n    var options = Object.assign({}, {\n      openTrigger: 'data-micromodal-trigger'\n    }, config); // Collects all the nodes with the trigger\n\n    var triggers = _toConsumableArray(document.querySelectorAll(\"[\".concat(options.openTrigger, \"]\"))); // Makes a mappings of modals with their trigger nodes\n\n\n    var triggerMap = generateTriggerMap(triggers, options.openTrigger); // Checks if modals and triggers exist in dom\n\n    if (options.debugMode === true && validateArgs(triggers, triggerMap) === false) return; // For every target modal creates a new instance\n\n    for (var key in triggerMap) {\n      var value = triggerMap[key];\n      options.targetModal = key;\n      options.triggers = _toConsumableArray(value);\n      activeModal = new Modal(options); // eslint-disable-line no-new\n    }\n  };\n  /**\n   * Shows a particular modal\n   * @param  {string} targetModal [The id of the modal to display]\n   * @param  {object} config [The configuration object to pass]\n   * @return {void}\n   */\n\n\n  var show = function show(targetModal, config) {\n    var options = config || {};\n    options.targetModal = targetModal; // Checks if modals and triggers exist in dom\n\n    if (options.debugMode === true && validateModalPresence(targetModal) === false) return; // clear events in case previous modal wasn't close\n\n    if (activeModal) activeModal.removeEventListeners(); // stores reference to active modal\n\n    activeModal = new Modal(options); // eslint-disable-line no-new\n\n    activeModal.showModal();\n  };\n  /**\n   * Closes the active modal\n   * @param  {string} targetModal [The id of the modal to close]\n   * @return {void}\n   */\n\n\n  var close = function close(targetModal) {\n    targetModal ? activeModal.closeModalById(targetModal) : activeModal.closeModal();\n  };\n\n  return {\n    init: init,\n    show: show,\n    close: close\n  };\n}();\nwindow.MicroModal = MicroModal;\n\nexport default MicroModal;\n","import MicroModal from \"micromodal\";\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  MicroModal.init({\n    disableScroll: true,\n    disableFocus: true,\n  });\n});\n\n/* ------------ Generic ------------- */\n\nfunction toArray(nodelist) {\n  const res = [];\n  for (let node of nodelist) {\n    res.push(node);\n  }\n\n  return res;\n}\n\n/* ------------ Questions ------------- */\n\nlet questionSlider = new Splide(document.querySelector(\".question-slider\"), {\n  gap: 12,\n  arrows: false,\n  pagination: false,\n}).mount();\n\nquestionSlider.nextItem = () => {\n  questionSlider.go(questionSlider.index + 1);\n};\n\nfunction QuestionBox(questionBox) {\n  const answer = questionBox.getAttribute(\"data-answer\");\n\n  const handleSelect = (event) => {\n    const correctOption = questionBox.querySelector(`input[value=${answer}]`)\n      .parentElement;\n\n    correctOption.classList.add(\"button-green\");\n\n    if (event.target.value !== answer) {\n      event.target.parentElement.classList.add(\"button-red\");\n    }\n\n    setTimeout(() => {\n      questionSlider.nextItem();\n    }, 700);\n  };\n\n  const radios = toArray(questionBox.querySelectorAll(\"input[type=radio]\"));\n  radios.forEach((elm) => elm.addEventListener(\"change\", handleSelect));\n}\n\ndocument.querySelectorAll(\".question-box\").forEach((elm) => QuestionBox(elm));\n\ndocument.querySelectorAll(\".answer-detail button\").forEach((elm) =>\n  elm.addEventListener(\"click\", () => {\n    questionSlider.nextItem();\n  })\n);\n\n/* ------------ Reasons ------------- */\n\nlet reasonSlider = new Splide(\n  document.querySelector(\".section-reasons--slider\"),\n  {\n    gap: 12,\n    arrows: true,\n  }\n).mount();\n\nlet heroContainer = document.querySelector(\".section-reasons--hero\");\n\nreasonSlider.on(\"moved\", () => {\n  const { index } = reasonSlider;\n  heroContainer.setAttribute(\"data-hero-display\", index);\n});\n"]}